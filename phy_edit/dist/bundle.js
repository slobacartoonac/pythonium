/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "../lib/ecs/drawers/drawFPS.js":
/*!*************************************!*\
  !*** ../lib/ecs/drawers/drawFPS.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nfunction FPSPloter(context) {\n  this.context = context;\n  this.time = new Date().getTime();\n  this.i = 0;\n  this.fps = 0;\n}\n\nFPSPloter.prototype.draw = function () {\n  this.i++;\n  var newTime = new Date().getTime();\n  var deltaT = newTime - this.time;\n  this.time = newTime;\n  this.context.font = '14px Verdana';\n  if (!(this.i % 30)) this.fps = Math.round(10000 / deltaT) / 10 + ' fps';\n  this.context.beginPath();\n  this.context.rect(10, 13, 60, 14);\n  this.context.fillStyle = 'gray';\n  this.context.fill();\n  this.context.fillStyle = 'red';\n  this.context.fillText(this.fps, 10, 24);\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (FPSPloter);\n\n//# sourceURL=webpack://chain_mould_effect/../lib/ecs/drawers/drawFPS.js?");

/***/ }),

/***/ "../lib/ecs/drawers/drawGrid.js":
/*!**************************************!*\
  !*** ../lib/ecs/drawers/drawGrid.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nfunction GridPloter(ctx, showCords) {\n  this.context = ctx;\n  this.showCords;\n}\n\nGridPloter.prototype.draw = function (sizex, sizey, view) {\n  const {\n    context\n  } = this;\n  var canvasWidth = context.canvas.clientWidth;\n  var canvasHeight = context.canvas.clientHeight;\n  const {\n    x: centerX,\n    y: centerY,\n    scale\n  } = view;\n  const canvasWidthHalf = canvasWidth / 2;\n  const canvasHeightHalf = canvasHeight / 2;\n  var gridScale = scale;\n\n  while (gridScale > 2) gridScale /= 2;\n\n  while (gridScale < 1) gridScale *= 2;\n\n  const stepX = sizex * gridScale;\n  const stepY = sizey * gridScale;\n  var startx = (-centerX * scale + canvasWidthHalf) % stepX;\n  var starty = (-centerY * scale + canvasHeightHalf) % stepY;\n  context.beginPath();\n\n  for (var x = startx; x <= canvasWidth; x += stepX) {\n    context.moveTo(x, 0);\n    context.lineTo(x, canvasHeight);\n  }\n\n  for (var y = starty; y <= canvasHeight; y += stepY) {\n    context.moveTo(0, y);\n    context.lineTo(canvasWidth, y);\n  }\n\n  context.lineWidth = 2;\n  context.strokeStyle = 'rgba(128, 128, 128, 0.5)';\n  context.stroke();\n  var startx = (startx + stepX / 2) % stepX;\n  var starty = (starty + stepY / 2) % stepY;\n  context.beginPath();\n\n  for (var x = startx; x <= canvasWidth; x += stepX) {\n    context.moveTo(x, 0);\n    context.lineTo(x, canvasHeight);\n  }\n\n  for (var y = starty; y <= canvasHeight; y += stepY) {\n    context.moveTo(0, y);\n    context.lineTo(canvasWidth, y);\n  }\n\n  context.lineWidth = 2;\n  context.strokeStyle = 'rgba(128, 128, 128, ' + (gridScale - 1.0) + ')';\n  context.stroke();\n\n  if (this.showCords) {\n    context.font = '10px Arial';\n    context.fillText(Math.round(view.x * 100) / 100 + Number.EPSILON + ',' + Math.round(view.y * 100 + Number.EPSILON) / 100 + ',' + Math.round(view.scale * 100 + Number.EPSILON) / 100, 10, 50);\n  }\n};\n\nGridPloter.prototype.line = function (startx, starty, sizex, sizey, color) {\n  this.context.lineWidth = 1;\n  this.context.moveTo(startx, starty);\n  this.context.lineTo(startx + sizex, starty + sizey);\n  this.context.strokeStyle = color;\n  this.context.stroke();\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (GridPloter);\n\n//# sourceURL=webpack://chain_mould_effect/../lib/ecs/drawers/drawGrid.js?");

/***/ }),

/***/ "../lib/ecs/drawers/drawMassCenter.js":
/*!********************************************!*\
  !*** ../lib/ecs/drawers/drawMassCenter.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MasCenterRenderEngine\": () => (/* binding */ MasCenterRenderEngine),\n/* harmony export */   \"MasCenterRender\": () => (/* binding */ MasCenterRender)\n/* harmony export */ });\n/* harmony import */ var _shapes_box_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../shapes/box.js */ \"../lib/shapes/box.js\");\n/* harmony import */ var _shapes_circle_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../shapes/circle.js */ \"../lib/shapes/circle.js\");\n/* harmony import */ var _physics_physics_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../physics/physics.js */ \"../lib/ecs/physics/physics.js\");\n/* harmony import */ var _physics_transform_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../physics/transform.js */ \"../lib/ecs/physics/transform.js\");\n/* harmony import */ var _math_vec__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../math/vec */ \"../lib/math/vec.js\");\n\n\n\n\n\n\nfunction MasCenterRender() {}\n\nfunction MasCenterRenderEngine(context, manager) {\n  this.context = context;\n  this.manager = manager;\n}\n\nMasCenterRenderEngine.prototype.draw = function (view) {\n  const {\n    context\n  } = this;\n  var canvasWidth = context.canvas.clientWidth;\n  var canvasHeight = context.canvas.clientHeight;\n  const {\n    x: centerX,\n    y: centerY,\n    scale\n  } = view;\n  const canvasWidthHalf = canvasWidth / 2;\n  const canvasHeightHalf = canvasHeight / 2;\n  const points = this.manager.getEnities(MasCenterRender).map((elem, index) => {\n    var transform = this.manager.get(_physics_transform_js__WEBPACK_IMPORTED_MODULE_3__.Transform, elem)[0];\n    var box = this.manager.get(_shapes_box_js__WEBPACK_IMPORTED_MODULE_0__.ShapeBox, elem)[0];\n    var physics = this.manager.get(_physics_physics_js__WEBPACK_IMPORTED_MODULE_2__.Physics, elem)[0];\n    return [transform.positions[0] + box.x / 2, transform.positions[1] + box.y / 2, physics.mass / 10000, \"#ffffff\", index];\n  });\n  points.forEach(element => {\n    var x = (element[0] - centerX) * scale + canvasWidthHalf;\n    var y = (element[1] - centerY) * scale + canvasHeightHalf;\n    if (x < 0 || y < 0 || x > canvasWidth || y > canvasHeight) return;\n    const elementSize = element[2] * scale > 1 ? element[2] * scale : 1;\n    context.beginPath();\n    context.arc(x, y, elementSize, 0, 2 * Math.PI, false);\n    context.lineWidth = 1;\n    context.strokeStyle = element[3];\n    context.stroke();\n    context.font = '14px Verdana';\n    context.fillStyle = element[3];\n    context.fillText(element[4], x, y + elementSize + 14);\n  });\n\n  if (points.length > 0) {\n    let mean = points.reduce((acc, point) => {\n      let totalMass = point[2] + acc[2];\n      let over = point[2] / totalMass;\n      let newCenter = (0,_math_vec__WEBPACK_IMPORTED_MODULE_4__.interpolateVecs)({\n        x: acc[0],\n        y: acc[1]\n      }, {\n        x: point[0],\n        y: point[1]\n      }, over);\n      return [newCenter.x, newCenter.y, totalMass];\n    }, [0, 0, 0]);\n    var x = (mean[0] - centerX) * scale + canvasWidthHalf;\n    var y = (mean[1] - centerY) * scale + canvasHeightHalf;\n    context.beginPath();\n    context.arc(x, y, 5, 0, 2 * Math.PI, false);\n    context.lineWidth = 1;\n    context.strokeStyle = \"#ff0000\";\n    context.fillStyle = \"#ff0000\";\n    context.stroke();\n    context.fill();\n  }\n};\n\n\n\n//# sourceURL=webpack://chain_mould_effect/../lib/ecs/drawers/drawMassCenter.js?");

/***/ }),

/***/ "../lib/ecs/drawers/ploter.js":
/*!************************************!*\
  !*** ../lib/ecs/drawers/ploter.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nfunction Ploter(canvas) {\n  this.canvas = canvas;\n  this.context = this.canvas.getContext('2d');\n  this.img = this.context.createImageData(this.canvas.width, this.canvas.height);\n}\n\nPloter.prototype.clear = function () {\n  this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n};\n\nPloter.prototype.getCanvas = function () {\n  return this.canvas;\n};\n\nPloter.prototype.worldToScreen = function (view, point) {\n  const {\n    width: canvasWidth,\n    height: canvasHeight\n  } = this.canvas;\n  const {\n    x: centerX,\n    y: centerY,\n    scale\n  } = view;\n  const canvasWidthHalf = canvasWidth / 2;\n  const canvasHeightHalf = canvasHeight / 2;\n  var screenX = (point[0] - centerX) * scale + canvasWidthHalf;\n  var screenY = (point[1] - centerY) * scale + canvasHeightHalf;\n  return [screenX, screenY];\n};\n\nPloter.prototype.screenToWorld = function (view, point) {\n  const {\n    width: canvasWidth,\n    height: canvasHeight\n  } = this.canvas;\n  const {\n    x: centerX,\n    y: centerY,\n    scale\n  } = view;\n  const canvasWidthHalf = canvasWidth / 2;\n  const canvasHeightHalf = canvasHeight / 2;\n  var worldX = (point[0] - canvasWidthHalf) / scale + centerX;\n  var worldY = (point[1] - canvasHeightHalf) / scale + centerY;\n  return [worldX, worldY];\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Ploter);\n\n//# sourceURL=webpack://chain_mould_effect/../lib/ecs/drawers/ploter.js?");

/***/ }),

/***/ "../lib/ecs/drawers/render.js":
/*!************************************!*\
  !*** ../lib/ecs/drawers/render.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"RenderEngine\": () => (/* binding */ RenderEngine),\n/* harmony export */   \"Renderer\": () => (/* binding */ Renderer)\n/* harmony export */ });\n/* harmony import */ var _physics_transform_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../physics/transform.js */ \"../lib/ecs/physics/transform.js\");\n/* harmony import */ var _shapes_box_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../shapes/box.js */ \"../lib/shapes/box.js\");\n/* harmony import */ var _shapes_circle_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../shapes/circle.js */ \"../lib/shapes/circle.js\");\n/* harmony import */ var _shapes_text_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../shapes/text.js */ \"../lib/shapes/text.js\");\n/* harmony import */ var _shapes_sprite_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../shapes/sprite.js */ \"../lib/shapes/sprite.js\");\n/* harmony import */ var _shapes_rounded_box_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../shapes/rounded-box.js */ \"../lib/shapes/rounded-box.js\");\n/* harmony import */ var _physics_transformRotate_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../physics/transformRotate.js */ \"../lib/ecs/physics/transformRotate.js\");\n\n\n\n\n\n\n\n\nfunction Renderer(color, stroke, layer) {\n  this.color = color;\n  this.stroke = stroke;\n  this.layer = layer || 0;\n}\n\nfunction RenderEngine(context, manager) {\n  this.context = context;\n  this.manager = manager;\n  this.maxSize = 100;\n}\n\nfunction shapeDone(context, renderer) {\n  if (renderer.color) {\n    context.fillStyle = renderer.color;\n    context.fill();\n  }\n\n  if (renderer.stroke) {\n    context.strokeStyle = renderer.stroke.color;\n    context.lineWidth = renderer.stroke.width;\n    context.stroke();\n  }\n}\n\nfunction roundedRect(context, x, y, width, height, radius) {\n  context.moveTo(x, y + radius);\n  context.lineTo(x, y + height - radius);\n  context.arcTo(x, y + height, x + radius, y + height, radius);\n  context.lineTo(x + width - radius, y + height);\n  context.arcTo(x + width, y + height, x + width, y + height - radius, radius);\n  context.lineTo(x + width, y + radius);\n  context.arcTo(x + width, y, x + width - radius, y, radius);\n  context.lineTo(x + radius, y);\n  context.arcTo(x, y, x, y + radius, radius);\n}\n\nRenderEngine.prototype.draw = function (view) {\n  const {\n    context\n  } = this;\n  var canvasWidth = context.canvas.clientWidth;\n  var canvasHeight = context.canvas.clientHeight;\n  const {\n    x: centerX,\n    y: centerY,\n    scale,\n    angle\n  } = view;\n  const canvasWidthHalf = canvasWidth / 2;\n  const canvasHeightHalf = canvasHeight / 2;\n  const maxSize = this.maxSize * scale;\n\n  if (angle) {\n    context.save();\n    context.translate(canvasWidthHalf, canvasHeightHalf);\n    context.rotate(angle);\n    context.translate(-canvasWidthHalf, -canvasHeightHalf);\n  }\n\n  this.manager.getEnities(Renderer).map(elem => {\n    var renderer = this.manager.get(Renderer, elem)[0];\n    return [elem, renderer];\n  }).sort(([, a], [, b]) => {\n    if (a.layer < b.layer) {\n      return -1;\n    }\n\n    if (a.layer > b.layer) {\n      return 1;\n    } // a must be equal to b\n\n\n    return 0;\n  }).map(([elem, renderer]) => {\n    var transform = this.manager.get(_physics_transform_js__WEBPACK_IMPORTED_MODULE_0__.Transform, elem)[0];\n    var x = (transform.positions[0] - centerX) * scale + canvasWidthHalf;\n    var y = (transform.positions[1] - centerY) * scale + canvasHeightHalf;\n    if (x < -maxSize || y < -maxSize || x > canvasWidth || y > canvasHeight) return;\n    let circles = this.manager.get(_shapes_circle_js__WEBPACK_IMPORTED_MODULE_2__.ShapeCircle, elem);\n\n    for (let i in circles) {\n      let circle = circles[i];\n      const elementSize = circle.radius * scale > 1 ? circle.radius * scale : 1;\n      context.beginPath();\n      context.arc(x, y, elementSize, 0, 2 * Math.PI, false);\n      shapeDone(context, renderer);\n    }\n\n    let boxes = this.manager.get(_shapes_box_js__WEBPACK_IMPORTED_MODULE_1__.ShapeBox, elem);\n    let rounded = this.manager.get(_shapes_rounded_box_js__WEBPACK_IMPORTED_MODULE_5__.ShapeRounded, elem);\n    let rotate = this.manager.get(_physics_transformRotate_js__WEBPACK_IMPORTED_MODULE_6__.TransformRotate, elem)[0];\n\n    for (let i in boxes) {\n      let box = boxes[i];\n      const size_x = box.x * scale > 1 ? box.x * scale : 1;\n      const size_y = box.y * scale > 1 ? box.y * scale : 1;\n      context.save();\n\n      if (rotate) {\n        context.translate(x + size_x / 2, y + size_y / 2);\n        context.rotate(rotate.rotate);\n        context.translate(-x - size_x / 2, -y - size_y / 2);\n      }\n\n      context.beginPath();\n\n      if (rounded[0]) {\n        roundedRect(context, x, y, size_x, size_y, rounded[0].radius);\n      } else {\n        context.rect(x, y, size_x, size_y);\n      }\n\n      shapeDone(context, renderer);\n      context.restore();\n    }\n\n    let sprites = this.manager.get(_shapes_sprite_js__WEBPACK_IMPORTED_MODULE_4__.Sprite, elem);\n\n    for (let i in sprites) {\n      let sprite = sprites[i];\n      let box = boxes[0];\n\n      if (!box) {\n        break;\n      }\n\n      const size_x = box.x * scale > 1 ? box.x * scale + 0.5 : 1;\n      const size_y = box.y * scale > 1 ? box.y * scale + 0.5 : 1;\n      context.save();\n\n      if (rotate) {\n        context.translate(x + size_x / 2, y + size_y / 2);\n        context.rotate(rotate.rotate);\n        context.translate(-x - size_x / 2, -y - size_y / 2);\n      }\n\n      context.drawImage(sprite.image, x, y, size_x, size_y);\n      context.restore();\n    }\n\n    let texts = this.manager.get(_shapes_text_js__WEBPACK_IMPORTED_MODULE_3__.ShapeText, elem);\n\n    for (let i in texts) {\n      let text = texts[i];\n      const size_y = text.font * scale > 1 ? text.font * scale : 1;\n      context.fillStyle = renderer.color;\n      context.font = parseInt(size_y) + 'px serif';\n      context.save();\n\n      if (rotate) {\n        context.translate(x, y);\n        context.rotate(rotate.rotate);\n        context.translate(-x, -y);\n      }\n\n      context.fillText(text.text, x, y + parseInt(size_y));\n      context.restore();\n    }\n  });\n\n  if (angle) {\n    context.restore();\n  }\n};\n\nRenderEngine.prototype.mesure = function (text) {\n  const {\n    context\n  } = this;\n  context.font = parseInt(text.font) + 'px serif';\n  return context.measureText(text.text);\n};\n\n\n\n//# sourceURL=webpack://chain_mould_effect/../lib/ecs/drawers/render.js?");

/***/ }),

/***/ "../lib/ecs/drawers/select_ecs.js":
/*!****************************************!*\
  !*** ../lib/ecs/drawers/select_ecs.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Selectable\": () => (/* binding */ Selectable),\n/* harmony export */   \"SelectableRenderEngine\": () => (/* binding */ SelectableRenderEngine)\n/* harmony export */ });\n/* harmony import */ var _shapes_circle_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../shapes/circle.js */ \"../lib/shapes/circle.js\");\n/* harmony import */ var _physics_transform_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../physics/transform.js */ \"../lib/ecs/physics/transform.js\");\n\n\n\nfunction Selectable() {\n  this.isSelected = false;\n  this.index = 0;\n}\n\nfunction SelectableRenderEngine(context, manager, selector) {\n  this.context = context;\n  this.manager = manager;\n  this.selector = selector;\n}\n\nSelectableRenderEngine.prototype.draw = function (view) {\n  const {\n    context\n  } = this;\n  var canvasWidth = context.canvas.clientWidth;\n  var canvasHeight = context.canvas.clientHeight;\n  const {\n    x: centerX,\n    y: centerY,\n    scale\n  } = view;\n  const canvasWidthHalf = canvasWidth / 2;\n  const canvasHeightHalf = canvasHeight / 2;\n  const points = this.manager.getEnities(Selectable).filter(elem => {\n    var selectable = this.manager.get(Selectable, elem)[0];\n    return selectable.isSelected;\n  }).map(elem => {\n    var selectable = this.manager.get(Selectable, elem)[0];\n    var transform = this.manager.get(_physics_transform_js__WEBPACK_IMPORTED_MODULE_1__.Transform, elem)[0];\n    var circle = this.manager.get(_shapes_circle_js__WEBPACK_IMPORTED_MODULE_0__.ShapeCircle, elem)[0];\n    return [transform.positions[0], transform.positions[1], circle.radius + 1, \"#ffffff\", selectable.index];\n  });\n  points.forEach(element => {\n    var x = (element[0] - centerX) * scale + canvasWidthHalf;\n    var y = (element[1] - centerY) * scale + canvasHeightHalf;\n    if (x < 0 || y < 0 || x > canvasWidth || y > canvasHeight) return;\n    const elementSize = element[2] * scale > 1 ? element[2] * scale : 1;\n    context.beginPath();\n    context.arc(x, y, elementSize, 0, 2 * Math.PI, false);\n    context.lineWidth = 1;\n    context.strokeStyle = element[3];\n    context.stroke();\n    context.font = '14px Verdana';\n    context.fillStyle = element[3];\n    context.fillText(element[4], x, y + elementSize + 14);\n  });\n\n  if (points.length > 1) {\n    const mean = this.selector.findMean();\n    var x = (mean[0] - centerX) * scale + canvasWidthHalf;\n    var y = (mean[1] - centerY) * scale + canvasHeightHalf;\n    context.beginPath();\n    context.arc(x, y, 5, 0, 2 * Math.PI, false);\n    context.lineWidth = 1;\n    context.strokeStyle = \"#00ff00\";\n    context.stroke();\n  }\n\n  if (this.selector.area.length) {\n    var startx = (this.selector.area[0][0] - centerX) * scale + canvasWidthHalf;\n    var starty = (this.selector.area[0][1] - centerY) * scale + canvasHeightHalf;\n    var endx = (this.selector.area[1][0] - centerX) * scale + canvasWidthHalf;\n    var endy = (this.selector.area[1][1] - centerY) * scale + canvasHeightHalf;\n    context.beginPath();\n    context.moveTo(startx, starty);\n    context.lineTo(endx, starty);\n    context.lineTo(endx, endy);\n    context.lineTo(startx, endy);\n    context.lineTo(startx, starty);\n    context.lineWidth = 2;\n    context.strokeStyle = 'rgba(255, 255, 255, 1.0)';\n    context.stroke();\n  }\n};\n\n\n\n//# sourceURL=webpack://chain_mould_effect/../lib/ecs/drawers/select_ecs.js?");

/***/ }),

/***/ "../lib/ecs/index.js":
/*!***************************!*\
  !*** ../lib/ecs/index.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Entity\": () => (/* binding */ Entity),\n/* harmony export */   \"EntityManager\": () => (/* binding */ EntityManager)\n/* harmony export */ });\nconst ENTITY_INDEX_BITS = 22;\nconst ENTITY_INDEX_MASK = (1 << ENTITY_INDEX_BITS) - 1;\nconst ENTITY_GENERATION_BITS = 8;\nconst ENTITY_GENERATION_MASK = (1 << ENTITY_GENERATION_BITS) - 1;\nconst MINIMUM_FREE_INDICES = 0;\n\nfunction Entity(id) {\n  this.id = id;\n}\n\nEntity.prototype.index = function () {\n  return this.id & ENTITY_INDEX_MASK;\n};\n\nEntity.prototype.generation = function () {\n  return this.id >> ENTITY_INDEX_BITS & ENTITY_GENERATION_MASK;\n};\n\nfunction EntityManager() {\n  this._generation = {};\n  this._free_indices = [];\n  this._entities = {};\n  this._components = {};\n  this.__entities_with_type = {};\n}\n\nEntityManager.prototype.create = function () {\n  var idx = 0;\n\n  if (this._free_indices.length > MINIMUM_FREE_INDICES) {\n    idx = this._free_indices.shift();\n  } else {\n    idx = Object.keys(this._generation).length;\n    this._generation[idx] = 0;\n  }\n\n  var entity = this.make_entity(idx, this._generation[idx]);\n  this._entities[idx] = entity;\n  return entity;\n};\n\nEntityManager.prototype.make_entity = function (idx, generation) {\n  return new Entity(idx + (generation << ENTITY_INDEX_BITS));\n};\n\nEntityManager.prototype.alive = function (e) {\n  return this._generation[e.index()] == e.generation();\n};\n\nEntityManager.prototype.destroy = function (e) {\n  this._components[e.id] = undefined;\n  this._entities[e.id] = undefined;\n  ++this._generation[e.index()];\n\n  this._free_indices.push(e.index());\n};\n\nEntityManager.prototype.asign = function (component, e) {\n  var entity_components = this._components[e.id];\n\n  if (!entity_components) {\n    this._components[e.id] = {\n      [component.constructor.name]: [component]\n    };\n    return;\n  }\n\n  var components_of_type = entity_components[component.constructor.name];\n\n  if (!components_of_type) {\n    this._components[e.id][component.constructor.name] = [component];\n    return;\n  }\n\n  if (components_of_type && entity_components[component.constructor.name].find(comp => component === comp)) throw Error('Component is allready asiged');\n  entity_components[component.constructor.name].push(component);\n};\n\nEntityManager.prototype.get = function (c_type, e) {\n  var entity_components = this._components[e.id];\n\n  if (!entity_components) {\n    return [];\n  }\n\n  var components_of_type = entity_components[c_type.name];\n\n  if (!components_of_type) {\n    return [];\n  }\n\n  return components_of_type;\n};\n\nEntityManager.prototype.remove = function (component, e) {\n  var entity_components = this._components[e.id];\n\n  if (!entity_components) {\n    return;\n  }\n\n  var components_of_type = entity_components[component.constructor.name];\n\n  if (!components_of_type) {\n    return;\n  }\n\n  entity_components[component.constructor.name] = entity_components[component.constructor.name].filter(function (compon) {\n    return compon !== component;\n  });\n};\n\nEntityManager.prototype.getEnities = function (c_type) {\n  return Object.values(this._entities).filter(entity => {\n    return this.get(c_type, entity).length;\n  });\n};\n\n\n\n//# sourceURL=webpack://chain_mould_effect/../lib/ecs/index.js?");

/***/ }),

/***/ "../lib/ecs/physics/chainEngine.js":
/*!*****************************************!*\
  !*** ../lib/ecs/physics/chainEngine.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ChainLink\": () => (/* binding */ ChainLink),\n/* harmony export */   \"ChainEngine\": () => (/* binding */ ChainEngine)\n/* harmony export */ });\n/* harmony import */ var _physics_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./physics.js */ \"../lib/ecs/physics/physics.js\");\n/* harmony import */ var _transform_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transform.js */ \"../lib/ecs/physics/transform.js\");\n\n\n\nfunction ChainLink(connects, distance) {\n  this.connects = connects;\n  this.distance = distance;\n}\n\nfunction computeChainForce(naibor, transform) {\n  var ret = [0, 0];\n  naibor.forEach(({\n    transform: naiborTranform,\n    distance: naiborDistance\n  }) => {\n    var distanceX = naiborTranform.positions[0] - transform.positions[0];\n    var distanceY = naiborTranform.positions[1] - transform.positions[1];\n    var distanceAngle = Math.atan2(distanceY, distanceX);\n    var distance = Math.sqrt(distanceX * distanceX + distanceY * distanceY);\n    var distanceNormalised = distance / naiborDistance;\n    var forceIntencity = Math.atan((distanceNormalised - 1) * 5) + Math.pow(distanceNormalised - 1, 3);\n    var forceComponents = {\n      x: Math.cos(distanceAngle) * forceIntencity,\n      y: Math.sin(distanceAngle) * forceIntencity\n    };\n    ret[0] += forceComponents.x;\n    ret[1] += forceComponents.y;\n  });\n  return ret;\n}\n\nfunction ChainEngine(manager) {\n  this.manager = manager;\n}\n\nChainEngine.prototype.compute = function () {\n  this.manager.getEnities(ChainLink).map(elem => {\n    var chainLinks = this.manager.get(ChainLink, elem);\n    var naibor = chainLinks.map(link => ({\n      transform: this.manager.get(_transform_js__WEBPACK_IMPORTED_MODULE_1__.Transform, link.connects)[0],\n      distance: link.distance\n    }));\n    var transform = this.manager.get(_transform_js__WEBPACK_IMPORTED_MODULE_1__.Transform, elem)[0];\n    var physics = this.manager.get(_physics_js__WEBPACK_IMPORTED_MODULE_0__.Physics, elem)[0];\n    var force = computeChainForce(naibor, transform);\n    physics.applyForce(force);\n  });\n};\n\n\n\n//# sourceURL=webpack://chain_mould_effect/../lib/ecs/physics/chainEngine.js?");

/***/ }),

/***/ "../lib/ecs/physics/colisionEngine.js":
/*!********************************************!*\
  !*** ../lib/ecs/physics/colisionEngine.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ColisionEngine\": () => (/* binding */ ColisionEngine)\n/* harmony export */ });\n/* harmony import */ var _shapes_circle_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../shapes/circle.js */ \"../lib/shapes/circle.js\");\n/* harmony import */ var _physics_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./physics.js */ \"../lib/ecs/physics/physics.js\");\n/* harmony import */ var _transform_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./transform.js */ \"../lib/ecs/physics/transform.js\");\n\n\n\n\nfunction ColisionEngine(manager) {\n  this.manager = manager;\n  this.physic_entity = null;\n}\n\nfunction computeColision(compute, naibors) {\n  var ret = [0, 0];\n  naibors.forEach(element => {\n    if (element == compute) return;\n    var distanceX = element.positions[0] - compute.positions[0];\n    var distanceY = element.positions[1] - compute.positions[1];\n    var centerDistance = compute.radius + element.radius;\n    if (Math.abs(distanceX) > centerDistance || Math.abs(distanceY) > centerDistance) return;\n    var distanceAngle = Math.atan2(distanceY, distanceX);\n    var distance = Math.sqrt(distanceX * distanceX + distanceY * distanceY);\n    if (distance > centerDistance) return;\n    var distanceNormalised = distance / centerDistance;\n    var forceIntencity = Math.pow(distanceNormalised - 1, 3);\n    var forceComponents = {\n      x: Math.cos(distanceAngle) * forceIntencity,\n      y: Math.sin(distanceAngle) * forceIntencity\n    };\n    ret[0] += forceComponents.x;\n    ret[1] += forceComponents.y;\n  });\n  return ret;\n}\n\nColisionEngine.prototype.compute = function () {\n  var physic_entity = this.manager.getEnities(_physics_js__WEBPACK_IMPORTED_MODULE_1__.Physics).map(elem => {\n    var circle = this.manager.get(_shapes_circle_js__WEBPACK_IMPORTED_MODULE_0__.ShapeCircle, elem)[0];\n    var transform = this.manager.get(_transform_js__WEBPACK_IMPORTED_MODULE_2__.Transform, elem)[0];\n    return {\n      e: elem,\n      radius: circle.radius,\n      positions: transform.positions\n    };\n  });\n\n  for (var i = 0; i < physic_entity.length; i++) {\n    var elem = physic_entity[i];\n    var force = computeColision(elem, physic_entity);\n    var physics = this.manager.get(_physics_js__WEBPACK_IMPORTED_MODULE_1__.Physics, elem.e)[0];\n    physics.applyForce(force);\n  }\n};\n\n\n\n//# sourceURL=webpack://chain_mould_effect/../lib/ecs/physics/colisionEngine.js?");

/***/ }),

/***/ "../lib/ecs/physics/physics.js":
/*!*************************************!*\
  !*** ../lib/ecs/physics/physics.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"PhysicsEngine\": () => (/* binding */ PhysicsEngine),\n/* harmony export */   \"Physics\": () => (/* binding */ Physics)\n/* harmony export */ });\n/* harmony import */ var _transform__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transform */ \"../lib/ecs/physics/transform.js\");\n\n\nfunction Physics(speeds, mass, drag) {\n  this.speeds = speeds;\n  this.mass = mass;\n  this.drag = isNaN(drag) ? 0.001 : drag;\n  this.maxSpeed = 100;\n}\n\nPhysics.prototype.applyForce = function (force) {\n  for (var i = 0; i < this.speeds.length; i++) {\n    this.speeds[i] += force[i] / this.mass;\n  }\n};\n\nPhysics.prototype.applyAsc = function (asc) {\n  for (var i = 0; i < this.speeds.length; i++) {\n    this.speeds[i] += asc[i];\n  }\n};\n\nPhysics.prototype.compute = function () {\n  var speedValue = 0;\n  var i;\n\n  for (i = 0; i < this.speeds.length; i++) {\n    speedValue += this.speeds[i] * this.speeds[i];\n  }\n\n  var speedMultipliyer = Math.min(1 - this.drag, this.maxSpeed / speedValue);\n\n  for (i = 0; i < this.speeds.length; i++) {\n    this.speeds[i] *= speedMultipliyer;\n  }\n};\n\nfunction PhysicsEngine(manager, engines) {\n  this.manager = manager;\n  this.engines = engines;\n}\n\nPhysicsEngine.prototype.compute = function () {\n  this.engines.forEach(engine => engine.compute());\n  this.manager.getEnities(Physics).forEach(elem => {\n    var physics = this.manager.get(Physics, elem)[0];\n    physics.compute();\n    var transform = this.manager.get(_transform__WEBPACK_IMPORTED_MODULE_0__.Transform, elem)[0];\n    transform.positions.add(physics.speeds);\n  });\n};\n\n\n\n//# sourceURL=webpack://chain_mould_effect/../lib/ecs/physics/physics.js?");

/***/ }),

/***/ "../lib/ecs/physics/transform.js":
/*!***************************************!*\
  !*** ../lib/ecs/physics/transform.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Transform\": () => (/* binding */ Transform)\n/* harmony export */ });\n/* harmony import */ var _shapes_vector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../shapes/vector */ \"../lib/shapes/vector.js\");\n\n\nfunction Transform(positions) {\n  this.positions = new _shapes_vector__WEBPACK_IMPORTED_MODULE_0__.Vector(positions);\n}\n\n\n\n//# sourceURL=webpack://chain_mould_effect/../lib/ecs/physics/transform.js?");

/***/ }),

/***/ "../lib/ecs/physics/transformRotate.js":
/*!*********************************************!*\
  !*** ../lib/ecs/physics/transformRotate.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TransformRotate\": () => (/* binding */ TransformRotate)\n/* harmony export */ });\n/* harmony import */ var _shapes_vector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../shapes/vector */ \"../lib/shapes/vector.js\");\n\n\nfunction TransformRotate(rotate) {\n  this.rotate = rotate;\n}\n\n\n\n//# sourceURL=webpack://chain_mould_effect/../lib/ecs/physics/transformRotate.js?");

/***/ }),

/***/ "../lib/fe/select.js":
/*!***************************!*\
  !*** ../lib/fe/select.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// written by Slobodan Zivkovic slobacartoonac@gmail.com\nfunction Select() {\n  this.selection = [];\n  this.area = [];\n}\n\nSelect.prototype.findMean = function () {\n  var sumX = 0;\n  var sumY = 0;\n  var len = this.selection.length;\n  this.selection.forEach(point => {\n    sumX += point[0];\n    sumY += point[1];\n  });\n  var meanX = sumX / len;\n  var meanY = sumY / len;\n  return [meanX, meanY];\n};\n\nSelect.prototype.orderValue = function (geomean, point, shiftAngle) {\n  shiftAngle = shiftAngle ? shiftAngle : 0;\n  var tempAngle = Math.atan2(geomean[1] - point[1], geomean[0] - point[0]) - shiftAngle; // shift range to [0, 2PI) making start point first\n\n  if (tempAngle < 0) {\n    tempAngle += Math.PI * 2;\n  }\n\n  return tempAngle;\n};\n\nSelect.prototype.sort = function () {\n  var mean = this.findMean();\n  var shiftAngle = Math.atan2(mean[1] - this.selection[0][1], mean[0] - this.selection[0][0]); // make array of elements with order values\n\n  var tempArray = this.selection.map(point => [this.orderValue(mean, point, shiftAngle), point]);\n  tempArray.sort((a, b) => a[0] - b[0]); //extract ordered original array elements\n\n  this.selection = tempArray.map(el => el[1]);\n};\n\nSelect.prototype.proccesSelection = function (selectedPoints) {\n  if (!selectedPoints.length) {\n    this.selection = []; //selected empty space, deselect evrything\n\n    this.mean = null;\n    return this.selection;\n  } // remove duplicates\n\n\n  this.selection = this.selection.concat(selectedPoints).filter((thing, index, self) => index === self.findIndex(t => t[0] === thing[0] && t[1] === thing[1]));\n  this.sort();\n  return this.selection;\n};\n\nSelect.prototype.pointSelect = function (point, pointSpace, precision) {\n  var precisionSq = precision * precision;\n  var selectedPoints = pointSpace.map(testPoint => {\n    var difX = testPoint[0] - point[0];\n    var difY = testPoint[1] - point[1];\n    var difSq = difX * difX + difY * difY; // square diffrence\n\n    return [difSq, testPoint];\n  }).reduce((acc, elem) => {\n    let [difSq] = elem;\n    if (difSq > precisionSq) return acc; //squares are compared to avoid sqrt\n\n    if (!acc.length) return [elem];\n    return difSq < acc[0] ? [elem] : acc;\n  }, []).map(([_, point]) => point);\n  return this.proccesSelection(selectedPoints);\n};\n\nSelect.prototype.setArea = function (pointStart, pointEnd) {\n  var startX = pointStart[0] < pointEnd[0] ? pointStart[0] : pointEnd[0];\n  var startY = pointStart[1] < pointEnd[1] ? pointStart[1] : pointEnd[1];\n  var endX = pointStart[0] > pointEnd[0] ? pointStart[0] : pointEnd[0];\n  var endY = pointStart[1] > pointEnd[1] ? pointStart[1] : pointEnd[1];\n  this.area = [[startX, startY], [endX, endY]];\n};\n\nSelect.prototype.areaSelect = function (pointStart, pointEnd, pointSpace) {\n  this.area = [];\n  var startX = pointStart[0] < pointEnd[0] ? pointStart[0] : pointEnd[0];\n  var startY = pointStart[1] < pointEnd[1] ? pointStart[1] : pointEnd[1];\n  var endX = pointStart[0] > pointEnd[0] ? pointStart[0] : pointEnd[0];\n  var endY = pointStart[1] > pointEnd[1] ? pointStart[1] : pointEnd[1];\n  var selectedPoints = pointSpace.filter(testPoint => {\n    return testPoint[0] > startX && testPoint[1] > startY && testPoint[0] < endX && testPoint[1] < endY;\n  });\n  return this.proccesSelection(selectedPoints);\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Select);\n\n//# sourceURL=webpack://chain_mould_effect/../lib/fe/select.js?");

/***/ }),

/***/ "../lib/fe/touch.js":
/*!**************************!*\
  !*** ../lib/fe/touch.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// written by Slobodan Zivkovic slobacartoonac@gmail.com\nfunction distance2d(a, b) {\n  return Math.sqrt((a.x - b.x) * (a.x - b.x) + (a.y - b.y) * (a.y - b.y));\n}\n\nfunction len2d(a) {\n  return Math.sqrt(a.x * a.x + a.y * a.y);\n}\n\nfunction getDelta(p1, n1, p2, n2) {\n  if (!n2) {\n    return {\n      x: n1.x - p1.x,\n      y: n1.y - p1.y\n    };\n  }\n\n  return {\n    x: (n1.x - p1.x + (n2.x - p2.x)) / 2,\n    y: (n1.y - p1.y + (n2.y - p2.y)) / 2\n  };\n}\n\nfunction getZoom(p1, n1, p2, n2) {\n  if (!n2) {\n    return 1;\n  }\n\n  if (!p2) {\n    return 1;\n  }\n\n  let initialDistance = distance2d(p1, p2);\n  let newDistance = distance2d(n1, n2);\n  if (initialDistance < 0.01) return 1;else return newDistance / initialDistance;\n}\n\nfunction getAngleDelta(p1, n1, p2, n2) {\n  if (!n2) {\n    return 0;\n  }\n\n  let angle1 = getAngle(p1, p2);\n  let angle2 = getAngle(n1, n2);\n  return angle2 - angle1;\n}\n\nfunction getAngle(p1, n1) {\n  let delta = getDelta(p1, n1);\n  let angle = Math.atan2(delta.y, delta.x);\n  return angle;\n}\n\nfunction Touch(div, deadzone) {\n  this.deadzone = deadzone;\n  this.clear();\n  let startPosition = null;\n  let startMoveSecound = null;\n  let position = null;\n  let thisMoveSecound = null;\n  let mouseDown = 0;\n  let click = true;\n  let touch = false;\n  let touchSecound = false;\n  this.mousePosition = {\n    x: 0,\n    y: 0\n  };\n  this.debug = false;\n  this.console_error = false;\n  this.throw_error = false;\n  this.last_error = '';\n\n  const moveTouchT = e => {\n    e.preventDefault();\n    const {\n      top,\n      left\n    } = e.target.getBoundingClientRect();\n\n    if (e.touches[1] && e.touches[0]) {\n      let first = {\n        x: e.touches[0].clientX - left,\n        y: e.touches[0].clientY - top\n      };\n      let secound = {\n        x: e.touches[1].clientX - left,\n        y: e.touches[1].clientY - top\n      };\n      this.mousePosition = {\n        x: (first.x + secound.x) / 2,\n        y: (first.y + secound.y) / 2\n      };\n      return moveTouch(first, secound);\n    }\n\n    if (e.touches[0]) {\n      let first = {\n        x: e.touches[0].clientX - left,\n        y: e.touches[0].clientY - top\n      };\n      this.mousePosition = {\n        x: first.x,\n        y: first.y\n      };\n      return moveTouch(first);\n    }\n  };\n\n  const moveTouchM = e => {\n    e.preventDefault();\n    const {\n      top,\n      left\n    } = e.target.getBoundingClientRect();\n    this.mousePosition = {\n      x: e.clientX - left,\n      y: e.clientY - top\n    };\n    if (mouseDown) moveTouch({\n      x: e.clientX - left,\n      y: e.clientY - top\n    });\n  };\n\n  const moveTouch = (e, secound) => {\n    touch = true;\n\n    if (startPosition == null) {\n      startPosition = {\n        x: e.x,\n        y: e.y\n      };\n      position = {\n        x: e.x,\n        y: e.y\n      };\n      this.triger('start', position);\n      click = true;\n      return;\n    }\n\n    if (secound && startMoveSecound == null) {\n      touchSecound = true;\n\n      if (distance2d(startPosition, secound) < distance2d(startPosition, e)) {\n        //switched touches\n        startPosition = {\n          x: e.x,\n          y: e.y\n        };\n        position = {\n          x: e.x,\n          y: e.y\n        };\n      }\n\n      startMoveSecound = {\n        x: secound.x,\n        y: secound.y\n      };\n      thisMoveSecound = {\n        x: secound.x,\n        y: secound.y\n      };\n      return;\n    }\n\n    if (!secound && startMoveSecound) {\n      touchSecound = false;\n      startMoveSecound = null;\n      thisMoveSecound = null;\n      return;\n    }\n\n    let delta = getDelta(position, e, thisMoveSecound, secound);\n    let deltaZoom = getZoom(position, e, thisMoveSecound, secound);\n    let deltaAngle = getAngleDelta(position, e, thisMoveSecound, secound);\n    position = {\n      x: e.x,\n      y: e.y\n    };\n    thisMoveSecound = secound ? {\n      x: secound.x,\n      y: secound.y\n    } : null;\n    let direction = getDelta(startPosition, position, startMoveSecound, thisMoveSecound);\n    let zoom = getZoom(startPosition, position, startMoveSecound, thisMoveSecound);\n    let distance = len2d(direction);\n    let angle = getAngleDelta(startPosition, position, startMoveSecound, thisMoveSecound);\n    let debug = this.debug && `${startPosition && 'Start: ' + JSON.stringify(startPosition)},\n\t\t${position && 'This: ' + JSON.stringify(position)}, \n\t\t${startMoveSecound && 'Start secound: ' + JSON.stringify(startMoveSecound)}, \n\t\t${thisMoveSecound && 'Start this: ' + JSON.stringify(thisMoveSecound)},\n\t\t${delta && 'Delta: ' + JSON.stringify(delta)},\n\t\t${'Zoom: ' + zoom},\n\t\t${'DZoom: ' + deltaZoom}\n\t\t${'Angle: ' + angle}\n\t\t${'DAngle: ' + deltaAngle}\n\t\t${'isPrimary: ' + (!touchSecound && mouseDown == 0 || mouseDown == 1)}\n\t\t${this.last_error}`;\n    let addition = {\n      delta,\n      direction,\n      startPosition,\n      position,\n      distance,\n      click,\n      isClick: click,\n      mouseDown,\n      zoom,\n      deltaZoom,\n      touchSecound,\n      angle,\n      deltaAngle,\n      isPrimary: !touchSecound && mouseDown == 0 || mouseDown == 1,\n      debug\n    };\n    this.triger('force', addition);\n\n    if (distance > this.deadzone) {\n      click = false;\n\n      if (Math.abs(direction.x) > Math.abs(direction.y)) {\n        if (direction.x > 0) {\n          this.triger('right', addition);\n        } else {\n          this.triger('left', addition);\n        }\n      } else if (direction.y > 0) {\n        this.triger('down', addition);\n      } else {\n        this.triger('up', addition);\n      }\n    }\n  }; //= {up:[],down:[],left:[],right:[],stop:[],click:[],force:[]}\n\n\n  const stopTouch = e => {\n    e.preventDefault();\n\n    if (touch == false) {\n      return;\n    }\n\n    let delta = {\n      x: 0,\n      y: 0\n    };\n    let deltaZoom = 0;\n    let deltaAngle = 0;\n    let direction = getDelta(startPosition, position, startMoveSecound, thisMoveSecound);\n    let zoom = getZoom(startPosition, position, startMoveSecound, thisMoveSecound);\n    let angle = getAngleDelta(startPosition, position, startMoveSecound, thisMoveSecound);\n    let distance = len2d(direction);\n    let debug = this.debug && `${startPosition && 'Start: ' + JSON.stringify(startPosition)},\n\t\t${position && 'This: ' + JSON.stringify(position)}, \n\t\t${startMoveSecound && 'Start secound: ' + JSON.stringify(startMoveSecound)}, \n\t\t${thisMoveSecound && 'Start this: ' + JSON.stringify(thisMoveSecound)},\n\t\t${delta && 'Delta: ' + JSON.stringify(delta)},\n\t\t${'Zoom: ' + zoom},\n\t\t${'DZoom: ' + deltaZoom}\n\t\t${'Angle: ' + angle}\n\t\t${'DAngle: ' + deltaAngle}\n\t\t${'isPrimary: ' + (!touchSecound && mouseDown == 0 || mouseDown == 1)}\n\t\t${this.last_error}`;\n    const addition = {\n      x: startPosition.x,\n      y: startPosition.y,\n      delta,\n      direction,\n      startPosition,\n      position,\n      distance,\n      click,\n      isClick: click,\n      mouseDown,\n      zoom,\n      deltaZoom,\n      touchSecound,\n      angle,\n      deltaAngle,\n      isPrimary: !touchSecound && mouseDown == 0 || mouseDown == 1,\n      debug\n    };\n    touch = false;\n    touchSecound = false;\n    let saveMove = startPosition;\n\n    if (click) {\n      if (e.button) {\n        if (e.button === 1) this.triger('bmiddle', addition);\n        if (e.button === 2) this.triger('bright', addition);\n      } else if (saveMove) {\n        this.triger('click', addition);\n      }\n    }\n\n    this.triger('stop', addition);\n    startPosition = null;\n    position = null;\n    startMoveSecound = null;\n    thisMoveSecound = null;\n    mouseDown = 0;\n  };\n\n  div.addEventListener('touchstart', e => {\n    e.preventDefault();\n  }, false);\n  div.addEventListener('touchmove', moveTouchT, false);\n  div.addEventListener('touchend', stopTouch, false);\n  div.addEventListener('touchstart', moveTouchT, false);\n  div.addEventListener('mouseleave', stopTouch, false);\n  div.addEventListener('mousemove', moveTouchM);\n  div.addEventListener('mouseup', stopTouch);\n  div.addEventListener('mousedown', e => {\n    mouseDown = 1 + e.button;\n    moveTouchM(e);\n  });\n}\n/*eslint-disable */\n\n\nTouch.prototype.sub = function (ev, func) {\n  if (this.events[ev]) this.events[ev].push(func);\n};\n\nTouch.prototype.onClick = function (func) {\n  this.events.click.push(func);\n};\n\nTouch.prototype.onForce = function (func) {\n  this.events.force.push(func);\n};\n\nTouch.prototype.onStop = function (func) {\n  this.events.stop.push(func);\n};\n\nTouch.prototype.onUp = function (func) {\n  this.events.up.push(func);\n};\n\nTouch.prototype.onDown = function (func) {\n  this.events.down.push(func);\n};\n\nTouch.prototype.onLeft = function (func) {\n  this.events.left.push(func);\n};\n\nTouch.prototype.onRight = function (func) {\n  this.events.right.push(func);\n};\n\nTouch.prototype.unsub = function (ev, func) {\n  if (this.events[ev]) this.events[ev] = this.events[ev].filter(fu => fu !== func);\n};\n\nTouch.prototype.clearEvlent = function (ev) {\n  if (this.events[ev]) this.events[ev] = [];\n};\n\nTouch.prototype.clear = function () {\n  this.events = {\n    up: [],\n    down: [],\n    left: [],\n    right: [],\n    stop: [],\n    start: [],\n    click: [],\n    force: [],\n    bmiddle: [],\n    bright: []\n  };\n};\n\nTouch.prototype.triger = function (ev, args) {\n  if (this.events[ev]) this.events[ev].forEach(func => {\n    try {\n      func(args);\n    } catch (e) {\n      if (this.console_error) console.log(e);\n      this.last_error = 'Error: ' + e.name + ' ' + e.foo + ' ' + e.message + ' ' + e.stack;\n      if (this.throw_error) throw e;\n    }\n  });\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Touch);\n\n//# sourceURL=webpack://chain_mould_effect/../lib/fe/touch.js?");

/***/ }),

/***/ "../lib/math/box.js":
/*!**************************!*\
  !*** ../lib/math/box.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"pointInBox\": () => (/* binding */ pointInBox),\n/* harmony export */   \"boxOverlap\": () => (/* binding */ boxOverlap),\n/* harmony export */   \"boxOverlapAny\": () => (/* binding */ boxOverlapAny),\n/* harmony export */   \"pointInBoxAny\": () => (/* binding */ pointInBoxAny)\n/* harmony export */ });\n/* harmony import */ var _shapes_vector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../shapes/vector */ \"../lib/shapes/vector.js\");\n\n\nfunction boxOverlapAny(aStartA, aWithA, aStartB, aWithB) {\n  let startA = new _shapes_vector__WEBPACK_IMPORTED_MODULE_0__.Vector(aStartA);\n  let withA = new _shapes_vector__WEBPACK_IMPORTED_MODULE_0__.Vector(aWithA);\n  let startB = new _shapes_vector__WEBPACK_IMPORTED_MODULE_0__.Vector(aStartB);\n  let withB = new _shapes_vector__WEBPACK_IMPORTED_MODULE_0__.Vector(aWithB);\n  return boxOverlap(startA, withA, startB, withB);\n}\n\nfunction boxOverlap(startA, withA, startB, withB) {\n  // If one rectangle is on left side of other\n  let endA = startA.add(withA);\n  let endB = startB.add(withB);\n  if (startA.x > endB.x || startB.x > endA.x) return false; // If one rectangle is above other\n\n  if (startA.y > endB.y || startB.y > endA.y) return false;\n  return true;\n}\n\nfunction pointInBoxAny(positionsA, boxA, point) {\n  let vecPositions = new _shapes_vector__WEBPACK_IMPORTED_MODULE_0__.Vector(positionsA);\n  let vecBoxA = new _shapes_vector__WEBPACK_IMPORTED_MODULE_0__.Vector(boxA);\n  let vecPoint = new _shapes_vector__WEBPACK_IMPORTED_MODULE_0__.Vector(point);\n  return pointInBox(vecPositions, vecBoxA, vecPoint);\n}\n\nfunction pointInBox(positions, boxA, point) {\n  if (positions[0] > point[0] || positions[1] > point[1]) {\n    return false;\n  }\n\n  if (positions[0] + boxA[0] < point[0] || positions[1] + boxA[1] < point[1]) {\n    return false;\n  }\n\n  return true;\n}\n\n\n\n//# sourceURL=webpack://chain_mould_effect/../lib/math/box.js?");

/***/ }),

/***/ "../lib/math/vec.js":
/*!**************************!*\
  !*** ../lib/math/vec.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"pointInTriangle\": () => (/* binding */ pointInTriangle),\n/* harmony export */   \"dot\": () => (/* binding */ dot),\n/* harmony export */   \"perpDot\": () => (/* binding */ perpDot),\n/* harmony export */   \"lineCollision\": () => (/* binding */ lineCollision),\n/* harmony export */   \"sign\": () => (/* binding */ sign),\n/* harmony export */   \"interpolateVecs\": () => (/* binding */ interpolateVecs)\n/* harmony export */ });\nfunction sign(p1, p2, p3) {\n  return (p1.x - p3.x) * (p2.y - p3.y) - (p2.x - p3.x) * (p1.y - p3.y);\n}\n\nfunction pointInTriangle(pt, v1, v2, v3) {\n  var b1 = sign(pt, v1, v2) < 0.0;\n  var b2 = sign(pt, v2, v3) < 0.0;\n  var b3 = sign(pt, v3, v1) < 0.0;\n  return b1 == b2 && b2 == b3;\n}\n\nfunction dot(a, b) {\n  return a.x * b.x + a.y * b.y;\n}\n\nfunction perpDot(a, b) {\n  return a.y * b.x - a.x * b.y;\n}\n\nfunction lineCollision(A1, A2, B1, B2) {\n  var a = {\n    x: A2.x - A1.x,\n    y: A2.y - A1.y\n  };\n  var b = {\n    x: B2.x - B1.x,\n    y: B2.y - B1.y\n  };\n  var f = perpDot(a, b);\n  if (!f) // lines are parallel\n    return false;\n  var c = {\n    x: B2.x - A2.x,\n    y: B2.y - A2.y\n  };\n  var aa = perpDot(a, c);\n  var bb = perpDot(b, c);\n\n  if (f < 0) {\n    if (aa > 0) return false;\n    if (bb > 0) return false;\n    if (aa < f) return false;\n    if (bb < f) return false;\n  } else {\n    if (aa < 0) return false;\n    if (bb < 0) return false;\n    if (aa > f) return false;\n    if (bb > f) return false;\n  }\n\n  return true;\n}\n\nfunction interpolateVecs(vecA, vecB, over) {\n  let left = 1 - over;\n  return {\n    x: vecA.x * left + vecB.x * over,\n    y: vecA.y * left + vecB.y * over\n  };\n}\n\n\n\n//# sourceURL=webpack://chain_mould_effect/../lib/math/vec.js?");

/***/ }),

/***/ "../lib/shapes/box.js":
/*!****************************!*\
  !*** ../lib/shapes/box.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ShapeBox\": () => (/* binding */ ShapeBox)\n/* harmony export */ });\nfunction ShapeBox(size_x, size_y) {\n  this.x = size_x;\n  this.y = size_y;\n}\n\n\n\n//# sourceURL=webpack://chain_mould_effect/../lib/shapes/box.js?");

/***/ }),

/***/ "../lib/shapes/circle.js":
/*!*******************************!*\
  !*** ../lib/shapes/circle.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ShapeCircle\": () => (/* binding */ ShapeCircle)\n/* harmony export */ });\nfunction ShapeCircle(radius) {\n  this.radius = radius;\n}\n\n\n\n//# sourceURL=webpack://chain_mould_effect/../lib/shapes/circle.js?");

/***/ }),

/***/ "../lib/shapes/rounded-box.js":
/*!************************************!*\
  !*** ../lib/shapes/rounded-box.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ShapeRounded\": () => (/* binding */ ShapeRounded)\n/* harmony export */ });\nfunction ShapeRounded(radius) {\n  this.radius = radius;\n}\n\n\n\n//# sourceURL=webpack://chain_mould_effect/../lib/shapes/rounded-box.js?");

/***/ }),

/***/ "../lib/shapes/sprite.js":
/*!*******************************!*\
  !*** ../lib/shapes/sprite.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Sprite\": () => (/* binding */ Sprite)\n/* harmony export */ });\nfunction Sprite(image) {\n  this.image = image;\n}\n\n\n\n//# sourceURL=webpack://chain_mould_effect/../lib/shapes/sprite.js?");

/***/ }),

/***/ "../lib/shapes/text.js":
/*!*****************************!*\
  !*** ../lib/shapes/text.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ShapeText\": () => (/* binding */ ShapeText)\n/* harmony export */ });\nfunction ShapeText(font, text) {\n  this.font = font;\n  this.text = text;\n}\n\n\n\n//# sourceURL=webpack://chain_mould_effect/../lib/shapes/text.js?");

/***/ }),

/***/ "../lib/shapes/vector.js":
/*!*******************************!*\
  !*** ../lib/shapes/vector.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Vector\": () => (/* binding */ Vector)\n/* harmony export */ });\nfunction Vector(...array) {\n  Array.call(this);\n\n  if (array.length == 1) {\n    var item = array[0];\n    var arr = Object.values(item);\n\n    if (Object.hasOwnProperty.call(item, 'length') && item.length !== arr.length) {\n      arr.pop();\n    }\n\n    this.push(...arr);\n  } else {\n    this.push(...Object.values(array));\n  }\n\n  Object.defineProperty(this, 'x', {\n    get() {\n      return this[0];\n    },\n\n    set(value) {\n      this[0] = value;\n    }\n\n  });\n  Object.defineProperty(this, 'y', {\n    get() {\n      return this[1];\n    },\n\n    set(value) {\n      this[1] = value;\n    }\n\n  });\n  Object.defineProperty(this, 'z', {\n    get() {\n      return this[2];\n    },\n\n    set(value) {\n      this[2] = value;\n    }\n\n  });\n}\n\nVector.prototype.x = 0;\nVector.prototype.y = 0;\nVector.prototype.z = 0;\nVector.prototype = Object.create(Array.prototype, {\n  constructor: {\n    value: Vector,\n    enumerable: false,\n    // Make it non-enumerable, so it won't appear in `for...in` loop\n    writable: true,\n    configurable: true\n  }\n});\n\nVector.prototype.add = function (toAdd) {\n  let ret = this.copy();\n\n  for (var k = 0; k < ret.length; k++) {\n    if (!Object.hasOwnProperty.call(ret, k)) {\n      continue;\n    }\n\n    if (!Object.hasOwnProperty.call(toAdd, k)) {\n      continue;\n    }\n\n    ret[k] += toAdd[k];\n  }\n\n  return ret;\n};\n\nVector.prototype.negate = function () {\n  let ret = this.copy();\n\n  for (var k = 0; k < ret.length; k++) {\n    if (!Object.hasOwnProperty.call(ret, k)) {\n      continue;\n    }\n\n    ret[k] = -ret[k];\n  }\n\n  return ret;\n};\n\nVector.prototype.substract = function (toAdd) {\n  return this.add(toAdd.negate());\n};\n\nVector.prototype.magnitude = function () {\n  let magnitude = 0;\n\n  for (var k = 0; k < this.length; k++) {\n    if (!Object.hasOwnProperty.call(this, k)) {\n      continue;\n    }\n\n    magnitude += this[k] * this[k];\n  }\n\n  return Math.sqrt(magnitude);\n};\n\nVector.prototype.normalise = function (toAdd) {\n  let magnitude = this.magnitude();\n  return this.scale(1 / magnitude);\n};\n\nVector.prototype.scale = function (scale) {\n  let ret = this.copy();\n\n  for (var k = 0; k < ret.length; k++) {\n    if (!Object.hasOwnProperty.call(ret, k)) {\n      continue;\n    }\n\n    ret[k] *= scale;\n  }\n\n  return ret;\n};\n\nVector.prototype.copy = function () {\n  return new this.constructor(this);\n};\n\n\n\n//# sourceURL=webpack://chain_mould_effect/../lib/shapes/vector.js?");

/***/ }),

/***/ "./src/javascript/index.js":
/*!*********************************!*\
  !*** ./src/javascript/index.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _lib_fe_touch_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../lib/fe/touch.js */ \"../lib/fe/touch.js\");\n/* harmony import */ var _lib_ecs_drawers_ploter_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../lib/ecs/drawers/ploter.js */ \"../lib/ecs/drawers/ploter.js\");\n/* harmony import */ var _lib_ecs_drawers_drawFPS_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../lib/ecs/drawers/drawFPS.js */ \"../lib/ecs/drawers/drawFPS.js\");\n/* harmony import */ var _lib_ecs_drawers_drawGrid_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../lib/ecs/drawers/drawGrid.js */ \"../lib/ecs/drawers/drawGrid.js\");\n/* harmony import */ var _scene__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./scene */ \"./src/javascript/scene.js\");\n/* harmony import */ var _input__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./input */ \"./src/javascript/input.js\");\nvar _buttonMap;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\n\nvar canvas = document.getElementById('phy_canvas');\n\nfunction chunkString(str) {\n  return str.split(/\\r?\\n/);\n}\n\nvar draw = new _lib_ecs_drawers_ploter_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](canvas);\nvar scene = new _scene__WEBPACK_IMPORTED_MODULE_4__.Scene(draw);\nvar input = new _input__WEBPACK_IMPORTED_MODULE_5__.Input(draw);\nvar selectionTool = {\n  checked: false\n};\nvar playPause = {\n  checked: false\n};\nvar buttonMap = (_buttonMap = {}, _defineProperty(_buttonMap, input.addTogle(\"Selection\").id, selectionTool), _defineProperty(_buttonMap, input.addTogle(\"Play\").id, playPause), _buttonMap);\nconsole.log(buttonMap);\nvar input_position = {\n  x: 0,\n  y: 0,\n  scale: 1\n};\nvar position = {\n  x: 0,\n  y: 0,\n  scale: 1\n};\n\nfunction adjustWindowSize() {\n  canvas.width = window.innerWidth - 10;\n  canvas.height = window.innerHeight - 10;\n  input_position = {\n    x: canvas.width / 2,\n    y: canvas.height / 2,\n    scale: 1\n  };\n}\n\nadjustWindowSize();\nwindow.addEventListener('resize', adjustWindowSize);\nvar debugString = '0';\nwindow.addEventListener('mousewheel', function (e) {\n  position.scale *= e.wheelDelta > 0 ? 1.1 : 0.88;\n});\ndocument.addEventListener('contextmenu', function (e) {\n  e.preventDefault();\n});\nvar fps = new _lib_ecs_drawers_drawFPS_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](draw.context);\nvar grid = new _lib_ecs_drawers_drawGrid_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"](draw.context);\nvar touch = new _lib_fe_touch_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](canvas, 100);\ntouch.sub('force', function (props) {\n  var delta = props.delta,\n      deltaZoom = props.deltaZoom,\n      isPrimary = props.isPrimary;\n\n  if (deltaZoom != 1) {\n    position.scale *= deltaZoom;\n  }\n\n  if (!selectionTool.checked || !isPrimary) {\n    position = _objectSpread(_objectSpread({}, position), {}, {\n      x: position.x - delta.x / position.scale,\n      y: position.y - delta.y / position.scale\n    });\n    return;\n  } else {\n    scene.touchForce(props, position);\n  }\n});\ntouch.sub('stop', function (props) {\n  var click = props.click;\n\n  if (selectionTool.checked && !click) {\n    scene.touchStop(props, position);\n  }\n});\ntouch.sub('click', function (props) {\n  var selected = input.touchClick(props, input_position);\n\n  if (selected) {\n    buttonMap[selected.id.id].checked = !buttonMap[selected.id.id].checked;\n    input.setState(selected.id, buttonMap[selected.id.id].checked);\n    return;\n  }\n\n  scene.touchClick(props, position);\n});\n\nfunction work() {\n  draw.clear();\n  grid.draw(100, 100, position);\n  scene.run = playPause.checked;\n  scene.work(position);\n  input.work(input_position);\n  fps.draw();\n  var debug = chunkString(debugString);\n  var y = 200;\n\n  for (var i in debug) {\n    draw.context.fillText(debug[i], 50, y += 30);\n  }\n\n  setTimeout(work, 0);\n}\n\nwork();\n\n//# sourceURL=webpack://chain_mould_effect/./src/javascript/index.js?");

/***/ }),

/***/ "./src/javascript/input.js":
/*!*********************************!*\
  !*** ./src/javascript/input.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Input\": () => (/* binding */ Input)\n/* harmony export */ });\n/* harmony import */ var _lib_ecs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../lib/ecs */ \"../lib/ecs/index.js\");\n/* harmony import */ var _lib_ecs_physics_transform_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../lib/ecs/physics/transform.js */ \"../lib/ecs/physics/transform.js\");\n/* harmony import */ var _lib_ecs_drawers_render_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../lib/ecs/drawers/render.js */ \"../lib/ecs/drawers/render.js\");\n/* harmony import */ var _lib_ecs_drawers_select_ecs_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../lib/ecs/drawers/select_ecs.js */ \"../lib/ecs/drawers/select_ecs.js\");\n/* harmony import */ var _lib_shapes_box__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../lib/shapes/box */ \"../lib/shapes/box.js\");\n/* harmony import */ var _lib_shapes_text__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../lib/shapes/text */ \"../lib/shapes/text.js\");\n/* harmony import */ var _lib_math_box__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../lib/math/box */ \"../lib/math/box.js\");\n\n\n\n\n\n\n\n\nfunction Input(draw) {\n  var manager = new _lib_ecs__WEBPACK_IMPORTED_MODULE_0__.EntityManager();\n  var points = new _lib_ecs_drawers_render_js__WEBPACK_IMPORTED_MODULE_2__.RenderEngine(draw.context, manager);\n\n  this.touchClick = function (_ref, position) {\n    var x = _ref.x,\n        y = _ref.y;\n    var point = draw.screenToWorld(position, [x, y]);\n    console.log(point);\n    var pointsSelectable = manager.getEnities(_lib_ecs_drawers_select_ecs_js__WEBPACK_IMPORTED_MODULE_3__.Selectable).map(function (id) {\n      var transform = manager.get(_lib_ecs_physics_transform_js__WEBPACK_IMPORTED_MODULE_1__.Transform, id)[0];\n      var box = manager.get(_lib_shapes_box__WEBPACK_IMPORTED_MODULE_4__.ShapeBox, id)[0];\n      var selectable = manager.get(_lib_ecs_drawers_select_ecs_js__WEBPACK_IMPORTED_MODULE_3__.Selectable, id)[0];\n      selectable.index = 0;\n      return {\n        transform: transform,\n        box: box,\n        selectable: selectable,\n        id: id\n      };\n    });\n    var selected = pointsSelectable.filter(function (_ref2) {\n      var transform = _ref2.transform,\n          box = _ref2.box;\n      return (0,_lib_math_box__WEBPACK_IMPORTED_MODULE_6__.pointInBox)(transform.positions, box, point);\n    });\n    return selected[0];\n  };\n\n  var all = [];\n  var stabilex = 30;\n  var stabiley = 30;\n\n  this.addTogle = function (text) {\n    var shapeText = new _lib_shapes_text__WEBPACK_IMPORTED_MODULE_5__.ShapeText(20, text);\n    var sizeText = points.mesure(shapeText).width;\n    var entity = manager.create();\n    manager.asign(new _lib_ecs_physics_transform_js__WEBPACK_IMPORTED_MODULE_1__.Transform([stabilex, stabiley]), entity);\n    manager.asign(new _lib_shapes_box__WEBPACK_IMPORTED_MODULE_4__.ShapeBox(sizeText + 10, 30), entity);\n    manager.asign(new _lib_ecs_drawers_render_js__WEBPACK_IMPORTED_MODULE_2__.Renderer(), entity);\n    manager.asign(new _lib_ecs_drawers_select_ecs_js__WEBPACK_IMPORTED_MODULE_3__.Selectable('#aaffbb'), entity);\n    all.push(entity);\n    var entityText = manager.create();\n    manager.asign(new _lib_ecs_physics_transform_js__WEBPACK_IMPORTED_MODULE_1__.Transform([stabilex + 5, stabiley + 20]), entityText);\n    manager.asign(shapeText, entityText);\n    manager.asign(new _lib_ecs_drawers_render_js__WEBPACK_IMPORTED_MODULE_2__.Renderer('#cccccc'), entityText);\n    all.push(entityText);\n    stabilex += sizeText + 15;\n    return entity;\n  };\n\n  this.setState = function (entity, state) {\n    var renderer = manager.get(_lib_ecs_drawers_render_js__WEBPACK_IMPORTED_MODULE_2__.Renderer, entity)[0];\n\n    if (renderer) {\n      renderer.color = state ? '#888888' : '#555555';\n    }\n  };\n\n  this.work = function (position) {\n    points.draw(position);\n  };\n}\n\n\n\n//# sourceURL=webpack://chain_mould_effect/./src/javascript/input.js?");

/***/ }),

/***/ "./src/javascript/scene.js":
/*!*********************************!*\
  !*** ./src/javascript/scene.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Scene\": () => (/* binding */ Scene)\n/* harmony export */ });\n/* harmony import */ var _lib_ecs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../lib/ecs */ \"../lib/ecs/index.js\");\n/* harmony import */ var _lib_ecs_physics_physics__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../lib/ecs/physics/physics */ \"../lib/ecs/physics/physics.js\");\n/* harmony import */ var _lib_shapes_circle_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../lib/shapes/circle.js */ \"../lib/shapes/circle.js\");\n/* harmony import */ var _lib_ecs_physics_transform_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../lib/ecs/physics/transform.js */ \"../lib/ecs/physics/transform.js\");\n/* harmony import */ var _lib_ecs_physics_chainEngine_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../lib/ecs/physics/chainEngine.js */ \"../lib/ecs/physics/chainEngine.js\");\n/* harmony import */ var _lib_ecs_physics_colisionEngine_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../lib/ecs/physics/colisionEngine.js */ \"../lib/ecs/physics/colisionEngine.js\");\n/* harmony import */ var _lib_ecs_drawers_render_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../lib/ecs/drawers/render.js */ \"../lib/ecs/drawers/render.js\");\n/* harmony import */ var _lib_fe_select__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../lib/fe/select */ \"../lib/fe/select.js\");\n/* harmony import */ var _lib_shapes_box__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../lib/shapes/box */ \"../lib/shapes/box.js\");\n/* harmony import */ var _lib_ecs_drawers_drawMassCenter__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../lib/ecs/drawers/drawMassCenter */ \"../lib/ecs/drawers/drawMassCenter.js\");\n\n\n\n\n\n\n\n\n\n\n\nfunction Scene(draw) {\n  var manager = new _lib_ecs__WEBPACK_IMPORTED_MODULE_0__.EntityManager();\n  var points = new _lib_ecs_drawers_render_js__WEBPACK_IMPORTED_MODULE_6__.RenderEngine(draw.context, manager);\n  var selection = new _lib_fe_select__WEBPACK_IMPORTED_MODULE_7__[\"default\"]();\n  var physics = new _lib_ecs_physics_physics__WEBPACK_IMPORTED_MODULE_1__.PhysicsEngine(manager, []);\n  var drawMassCenter = new _lib_ecs_drawers_drawMassCenter__WEBPACK_IMPORTED_MODULE_9__.MasCenterRenderEngine(draw.context, manager);\n\n  this.touchForce = function (_ref, position) {\n    var delta = _ref.delta,\n        selectStartPosition = _ref.startPosition,\n        selectPosition = _ref.position;\n    var pointStart = draw.screenToWorld(position, Object.values(selectStartPosition));\n    var pointEnd = draw.screenToWorld(position, Object.values(selectPosition));\n    selection.setArea(pointStart, pointEnd);\n  };\n\n  function markSelection(selection, objects) {\n    selection.forEach(function (elem, index) {\n      var _objects$find = objects.find(function (_ref2) {\n        var transform = _ref2.transform;\n        return transform.positions == elem;\n      }),\n          selectable = _objects$find.selectable;\n\n      selectable.isSelected = true;\n      selectable.index = index;\n    });\n  }\n\n  this.touchStop = function (_ref3, position) {\n    var selectStartPosition = _ref3.startPosition,\n        selectPosition = _ref3.position;\n  };\n\n  this.touchClick = function (_ref4, position) {\n    var x = _ref4.x,\n        y = _ref4.y;\n  };\n\n  var all = [];\n  var rooms = [{\n    name: 'dnevna',\n    x: 0,\n    y: 0,\n    w: 516,\n    h: 482\n  }, {\n    name: 'dnevna-part',\n    x: 399,\n    y: 482,\n    w: 117,\n    h: 144\n  }, {\n    name: 'spavaca',\n    x: 0,\n    y: 482,\n    w: 401,\n    h: 290\n  }, {\n    name: 'hodnik',\n    x: 399,\n    y: 626,\n    w: 117,\n    h: 452\n  }, {\n    name: 'kupatilo',\n    x: 516,\n    y: 817,\n    w: 165,\n    h: 261\n  }];\n\n  for (var _i = 0, _rooms = rooms; _i < _rooms.length; _i++) {\n    var room = _rooms[_i];\n    var entity = manager.create();\n    var x = room.x,\n        y = room.y,\n        w = room.w,\n        h = room.h;\n    manager.asign(new _lib_ecs_physics_transform_js__WEBPACK_IMPORTED_MODULE_3__.Transform([x, y]), entity);\n    manager.asign(new _lib_ecs_physics_physics__WEBPACK_IMPORTED_MODULE_1__.Physics([0, 0], w * h, 0), entity);\n    manager.asign(new _lib_shapes_box__WEBPACK_IMPORTED_MODULE_8__.ShapeBox(w, h), entity);\n    manager.asign(new _lib_ecs_drawers_render_js__WEBPACK_IMPORTED_MODULE_6__.Renderer('', {\n      color: '#aaffbb',\n      \"with\": 1\n    }), entity);\n    manager.asign(new _lib_ecs_drawers_drawMassCenter__WEBPACK_IMPORTED_MODULE_9__.MasCenterRender(), entity);\n    all.push(entity);\n  }\n\n  this.work = function (position) {\n    points.draw(position);\n    drawMassCenter.draw(position);\n    if (this.run) physics.compute();\n  };\n}\n\n\n\n//# sourceURL=webpack://chain_mould_effect/./src/javascript/scene.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/javascript/index.js");
/******/ 	
/******/ })()
;