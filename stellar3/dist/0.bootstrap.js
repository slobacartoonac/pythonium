(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[0],{

/***/ "../gravity_calc/pkg/gravity_calc.js":
/*!*******************************************!*\
  !*** ../gravity_calc/pkg/gravity_calc.js ***!
  \*******************************************/
/*! exports provided: Gravity, View, __wbindgen_throw */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gravity_calc_bg.wasm */ \"../gravity_calc/pkg/gravity_calc_bg.wasm\");\n/* harmony import */ var _gravity_calc_bg_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./gravity_calc_bg.js */ \"../gravity_calc/pkg/gravity_calc_bg.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Gravity\", function() { return _gravity_calc_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"Gravity\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"View\", function() { return _gravity_calc_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"View\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_throw\", function() { return _gravity_calc_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbindgen_throw\"]; });\n\n\n\n\n//# sourceURL=webpack:///../gravity_calc/pkg/gravity_calc.js?");

/***/ }),

/***/ "../gravity_calc/pkg/gravity_calc_bg.js":
/*!**********************************************!*\
  !*** ../gravity_calc/pkg/gravity_calc_bg.js ***!
  \**********************************************/
/*! exports provided: Gravity, View, __wbindgen_throw */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Gravity\", function() { return Gravity; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"View\", function() { return View; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_throw\", function() { return __wbindgen_throw; });\n/* harmony import */ var _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gravity_calc_bg.wasm */ \"../gravity_calc/pkg/gravity_calc_bg.wasm\");\n\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachedUint8Memory0;\nfunction getUint8Memory0() {\n    if (cachedUint8Memory0.byteLength === 0) {\n        cachedUint8Memory0 = new Uint8Array(_gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n    }\n    return cachedUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nfunction passArray8ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 1);\n    getUint8Memory0().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nlet cachedFloat32Memory0;\nfunction getFloat32Memory0() {\n    if (cachedFloat32Memory0.byteLength === 0) {\n        cachedFloat32Memory0 = new Float32Array(_gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n    }\n    return cachedFloat32Memory0;\n}\n\nfunction passArrayF32ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 4);\n    getFloat32Memory0().set(arg, ptr / 4);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n/**\n*/\nclass Gravity {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Gravity.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_gravity_free\"](ptr);\n    }\n    /**\n    * @param {number} width\n    * @param {number} height\n    * @returns {Gravity}\n    */\n    static new(width, height) {\n        const ret = _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"gravity_new\"](width, height);\n        return Gravity.__wrap(ret);\n    }\n    /**\n    * @returns {number}\n    */\n    width() {\n        const ret = _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"gravity_width\"](this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    height() {\n        const ret = _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"gravity_height\"](this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} x\n    * @param {number} y\n    * @param {number} scale\n    */\n    set_view(x, y, scale) {\n        _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"gravity_set_view\"](this.ptr, x, y, scale);\n    }\n    /**\n    * @param {Uint8Array} data\n    * @param {Float32Array} planets\n    * @param {number} planets_length\n    * @param {Float32Array} view\n    */\n    draw_planets(data, planets, planets_length, view) {\n        try {\n            var ptr0 = passArray8ToWasm0(data, _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"]);\n            var len0 = WASM_VECTOR_LEN;\n            const ptr1 = passArrayF32ToWasm0(planets, _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"]);\n            const len1 = WASM_VECTOR_LEN;\n            const ptr2 = passArrayF32ToWasm0(view, _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"]);\n            const len2 = WASM_VECTOR_LEN;\n            _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"gravity_draw_planets\"](this.ptr, ptr0, len0, ptr1, len1, planets_length, ptr2, len2);\n        } finally {\n            data.set(getUint8Memory0().subarray(ptr0 / 1, ptr0 / 1 + len0));\n            _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_free\"](ptr0, len0 * 1);\n        }\n    }\n    /**\n    * @param {Uint8Array} data\n    * @param {number} length\n    */\n    mutate_data(data, length) {\n        try {\n            var ptr0 = passArray8ToWasm0(data, _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"]);\n            var len0 = WASM_VECTOR_LEN;\n            _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"gravity_mutate_data\"](this.ptr, ptr0, len0, length);\n        } finally {\n            data.set(getUint8Memory0().subarray(ptr0 / 1, ptr0 / 1 + len0));\n            _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_free\"](ptr0, len0 * 1);\n        }\n    }\n}\n/**\n*/\nclass View {\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_view_free\"](ptr);\n    }\n    /**\n    */\n    get x() {\n        const ret = _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_get_view_x\"](this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    */\n    set x(arg0) {\n        _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_set_view_x\"](this.ptr, arg0);\n    }\n    /**\n    */\n    get y() {\n        const ret = _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_get_view_y\"](this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    */\n    set y(arg0) {\n        _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_set_view_y\"](this.ptr, arg0);\n    }\n    /**\n    */\n    get scale() {\n        const ret = _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_get_view_scale\"](this.ptr);\n        return ret;\n    }\n    /**\n    */\n    set scale(arg0) {\n        _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_set_view_scale\"](this.ptr, arg0);\n    }\n}\n\nfunction __wbindgen_throw(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\ncachedFloat32Memory0 = new Float32Array(_gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\ncachedUint8Memory0 = new Uint8Array(_gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../stellar3/node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))\n\n//# sourceURL=webpack:///../gravity_calc/pkg/gravity_calc_bg.js?");

/***/ }),

/***/ "../gravity_calc/pkg/gravity_calc_bg.wasm":
/*!************************************************!*\
  !*** ../gravity_calc/pkg/gravity_calc_bg.wasm ***!
  \************************************************/
/*! exports provided: memory, __wbg_view_free, __wbg_get_view_x, __wbg_set_view_x, __wbg_get_view_y, __wbg_set_view_y, __wbg_get_view_scale, __wbg_set_view_scale, __wbg_gravity_free, gravity_new, gravity_width, gravity_height, gravity_set_view, gravity_draw_planets, gravity_mutate_data, __wbindgen_malloc, __wbindgen_free */
/***/ (function(module, exports, __webpack_require__) {

eval("\"use strict\";\n// Instantiate WebAssembly module\nvar wasmExports = __webpack_require__.w[module.i];\n__webpack_require__.r(exports);\n// export exports from WebAssembly module\nfor(var name in wasmExports) if(name != \"__webpack_init__\") exports[name] = wasmExports[name];\n// exec imports from WebAssembly module (for esm order)\n/* harmony import */ var m0 = __webpack_require__(/*! ./gravity_calc_bg.js */ \"../gravity_calc/pkg/gravity_calc_bg.js\");\n\n\n// exec wasm module\nwasmExports[\"__webpack_init__\"]()\n\n//# sourceURL=webpack:///../gravity_calc/pkg/gravity_calc_bg.wasm?");

/***/ }),

/***/ "../lib/ecs/drawers/drawFPS.js":
/*!*************************************!*\
  !*** ../lib/ecs/drawers/drawFPS.js ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nfunction FPSPloter(context) {\r\n\tthis.context = context\r\n\tthis.time = (new Date()).getTime()\r\n\tthis.i = 0\r\n\tthis.fps = 0\r\n}\r\n\r\nFPSPloter.prototype.draw = function () {\r\n\tthis.i++\r\n\tvar newTime = (new Date()).getTime()\r\n\tvar deltaT = newTime - this.time\r\n\tthis.time = newTime\r\n\tthis.context.font = '14px Verdana'\r\n\r\n\tif (!(this.i % 30)) this.fps = (Math.round(10000 / deltaT) / 10) + ' fps'\r\n\tthis.context.beginPath();\r\n\tthis.context.rect(10, 13, 60, 14);\r\n\tthis.context.fillStyle = 'gray'\r\n\tthis.context.fill();\r\n\tthis.context.fillStyle = 'red'\r\n\tthis.context.fillText(this.fps, 10, 24)\r\n\r\n}\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (FPSPloter);\n\n//# sourceURL=webpack:///../lib/ecs/drawers/drawFPS.js?");

/***/ }),

/***/ "../lib/ecs/drawers/drawGrid.js":
/*!**************************************!*\
  !*** ../lib/ecs/drawers/drawGrid.js ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n\r\nfunction GridPloter(ctx, showCords) {\r\n\tthis.context = ctx\r\n\tthis.showCords\r\n}\r\n\r\nGridPloter.prototype.draw = function (sizex, sizey, view) {\r\n\tconst { context } = this\r\n\tvar canvasWidth = context.canvas.clientWidth\r\n\tvar canvasHeight = context.canvas.clientHeight\r\n\tconst { x: centerX, y: centerY, scale } = view\r\n\tconst canvasWidthHalf = canvasWidth / 2\r\n\tconst canvasHeightHalf = canvasHeight / 2\r\n\tvar gridScale = scale\r\n\twhile (gridScale > 2)\r\n\t\tgridScale /= 2\r\n\twhile (gridScale < 1)\r\n\t\tgridScale *= 2\r\n\tconst stepX = sizex * gridScale\r\n\tconst stepY = sizey * gridScale\r\n\tvar startx = (-centerX * scale + canvasWidthHalf) % stepX\r\n\tvar starty = (-centerY * scale + canvasHeightHalf) % stepY\r\n\tcontext.beginPath()\r\n\tfor (var x = startx; x <= canvasWidth; x += stepX) {\r\n\t\tcontext.moveTo(x, 0)\r\n\t\tcontext.lineTo(x, canvasHeight)\r\n\t}\r\n\r\n\tfor (var y = starty; y <= canvasHeight; y += stepY) {\r\n\t\tcontext.moveTo(0, y)\r\n\t\tcontext.lineTo(canvasWidth, y)\r\n\t}\r\n\tcontext.lineWidth = 2\r\n\tcontext.strokeStyle = 'rgba(128, 128, 128, 0.5)'\r\n\tcontext.stroke()\r\n\r\n\tvar startx = (startx + stepX / 2) % stepX\r\n\tvar starty = (starty + stepY / 2) % stepY\r\n\r\n\tcontext.beginPath()\r\n\tfor (var x = startx; x <= canvasWidth; x += stepX) {\r\n\t\tcontext.moveTo(x, 0)\r\n\t\tcontext.lineTo(x, canvasHeight)\r\n\t}\r\n\r\n\tfor (var y = starty; y <= canvasHeight; y += stepY) {\r\n\t\tcontext.moveTo(0, y)\r\n\t\tcontext.lineTo(canvasWidth, y)\r\n\t}\r\n\tcontext.lineWidth = 2\r\n\tcontext.strokeStyle = 'rgba(128, 128, 128, ' + (gridScale - 1.0) + ')'\r\n\tcontext.stroke()\r\n\tif (this.showCords) {\r\n\t\tcontext.font = '10px Arial'\r\n\t\tcontext.fillText((Math.round(view.x * 100) / 100 + Number.EPSILON) + ',' + (Math.round(view.y * 100 + Number.EPSILON) / 100) + ',' + (Math.round(view.scale * 100 + Number.EPSILON) / 100), 10, 50)\r\n\t}\r\n}\r\n\r\nGridPloter.prototype.line = function (startx, starty, sizex, sizey, color) {\r\n\tthis.context.lineWidth = 1\r\n\tthis.context.moveTo(startx, starty)\r\n\tthis.context.lineTo(startx + sizex, starty + sizey)\r\n\tthis.context.strokeStyle = color\r\n\tthis.context.stroke()\r\n}\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (GridPloter);\n\n//# sourceURL=webpack:///../lib/ecs/drawers/drawGrid.js?");

/***/ }),

/***/ "../lib/ecs/drawers/gravityColorEngine.js":
/*!************************************************!*\
  !*** ../lib/ecs/drawers/gravityColorEngine.js ***!
  \************************************************/
/*! exports provided: GravityColorEngine */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GravityColorEngine\", function() { return GravityColorEngine; });\n/* harmony import */ var _render_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./render.js */ \"../lib/ecs/drawers/render.js\");\n/* harmony import */ var _shapes_circle_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../shapes/circle.js */ \"../lib/shapes/circle.js\");\n/* harmony import */ var _physics_physics_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../physics/physics.js */ \"../lib/ecs/physics/physics.js\");\n\r\n\r\n\r\n\r\nfunction GravityColorEngine(manager) {\r\n\tthis.manager = manager\r\n}\r\n\r\nGravityColorEngine.prototype.compute = function () {\r\n\tthis.manager.getEnities(_render_js__WEBPACK_IMPORTED_MODULE_0__[\"Renderer\"]).map(\r\n\t\t(elem) => {\r\n\t\t\tvar renderers = this.manager.get(_render_js__WEBPACK_IMPORTED_MODULE_0__[\"Renderer\"], elem)[0]\r\n\t\t\tvar mass = this.manager.get(_physics_physics_js__WEBPACK_IMPORTED_MODULE_2__[\"Physics\"], elem)[0].mass\r\n\t\t\tvar volume = Math.pow(this.manager.get(_shapes_circle_js__WEBPACK_IMPORTED_MODULE_1__[\"ShapeCircle\"], elem)[0].radius, 3) * Math.PI\r\n\t\t\tvar dencity = mass / volume * 10 * Math.PI\r\n\t\t\tif (dencity < 1) {\r\n\t\t\t\trenderers.color = '##00fffb'\r\n\t\t\t}\r\n\t\t\telse if (dencity < 2) {\r\n\t\t\t\trenderers.color = '#001eff'\r\n\t\t\t}\r\n\t\t\telse if (dencity < 3) {\r\n\t\t\t\trenderers.color = '#995500'\r\n\t\t\t}\r\n\t\t\telse if (dencity < 4) {\r\n\t\t\t\trenderers.color = '#ff8c00'\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\trenderers.color = '#fffb00'\r\n\t\t\t}\r\n\t\t}\r\n\t)\r\n\r\n}\r\n\r\n\n\n//# sourceURL=webpack:///../lib/ecs/drawers/gravityColorEngine.js?");

/***/ }),

/***/ "../lib/ecs/drawers/ploter.js":
/*!************************************!*\
  !*** ../lib/ecs/drawers/ploter.js ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n\r\nfunction Ploter(canvas){\r\n\tthis.canvas=canvas\r\n\tthis.context = this.canvas.getContext('2d')\r\n\tthis.img = this.context.createImageData(this.canvas.width, this.canvas.height)\r\n}\r\n\r\nPloter.prototype.clear=function()\r\n{\r\n\tthis.context.clearRect(0, 0, this.canvas.width, this.canvas.height)\r\n}\r\n\r\nPloter.prototype.getCanvas=function()\r\n{\r\n\treturn this.canvas\r\n}\r\n\r\nPloter.prototype.worldToScreen=function(view, point){\r\n\tconst { width: canvasWidth, height: canvasHeight}= this.canvas\r\n\tconst {x: centerX, y: centerY, scale} = view\r\n\tconst canvasWidthHalf = canvasWidth / 2\r\n\tconst canvasHeightHalf = canvasHeight / 2\r\n\tvar screenX=(point[0]-centerX)*scale + canvasWidthHalf\r\n\tvar screenY=(point[1]-centerY)*scale + canvasHeightHalf\r\n\treturn [screenX, screenY]\r\n}\r\n\r\nPloter.prototype.screenToWorld=function(view, point){\r\n\tconst { width: canvasWidth, height: canvasHeight}= this.canvas\r\n\tconst {x: centerX, y: centerY, scale} = view\r\n\tconst canvasWidthHalf = canvasWidth / 2\r\n\tconst canvasHeightHalf = canvasHeight / 2\r\n\tvar worldX = (point[0] - canvasWidthHalf) / scale + centerX\r\n\tvar worldY = (point[1]- canvasHeightHalf) / scale + centerY\r\n\treturn [worldX, worldY]\r\n}\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (Ploter);\n\n//# sourceURL=webpack:///../lib/ecs/drawers/ploter.js?");

/***/ }),

/***/ "../lib/ecs/drawers/render.js":
/*!************************************!*\
  !*** ../lib/ecs/drawers/render.js ***!
  \************************************/
/*! exports provided: RenderEngine, Renderer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RenderEngine\", function() { return RenderEngine; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Renderer\", function() { return Renderer; });\n/* harmony import */ var _physics_transform_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../physics/transform.js */ \"../lib/ecs/physics/transform.js\");\n/* harmony import */ var _shapes_box_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../shapes/box.js */ \"../lib/shapes/box.js\");\n/* harmony import */ var _shapes_circle_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../shapes/circle.js */ \"../lib/shapes/circle.js\");\n/* harmony import */ var _shapes_text_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../shapes/text.js */ \"../lib/shapes/text.js\");\n/* harmony import */ var _shapes_sprite_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../shapes/sprite.js */ \"../lib/shapes/sprite.js\");\n/* harmony import */ var _shapes_rounded_box_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../shapes/rounded-box.js */ \"../lib/shapes/rounded-box.js\");\n/* harmony import */ var _physics_transformRotate_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../physics/transformRotate.js */ \"../lib/ecs/physics/transformRotate.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Renderer(color, stroke, layer) {\r\n\tthis.color = color\r\n\tthis.stroke = stroke\r\n\tthis.layer = layer || 0\r\n}\r\n\r\nfunction RenderEngine(context, manager) {\r\n\tthis.context = context\r\n\tthis.manager = manager\r\n\tthis.maxSize = 100\r\n}\r\n\r\nfunction shapeDone(context, renderer) {\r\n\tif (renderer.color) {\r\n\t\tcontext.fillStyle = renderer.color;\r\n\t\tcontext.fill()\r\n\t}\r\n\tif (renderer.stroke) {\r\n\t\tcontext.strokeStyle = renderer.stroke.color;\r\n\t\tcontext.lineWidth = renderer.stroke.width;\r\n\t\tcontext.stroke()\r\n\t}\r\n}\r\n\r\nfunction roundedRect(context, x, y, width, height, radius) {\r\n\tcontext.moveTo(x, y + radius);\r\n\tcontext.lineTo(x, y + height - radius);\r\n\tcontext.arcTo(x, y + height, x + radius, y + height, radius);\r\n\tcontext.lineTo(x + width - radius, y + height);\r\n\tcontext.arcTo(x + width, y + height, x + width, y + height - radius, radius);\r\n\tcontext.lineTo(x + width, y + radius);\r\n\tcontext.arcTo(x + width, y, x + width - radius, y, radius);\r\n\tcontext.lineTo(x + radius, y);\r\n\tcontext.arcTo(x, y, x, y + radius, radius);\r\n}\r\n\r\nRenderEngine.prototype.draw = function (view) {\r\n\tconst { context } = this\r\n\tvar canvasWidth = context.canvas.clientWidth\r\n\tvar canvasHeight = context.canvas.clientHeight\r\n\tconst { x: centerX, y: centerY, scale, angle } = view\r\n\tconst canvasWidthHalf = canvasWidth / 2\r\n\tconst canvasHeightHalf = canvasHeight / 2\r\n\tconst maxSize = this.maxSize * scale;\r\n\tif (angle) {\r\n\t\tcontext.save();\r\n\t\tcontext.translate(canvasWidthHalf, canvasHeightHalf);\r\n\t\tcontext.rotate(angle);\r\n\t\tcontext.translate(-canvasWidthHalf, -canvasHeightHalf);\r\n\t}\r\n\tthis.manager.getEnities(Renderer).map(elem => {\r\n\t\tvar renderer = this.manager.get(Renderer, elem)[0]\r\n\t\treturn [elem, renderer]\r\n\t}).sort(([, a], [, b]) => {\r\n\t\tif (a.layer < b.layer) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\tif (a.layer > b.layer) {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\t// a must be equal to b\r\n\t\treturn 0;\r\n\t}\r\n\t).map(\r\n\t\t([elem, renderer]) => {\r\n\t\t\tvar transform = this.manager.get(_physics_transform_js__WEBPACK_IMPORTED_MODULE_0__[\"Transform\"], elem)[0]\r\n\t\t\tvar x = (transform.positions[0] - centerX) * scale + canvasWidthHalf\r\n\t\t\tvar y = (transform.positions[1] - centerY) * scale + canvasHeightHalf\r\n\t\t\tif (x < -maxSize || y < -maxSize || x > canvasWidth || y > canvasHeight)\r\n\t\t\t\treturn\r\n\r\n\t\t\tlet circles = this.manager.get(_shapes_circle_js__WEBPACK_IMPORTED_MODULE_2__[\"ShapeCircle\"], elem)\r\n\t\t\tfor (let i in circles) {\r\n\t\t\t\tlet circle = circles[i];\r\n\t\t\t\tconst elementSize = circle.radius * scale > 1 ? circle.radius * scale : 1\r\n\t\t\t\tcontext.beginPath()\r\n\t\t\t\tcontext.arc(x, y, elementSize, 0, 2 * Math.PI, false)\r\n\t\t\t\tshapeDone(context, renderer);\r\n\t\t\t}\r\n\t\t\tlet boxes = this.manager.get(_shapes_box_js__WEBPACK_IMPORTED_MODULE_1__[\"ShapeBox\"], elem)\r\n\t\t\tlet rounded = this.manager.get(_shapes_rounded_box_js__WEBPACK_IMPORTED_MODULE_5__[\"ShapeRounded\"], elem)\r\n\t\t\tlet rotate = this.manager.get(_physics_transformRotate_js__WEBPACK_IMPORTED_MODULE_6__[\"TransformRotate\"], elem)[0]\r\n\t\t\tfor (let i in boxes) {\r\n\t\t\t\tlet box = boxes[i];\r\n\t\t\t\tconst size_x = box.x * scale > 1 ? box.x * scale : 1\r\n\t\t\t\tconst size_y = box.y * scale > 1 ? box.y * scale : 1\r\n\t\t\t\tcontext.save();\r\n\t\t\t\tif (rotate) {\r\n\t\t\t\t\tcontext.translate(x + size_x / 2, y + size_y / 2);\r\n\t\t\t\t\tcontext.rotate(rotate.rotate);\r\n\t\t\t\t\tcontext.translate(-x - size_x / 2, -y - size_y / 2);\r\n\t\t\t\t}\r\n\t\t\t\tcontext.beginPath();\r\n\t\t\t\tif (rounded[0]) {\r\n\t\t\t\t\troundedRect(context, x, y, size_x, size_y, rounded[0].radius)\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tcontext.rect(x, y, size_x, size_y);\r\n\t\t\t\t}\r\n\t\t\t\tshapeDone(context, renderer);\r\n\t\t\t\tcontext.restore();\r\n\t\t\t}\r\n\t\t\tlet sprites = this.manager.get(_shapes_sprite_js__WEBPACK_IMPORTED_MODULE_4__[\"Sprite\"], elem)\r\n\t\t\tfor (let i in sprites) {\r\n\t\t\t\tlet sprite = sprites[i];\r\n\t\t\t\tlet box = boxes[0];\r\n\t\t\t\tif (!box) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tconst size_x = box.x * scale > 1 ? box.x * scale + 0.5 : 1\r\n\t\t\t\tconst size_y = box.y * scale > 1 ? box.y * scale + 0.5 : 1\r\n\t\t\t\tcontext.save();\r\n\t\t\t\tif (rotate) {\r\n\t\t\t\t\tcontext.translate(x + size_x / 2, y + size_y / 2);\r\n\t\t\t\t\tcontext.rotate(rotate.rotate);\r\n\t\t\t\t\tcontext.translate(-x - size_x / 2, -y - size_y / 2);\r\n\t\t\t\t}\r\n\t\t\t\tcontext.drawImage(sprite.image, x, y, size_x, size_y);\r\n\t\t\t\tcontext.restore();\r\n\t\t\t}\r\n\t\t\tlet texts = this.manager.get(_shapes_text_js__WEBPACK_IMPORTED_MODULE_3__[\"ShapeText\"], elem)\r\n\t\t\tfor (let i in texts) {\r\n\t\t\t\tlet text = texts[i]\r\n\t\t\t\tconst size_y = text.font * scale > 1 ? text.font * scale : 1\r\n\t\t\t\tcontext.fillStyle = renderer.color;\r\n\t\t\t\tcontext.font = parseInt(size_y) + 'px serif';\r\n\t\t\t\tcontext.save();\r\n\t\t\t\tif (rotate) {\r\n\t\t\t\t\tcontext.translate(x, y);\r\n\t\t\t\t\tcontext.rotate(rotate.rotate);\r\n\t\t\t\t\tcontext.translate(-x, -y);\r\n\t\t\t\t}\r\n\t\t\t\tcontext.fillText(text.text, x, y + parseInt(size_y));\r\n\t\t\t\tcontext.restore();\r\n\t\t\t}\r\n\t\t}\r\n\t)\r\n\tif (angle) {\r\n\t\tcontext.restore()\r\n\t}\r\n}\r\nRenderEngine.prototype.mesure = function (text) {\r\n\tconst { context } = this\r\n\tcontext.font = parseInt(text.font) + 'px serif';\r\n\treturn context.measureText(text.text);\r\n}\r\n\r\n\n\n//# sourceURL=webpack:///../lib/ecs/drawers/render.js?");

/***/ }),

/***/ "../lib/ecs/index.js":
/*!***************************!*\
  !*** ../lib/ecs/index.js ***!
  \***************************/
/*! exports provided: Entity, EntityManager */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Entity\", function() { return Entity; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EntityManager\", function() { return EntityManager; });\nconst ENTITY_INDEX_BITS = 22\r\nconst ENTITY_INDEX_MASK = (1 << ENTITY_INDEX_BITS) - 1\r\n\r\nconst ENTITY_GENERATION_BITS = 8\r\nconst ENTITY_GENERATION_MASK = (1 << ENTITY_GENERATION_BITS) - 1\r\nconst MINIMUM_FREE_INDICES = 0\r\n\r\nfunction Entity(id) {\r\n\tthis.id = id\r\n}\r\nEntity.prototype.index = function () {\r\n\treturn this.id & ENTITY_INDEX_MASK\r\n}\r\nEntity.prototype.generation = function () {\r\n\treturn (this.id >> ENTITY_INDEX_BITS) & ENTITY_GENERATION_MASK\r\n}\r\n\r\nfunction EntityManager() {\r\n\tthis._generation = {}\r\n\tthis._free_indices = []\r\n\tthis._entities = {}\r\n\tthis._components = {}\r\n\tthis.__entities_with_type = {}\r\n}\r\n\r\nEntityManager.prototype.create = function () {\r\n\tvar idx = 0\r\n\tif (this._free_indices.length > MINIMUM_FREE_INDICES) {\r\n\t\tidx = this._free_indices.shift()\r\n\t} else {\r\n\t\tidx = Object.keys(this._generation).length\r\n\t\tthis._generation[idx] = 0\r\n\t}\r\n\tvar entity = this.make_entity(idx, this._generation[idx])\r\n\tthis._entities[idx] = entity\r\n\treturn entity\r\n}\r\n\r\nEntityManager.prototype.make_entity = function (idx, generation) {\r\n\treturn new Entity(idx + (generation << ENTITY_INDEX_BITS))\r\n}\r\n\r\nEntityManager.prototype.alive = function (e) {\r\n\treturn this._generation[e.index()] == e.generation()\r\n}\r\n\r\nEntityManager.prototype.destroy = function (e) {\r\n\tthis._components[e.id] = undefined\r\n\tthis._entities[e.id] = undefined\r\n\t++this._generation[e.index()]\r\n\tthis._free_indices.push(e.index())\r\n}\r\n\r\nEntityManager.prototype.asign = function (component, e) {\r\n\tvar entity_components = this._components[e.id]\r\n\tif (!entity_components) {\r\n\t\tthis._components[e.id] = {\r\n\t\t\t[component.constructor.name]: [component]\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\tvar components_of_type = entity_components[component.constructor.name]\r\n\tif (!components_of_type) {\r\n\t\tthis._components[e.id][component.constructor.name] = [component]\r\n\t\treturn\r\n\t}\r\n\tif (components_of_type &&\r\n\t\tentity_components[component.constructor.name].find(comp => component === comp)\r\n\t)\r\n\t\tthrow Error('Component is allready asiged')\r\n\tentity_components[component.constructor.name].push(component)\r\n}\r\n\r\nEntityManager.prototype.get = function (c_type, e) {\r\n\tvar entity_components = this._components[e.id]\r\n\tif (!entity_components) {\r\n\t\treturn []\r\n\t}\r\n\tvar components_of_type = entity_components[c_type.name]\r\n\tif (!components_of_type) {\r\n\t\treturn []\r\n\t}\r\n\treturn components_of_type\r\n}\r\n\r\nEntityManager.prototype.remove = function (component, e) {\r\n\tvar entity_components = this._components[e.id]\r\n\tif (!entity_components) {\r\n\t\treturn\r\n\t}\r\n\tvar components_of_type = entity_components[component.constructor.name]\r\n\tif (!components_of_type) {\r\n\t\treturn\r\n\t}\r\n\tentity_components[component.constructor.name] = entity_components[component.constructor.name].filter(function (compon) {\r\n\t\treturn compon !== component\r\n\t})\r\n}\r\n\r\nEntityManager.prototype.getEnities = function (c_type) {\r\n\treturn Object.values(this._entities).filter(\r\n\t\t(entity) => {\r\n\t\t\treturn entity && this.get(c_type, entity).length\r\n\t\t}\r\n\t)\r\n}\r\n\r\n\r\n\n\n//# sourceURL=webpack:///../lib/ecs/index.js?");

/***/ }),

/***/ "../lib/ecs/physics/gravityEngine.js":
/*!*******************************************!*\
  !*** ../lib/ecs/physics/gravityEngine.js ***!
  \*******************************************/
/*! exports provided: GravityEngine */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GravityEngine\", function() { return GravityEngine; });\n/* harmony import */ var _physics_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./physics.js */ \"../lib/ecs/physics/physics.js\");\n/* harmony import */ var _transform_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transform.js */ \"../lib/ecs/physics/transform.js\");\n\r\n\r\n\r\nfunction GravityEngine(manager, interaction){\r\n\tthis.manager = manager\r\n\tthis.interaction = interaction ? interaction : 0.1\r\n}\r\n\r\nfunction computeAttraction(\r\n\tcompute,\r\n\tnaibors,\r\n\tinteraction\r\n)\r\n{\r\n\tvar ret=[0,0]\r\n\tnaibors.forEach(element => {\r\n\t\tif(element==compute) return\r\n\t\tvar distanceX = (element.positions[0]-compute.positions[0])\r\n\t\tvar distanceY = (element.positions[1]-compute.positions[1])\r\n\t\t\r\n\t\tvar distance2= distanceX*distanceX + distanceY*distanceY\r\n\t\tvar distance = Math.sqrt(distance2)\r\n\r\n\t\tvar ascIntencity = element.mass / distance2 * interaction\r\n\t\tret[0] += distanceX / distance * ascIntencity\r\n\t\tret[1] += distanceY / distance * ascIntencity\r\n\t})\r\n\treturn ret\r\n}\r\n\r\nGravityEngine.prototype.compute= function()\r\n{\r\n\r\n\tvar physic_entity = this.manager.getEnities(_physics_js__WEBPACK_IMPORTED_MODULE_0__[\"Physics\"]).map((elem)=>{\r\n\t\tvar physics = this.manager.get(_physics_js__WEBPACK_IMPORTED_MODULE_0__[\"Physics\"], elem)[0]\r\n\t\tvar transform = this.manager.get(_transform_js__WEBPACK_IMPORTED_MODULE_1__[\"Transform\"], elem)[0]\r\n\t\treturn {\r\n\t\t\te: elem,\r\n\t\t\tmass:  physics.mass,\r\n\t\t\tphysics,\r\n\t\t\tpositions: transform.positions\r\n\t\t}\r\n\t})\r\n\r\n\tfor(var i = 0; i< physic_entity.length; i++){\r\n\t\tvar elem = physic_entity[i]\r\n\t\tvar asc = computeAttraction(\r\n\t\t\telem,\r\n\t\t\tphysic_entity, this.interaction)\r\n\t\telem.physics.applyAsc(asc)\r\n\t}\r\n}\r\n\r\n\n\n//# sourceURL=webpack:///../lib/ecs/physics/gravityEngine.js?");

/***/ }),

/***/ "../lib/ecs/physics/physics.js":
/*!*************************************!*\
  !*** ../lib/ecs/physics/physics.js ***!
  \*************************************/
/*! exports provided: PhysicsEngine, Physics */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PhysicsEngine\", function() { return PhysicsEngine; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Physics\", function() { return Physics; });\n/* harmony import */ var _transform__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transform */ \"../lib/ecs/physics/transform.js\");\n\r\nfunction Physics(speeds, mass, drag) {\r\n\tthis.speeds = speeds\r\n\tthis.mass = mass\r\n\tthis.drag = isNaN(drag) ? 0.001 : drag\r\n\tthis.maxSpeed = 100\r\n}\r\n\r\n\r\nPhysics.prototype.applyForce = function (force) {\r\n\tfor (var i = 0; i < this.speeds.length; i++) {\r\n\t\tthis.speeds[i] += force[i] / this.mass\r\n\t}\r\n}\r\n\r\nPhysics.prototype.applyAsc = function (asc) {\r\n\tfor (var i = 0; i < this.speeds.length; i++) {\r\n\t\tthis.speeds[i] += asc[i]\r\n\t}\r\n}\r\n\r\nPhysics.prototype.compute = function () {\r\n\tvar speedValue = 0\r\n\tvar i\r\n\tfor (i = 0; i < this.speeds.length; i++) {\r\n\t\tspeedValue += this.speeds[i] * this.speeds[i]\r\n\t}\r\n\r\n\tvar speedMultipliyer = Math.min(1 - this.drag, this.maxSpeed / speedValue)\r\n\r\n\tfor (i = 0; i < this.speeds.length; i++) {\r\n\t\tthis.speeds[i] *= speedMultipliyer\r\n\t}\r\n}\r\n\r\nfunction PhysicsEngine(manager, engines) {\r\n\tthis.manager = manager\r\n\tthis.engines = engines\r\n}\r\n\r\nPhysicsEngine.prototype.compute = function () {\r\n\tthis.engines.forEach(engine => engine.compute())\r\n\tthis.manager.getEnities(Physics).forEach(elem => {\r\n\t\tvar physics = this.manager.get(Physics, elem)[0]\r\n\t\tphysics.compute()\r\n\t\tvar transform = this.manager.get(_transform__WEBPACK_IMPORTED_MODULE_0__[\"Transform\"], elem)[0]\r\n\t\ttransform.positions = transform.positions.add(physics.speeds)\r\n\t})\r\n}\r\n\r\n\n\n//# sourceURL=webpack:///../lib/ecs/physics/physics.js?");

/***/ }),

/***/ "../lib/ecs/physics/plasticColisionEngine.js":
/*!***************************************************!*\
  !*** ../lib/ecs/physics/plasticColisionEngine.js ***!
  \***************************************************/
/*! exports provided: PlasticColisionEngine */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PlasticColisionEngine\", function() { return PlasticColisionEngine; });\n/* harmony import */ var _shapes_circle_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../shapes/circle.js */ \"../lib/shapes/circle.js\");\n/* harmony import */ var _physics_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./physics.js */ \"../lib/ecs/physics/physics.js\");\n/* harmony import */ var _transform_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./transform.js */ \"../lib/ecs/physics/transform.js\");\n\r\n\r\n\r\n\r\nfunction PlasticColisionEngine(manager) {\r\n\tthis.manager = manager\r\n\tthis.physic_entity = null\r\n}\r\n\r\nfunction squareDistance(nodeA, nodeB) {\r\n\tvar square = 0\r\n\tfor (var i = 0; i < nodeA.positions.length; i++)\r\n\t\tsquare += Math.pow((nodeA.positions[i] - nodeB.positions[i]), 2)\r\n\treturn square\r\n}\r\n\r\nfunction computeColision(\r\n\tcompute,\r\n\tnaibors\r\n) {\r\n\tvar collisions = []\r\n\tnaibors.forEach(element => {\r\n\t\tif (element == compute) return\r\n\t\tvar distanceX = (element.positions[0] - compute.positions[0])\r\n\t\tvar distanceY = (element.positions[1] - compute.positions[1])\r\n\t\tvar centerDistance = compute.radius + element.radius\r\n\t\tif (Math.abs(distanceX) > centerDistance || Math.abs(distanceY) > centerDistance)\r\n\t\t\treturn\r\n\r\n\t\tvar distance2 = squareDistance(compute, element)\r\n\t\tif (distance2 > Math.pow(centerDistance, 2))\r\n\t\t\treturn\r\n\t\tif (compute.radius > element.radius)\r\n\t\t\tcollisions.push(element)\r\n\t})\r\n\treturn collisions\r\n}\r\n\r\nPlasticColisionEngine.prototype.compute = function () {\r\n\r\n\tvar physic_entity = this.manager.getEnities(_physics_js__WEBPACK_IMPORTED_MODULE_1__[\"Physics\"]).map((elem) => {\r\n\t\tvar circle = this.manager.get(_shapes_circle_js__WEBPACK_IMPORTED_MODULE_0__[\"ShapeCircle\"], elem)[0]\r\n\t\tvar transform = this.manager.get(_transform_js__WEBPACK_IMPORTED_MODULE_2__[\"Transform\"], elem)[0]\r\n\t\tvar physics = this.manager.get(_physics_js__WEBPACK_IMPORTED_MODULE_1__[\"Physics\"], elem)[0]\r\n\t\treturn {\r\n\t\t\te: elem,\r\n\t\t\tradius: circle.radius,\r\n\t\t\tcircle,\r\n\t\t\tpositions: transform.positions,\r\n\t\t\tspeeds: physics.speeds,\r\n\t\t\tphysics\r\n\t\t}\r\n\t})\r\n\r\n\tfor (var i = 0; i < physic_entity.length; i++) {\r\n\r\n\t\tvar elem = physic_entity[i]\r\n\t\tif (!this.manager.alive(elem.e))\r\n\t\t\tcontinue\r\n\t\tvar colisions = computeColision(\r\n\t\t\telem,\r\n\t\t\tphysic_entity)\r\n\t\tfor (var collisionIndex in colisions) {\r\n\t\t\tvar collision = colisions[collisionIndex]\r\n\t\t\tif (!this.manager.alive(collision.e))\r\n\t\t\t\tcontinue\r\n\t\t\tthis.manager.destroy(collision.e)\r\n\t\t\tthis.merge(elem, collision)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nPlasticColisionEngine.prototype.merge = function (nodeA, nodeB) {\r\n\tvar cubeRadiusA = Math.pow(nodeA.radius, 3);\r\n\tvar cubeRadiusB = Math.pow(nodeB.radius, 3);\r\n\tvar newRadious = Math.cbrt(cubeRadiusA + cubeRadiusB);\r\n\r\n\tnodeA.circle.radius = newRadious\r\n\tvar massA = nodeA.physics.mass\r\n\tvar massB = nodeB.physics.mass\r\n\tnodeA.physics.mass = massA + massB\r\n\r\n\tfor (var i = 0; i < nodeA.speeds.length; i++) {\r\n\t\tnodeA.speeds[i] = (nodeA.speeds[i] * massA + nodeB.speeds[i] * massB) / (massA + massB)\r\n\t}\r\n}\r\n\r\n\n\n//# sourceURL=webpack:///../lib/ecs/physics/plasticColisionEngine.js?");

/***/ }),

/***/ "../lib/ecs/physics/transform.js":
/*!***************************************!*\
  !*** ../lib/ecs/physics/transform.js ***!
  \***************************************/
/*! exports provided: Transform */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Transform\", function() { return Transform; });\n/* harmony import */ var _shapes_vector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../shapes/vector */ \"../lib/shapes/vector.js\");\n\r\n\r\nfunction Transform(positions) {\r\n\tthis.positions = new _shapes_vector__WEBPACK_IMPORTED_MODULE_0__[\"Vector\"](positions)\r\n}\r\n\r\n\n\n//# sourceURL=webpack:///../lib/ecs/physics/transform.js?");

/***/ }),

/***/ "../lib/ecs/physics/transformRotate.js":
/*!*********************************************!*\
  !*** ../lib/ecs/physics/transformRotate.js ***!
  \*********************************************/
/*! exports provided: TransformRotate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TransformRotate\", function() { return TransformRotate; });\n/* harmony import */ var _shapes_vector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../shapes/vector */ \"../lib/shapes/vector.js\");\n\r\n\r\nfunction TransformRotate(rotate) {\r\n\tthis.rotate = rotate\r\n}\r\n\n\n//# sourceURL=webpack:///../lib/ecs/physics/transformRotate.js?");

/***/ }),

/***/ "../lib/fe/touch.js":
/*!**************************!*\
  !*** ../lib/fe/touch.js ***!
  \**************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// written by Slobodan Zivkovic slobacartoonac@gmail.com\r\nfunction distance2d(a, b) {\r\n\treturn Math.sqrt((a.x - b.x) * (a.x - b.x) + (a.y - b.y) * (a.y - b.y))\r\n}\r\n\r\nfunction len2d(a) {\r\n\treturn Math.sqrt(a.x * a.x + a.y * a.y)\r\n}\r\n\r\nfunction getDelta(p1, n1, p2, n2) {\r\n\tif (!n2) {\r\n\t\treturn { x: n1.x - p1.x, y: n1.y - p1.y }\r\n\t}\r\n\treturn { x: ((n1.x - p1.x) + (n2.x - p2.x)) / 2, y: ((n1.y - p1.y) + (n2.y - p2.y)) / 2 }\r\n}\r\n\r\nfunction getZoom(p1, n1, p2, n2) {\r\n\tif (!n2) {\r\n\t\treturn 1\r\n\t}\r\n\tif (!p2) {\r\n\t\treturn 1\r\n\t}\r\n\tlet initialDistance = distance2d(p1, p2);\r\n\tlet newDistance = distance2d(n1, n2);\r\n\tif (initialDistance < 0.01)\r\n\t\treturn 1\r\n\telse\r\n\t\treturn newDistance / initialDistance\r\n}\r\n\r\nfunction getAngleDelta(p1, n1, p2, n2) {\r\n\tif (!n2) {\r\n\t\treturn 0\r\n\t}\r\n\tlet angle1 = getAngle(p1, p2)\r\n\tlet angle2 = getAngle(n1, n2)\r\n\treturn angle2 - angle1\r\n}\r\n\r\nfunction getAngle(p1, n1) {\r\n\tlet delta = getDelta(p1, n1)\r\n\tlet angle = Math.atan2(delta.y, delta.x)\r\n\treturn angle\r\n}\r\n\r\nfunction Touch(div, deadzone) {\r\n\tthis.deadzone = deadzone\r\n\tthis.clear()\r\n\tlet startPosition = null\r\n\tlet startMoveSecound = null\r\n\tlet position = null\r\n\tlet thisMoveSecound = null\r\n\tlet mouseDown = 0;\r\n\tlet click = true;\r\n\tlet touch = false;\r\n\tlet touchSecound = false;\r\n\tthis.mousePosition = { x: 0, y: 0 };\r\n\tthis.debug = false;\r\n\tthis.console_error = false;\r\n\tthis.throw_error = false;\r\n\tthis.last_error = ''\r\n\tconst moveTouchT = (e) => {\r\n\t\te.preventDefault()\r\n\t\tconst { top, left } = e.target.getBoundingClientRect()\r\n\t\tif (e.touches[1] && e.touches[0]) {\r\n\t\t\tlet first = { x: e.touches[0].clientX - left, y: e.touches[0].clientY - top }\r\n\t\t\tlet secound = { x: e.touches[1].clientX - left, y: e.touches[1].clientY - top }\r\n\t\t\tthis.mousePosition = { x: (first.x + secound.x) / 2, y: (first.y + secound.y) / 2 }\r\n\t\t\treturn moveTouch(first, secound)\r\n\t\t}\r\n\t\tif (e.touches[0]) {\r\n\t\t\tlet first = { x: e.touches[0].clientX - left, y: e.touches[0].clientY - top }\r\n\t\t\tthis.mousePosition = { x: first.x, y: first.y }\r\n\t\t\treturn moveTouch(first)\r\n\t\t}\r\n\t}\r\n\tconst moveTouchM = (e) => {\r\n\t\te.preventDefault()\r\n\t\tconst { top, left } = e.target.getBoundingClientRect()\r\n\t\tthis.mousePosition = { x: e.clientX - left, y: e.clientY - top }\r\n\t\tif (mouseDown) moveTouch({ x: e.clientX - left, y: e.clientY - top })\r\n\t}\r\n\r\n\tconst moveTouch = (e, secound) => {\r\n\t\ttouch = true;\r\n\t\tif (startPosition == null) {\r\n\t\t\tstartPosition = { x: e.x, y: e.y }\r\n\t\t\tposition = { x: e.x, y: e.y }\r\n\t\t\tthis.triger('start', position)\r\n\t\t\tclick = true\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (secound && startMoveSecound == null) {\r\n\t\t\ttouchSecound = true;\r\n\t\t\tif (distance2d(startPosition, secound) < distance2d(startPosition, e)) {\r\n\t\t\t\t//switched touches\r\n\t\t\t\tstartPosition = { x: e.x, y: e.y };\r\n\t\t\t\tposition = { x: e.x, y: e.y };\r\n\t\t\t}\r\n\t\t\tstartMoveSecound = { x: secound.x, y: secound.y }\r\n\t\t\tthisMoveSecound = { x: secound.x, y: secound.y }\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!secound && startMoveSecound) {\r\n\t\t\ttouchSecound = false;\r\n\t\t\tstartMoveSecound = null\r\n\t\t\tthisMoveSecound = null\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\r\n\t\tlet delta = getDelta(position, e, thisMoveSecound, secound)\r\n\t\tlet deltaZoom = getZoom(position, e, thisMoveSecound, secound)\r\n\t\tlet deltaAngle = getAngleDelta(position, e, thisMoveSecound, secound)\r\n\t\tposition = { x: e.x, y: e.y }\r\n\t\tthisMoveSecound = secound ? { x: secound.x, y: secound.y } : null\r\n\t\tlet direction = getDelta(startPosition, position, startMoveSecound, thisMoveSecound)\r\n\t\tlet zoom = getZoom(startPosition, position, startMoveSecound, thisMoveSecound)\r\n\t\tlet distance = len2d(direction)\r\n\t\tlet angle = getAngleDelta(startPosition, position, startMoveSecound, thisMoveSecound)\r\n\t\tlet debug = this.debug && `${startPosition && 'Start: ' + JSON.stringify(startPosition)},\r\n\t\t${position && 'This: ' + JSON.stringify(position)}, \r\n\t\t${startMoveSecound && 'Start secound: ' + JSON.stringify(startMoveSecound)}, \r\n\t\t${thisMoveSecound && 'Start this: ' + JSON.stringify(thisMoveSecound)},\r\n\t\t${delta && 'Delta: ' + JSON.stringify(delta)},\r\n\t\t${'Zoom: ' + zoom},\r\n\t\t${'DZoom: ' + deltaZoom}\r\n\t\t${'Angle: ' + angle}\r\n\t\t${'DAngle: ' + deltaAngle}\r\n\t\t${'isPrimary: ' + ((!touchSecound && mouseDown == 0) || mouseDown == 1)}\r\n\t\t${this.last_error}`\r\n\t\tlet addition = {\r\n\t\t\tdelta,\r\n\t\t\tdirection,\r\n\t\t\tstartPosition,\r\n\t\t\tposition,\r\n\t\t\tdistance,\r\n\t\t\tclick,\r\n\t\t\tisClick: click,\r\n\t\t\tmouseDown,\r\n\t\t\tzoom,\r\n\t\t\tdeltaZoom,\r\n\t\t\ttouchSecound,\r\n\t\t\tangle,\r\n\t\t\tdeltaAngle,\r\n\t\t\tisPrimary: ((!touchSecound && mouseDown == 0) || mouseDown == 1),\r\n\t\t\tdebug\r\n\t\t}\r\n\r\n\t\tthis.triger('force', addition)\r\n\t\tif (distance > this.deadzone) {\r\n\t\t\tclick = false\r\n\t\t\tif (Math.abs(direction.x) > Math.abs(direction.y)) {\r\n\t\t\t\tif (direction.x > 0) {\r\n\t\t\t\t\tthis.triger('right', addition)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.triger('left', addition)\r\n\t\t\t\t}\r\n\t\t\t} else if (direction.y > 0) {\r\n\t\t\t\tthis.triger('down', addition)\r\n\t\t\t} else {\r\n\t\t\t\tthis.triger('up', addition)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t//= {up:[],down:[],left:[],right:[],stop:[],click:[],force:[]}\r\n\tconst stopTouch = (e) => {\r\n\t\te.preventDefault()\r\n\t\tif (touch == false) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tlet delta = { x: 0, y: 0 }\r\n\t\tlet deltaZoom = 0\r\n\t\tlet deltaAngle = 0\r\n\t\tlet direction = getDelta(startPosition, position, startMoveSecound, thisMoveSecound)\r\n\t\tlet zoom = getZoom(startPosition, position, startMoveSecound, thisMoveSecound)\r\n\t\tlet angle = getAngleDelta(startPosition, position, startMoveSecound, thisMoveSecound)\r\n\t\tlet distance = len2d(direction)\r\n\t\tlet debug = this.debug && `${startPosition && 'Start: ' + JSON.stringify(startPosition)},\r\n\t\t${position && 'This: ' + JSON.stringify(position)}, \r\n\t\t${startMoveSecound && 'Start secound: ' + JSON.stringify(startMoveSecound)}, \r\n\t\t${thisMoveSecound && 'Start this: ' + JSON.stringify(thisMoveSecound)},\r\n\t\t${delta && 'Delta: ' + JSON.stringify(delta)},\r\n\t\t${'Zoom: ' + zoom},\r\n\t\t${'DZoom: ' + deltaZoom}\r\n\t\t${'Angle: ' + angle}\r\n\t\t${'DAngle: ' + deltaAngle}\r\n\t\t${'isPrimary: ' + ((!touchSecound && mouseDown == 0) || mouseDown == 1)}\r\n\t\t${this.last_error}`\r\n\t\tconst addition = {\r\n\t\t\tx: startPosition.x,\r\n\t\t\ty: startPosition.y,\r\n\t\t\tdelta,\r\n\t\t\tdirection,\r\n\t\t\tstartPosition,\r\n\t\t\tposition,\r\n\t\t\tdistance,\r\n\t\t\tclick,\r\n\t\t\tisClick: click,\r\n\t\t\tmouseDown,\r\n\t\t\tzoom,\r\n\t\t\tdeltaZoom,\r\n\t\t\ttouchSecound,\r\n\t\t\tangle,\r\n\t\t\tdeltaAngle,\r\n\t\t\tisPrimary: ((!touchSecound && mouseDown == 0) || mouseDown == 1),\r\n\t\t\tdebug\r\n\t\t}\r\n\t\ttouch = false\r\n\t\ttouchSecound = false;\r\n\t\tlet saveMove = startPosition;\r\n\r\n\t\tif (click) {\r\n\t\t\tif (e.button) {\r\n\t\t\t\tif (e.button === 1) this.triger('bmiddle', addition)\r\n\t\t\t\tif (e.button === 2) this.triger('bright', addition)\r\n\t\t\t} else if (saveMove) {\r\n\t\t\t\tthis.triger('click', addition)\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.triger('stop', addition)\r\n\t\tstartPosition = null\r\n\t\tposition = null\r\n\t\tstartMoveSecound = null\r\n\t\tthisMoveSecound = null\r\n\t\tmouseDown = 0\r\n\t}\r\n\tdiv.addEventListener(\r\n\t\t'touchstart',\r\n\t\te => {\r\n\t\t\te.preventDefault()\r\n\t\t},\r\n\t\tfalse,\r\n\t)\r\n\tdiv.addEventListener('touchmove', moveTouchT, false)\r\n\tdiv.addEventListener('touchend', stopTouch, false)\r\n\tdiv.addEventListener('touchstart', moveTouchT, false)\r\n\tdiv.addEventListener('mouseleave', stopTouch, false)\r\n\tdiv.addEventListener('mousemove', moveTouchM)\r\n\tdiv.addEventListener('mouseup', stopTouch)\r\n\tdiv.addEventListener('mousedown', e => {\r\n\t\tmouseDown = 1 + e.button;\r\n\t\tmoveTouchM(e)\r\n\t})\r\n}\r\n/*eslint-disable */\r\nTouch.prototype.sub = function (ev, func) {\r\n\tif (this.events[ev]) this.events[ev].push(func)\r\n}\r\n\r\nTouch.prototype.onClick = function (func) {\r\n\tthis.events.click.push(func)\r\n}\r\nTouch.prototype.onForce = function (func) {\r\n\tthis.events.force.push(func)\r\n}\r\nTouch.prototype.onStop = function (func) {\r\n\tthis.events.stop.push(func)\r\n}\r\nTouch.prototype.onUp = function (func) {\r\n\tthis.events.up.push(func)\r\n}\r\nTouch.prototype.onDown = function (func) {\r\n\tthis.events.down.push(func)\r\n}\r\nTouch.prototype.onLeft = function (func) {\r\n\tthis.events.left.push(func)\r\n}\r\nTouch.prototype.onRight = function (func) {\r\n\tthis.events.right.push(func)\r\n}\r\n\r\nTouch.prototype.unsub = function (ev, func) {\r\n\tif (this.events[ev])\r\n\t\tthis.events[ev] = this.events[ev].filter(fu => fu !== func)\r\n}\r\nTouch.prototype.clearEvlent = function (ev) {\r\n\tif (this.events[ev]) this.events[ev] = []\r\n}\r\nTouch.prototype.clear = function () {\r\n\tthis.events = {\r\n\t\tup: [],\r\n\t\tdown: [],\r\n\t\tleft: [],\r\n\t\tright: [],\r\n\t\tstop: [],\r\n\t\tstart: [],\r\n\t\tclick: [],\r\n\t\tforce: [],\r\n\t\tbmiddle: [],\r\n\t\tbright: [],\r\n\t}\r\n}\r\nTouch.prototype.triger = function (ev, args) {\r\n\tif (this.events[ev])\r\n\t\tthis.events[ev].forEach(func => {\r\n\t\t\ttry {\r\n\t\t\t\tfunc(args)\r\n\t\t\t}\r\n\t\t\tcatch (e) {\r\n\t\t\t\tif (this.console_error) console.log(e)\r\n\t\t\t\tthis.last_error = 'Error: ' + e.name +\r\n\t\t\t\t\t' ' + e.foo +\r\n\t\t\t\t\t' ' + e.message +\r\n\t\t\t\t\t' ' + e.stack\r\n\t\t\t\tif (this.throw_error) throw e\r\n\t\t\t}\r\n\t\t})\r\n}\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (Touch);\n\n//# sourceURL=webpack:///../lib/fe/touch.js?");

/***/ }),

/***/ "../lib/shapes/box.js":
/*!****************************!*\
  !*** ../lib/shapes/box.js ***!
  \****************************/
/*! exports provided: ShapeBox */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ShapeBox\", function() { return ShapeBox; });\nfunction ShapeBox(size_x, size_y) {\n\tthis.x = size_x;\n\tthis.y = size_y;\n}\n\n\n\n//# sourceURL=webpack:///../lib/shapes/box.js?");

/***/ }),

/***/ "../lib/shapes/circle.js":
/*!*******************************!*\
  !*** ../lib/shapes/circle.js ***!
  \*******************************/
/*! exports provided: ShapeCircle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ShapeCircle\", function() { return ShapeCircle; });\nfunction ShapeCircle(radius){\r\n\tthis.radius = radius\r\n}\r\n\r\n\n\n//# sourceURL=webpack:///../lib/shapes/circle.js?");

/***/ }),

/***/ "../lib/shapes/rounded-box.js":
/*!************************************!*\
  !*** ../lib/shapes/rounded-box.js ***!
  \************************************/
/*! exports provided: ShapeRounded */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ShapeRounded\", function() { return ShapeRounded; });\nfunction ShapeRounded(radius) {\n\tthis.radius = radius;\n}\n\n\n\n//# sourceURL=webpack:///../lib/shapes/rounded-box.js?");

/***/ }),

/***/ "../lib/shapes/sprite.js":
/*!*******************************!*\
  !*** ../lib/shapes/sprite.js ***!
  \*******************************/
/*! exports provided: Sprite */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Sprite\", function() { return Sprite; });\nfunction Sprite(image) {\n\tthis.image = image\n}\n\n\n\n//# sourceURL=webpack:///../lib/shapes/sprite.js?");

/***/ }),

/***/ "../lib/shapes/text.js":
/*!*****************************!*\
  !*** ../lib/shapes/text.js ***!
  \*****************************/
/*! exports provided: ShapeText */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ShapeText\", function() { return ShapeText; });\nfunction ShapeText(font, text){\n\tthis.font = font;\n\tthis.text = text;\n}\n\n\n\n//# sourceURL=webpack:///../lib/shapes/text.js?");

/***/ }),

/***/ "../lib/shapes/vector.js":
/*!*******************************!*\
  !*** ../lib/shapes/vector.js ***!
  \*******************************/
/*! exports provided: Vector */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Vector\", function() { return Vector; });\nfunction Vector(...array) {\n\tArray.call(this)\n\tif (array.length == 1) {\n\t\tvar item = array[0]\n\t\tvar arr = Object.values(item)\n\t\tif (Object.hasOwnProperty.call(item, 'length') &&\n\t\t\titem.length !== arr.length) {\n\t\t\tarr.pop()\n\t\t}\n\t\tthis.push(...arr)\n\t} else {\n\t\tthis.push(...Object.values(array))\n\t}\n\n\tObject.defineProperty(this, 'x', {\n\t\tget() {\n\t\t\treturn this[0];\n\t\t},\n\t\tset(value) {\n\t\t\tthis[0] = value;\n\t\t}\n\t});\n\tObject.defineProperty(this, 'y', {\n\t\tget() {\n\t\t\treturn this[1];\n\t\t},\n\t\tset(value) {\n\t\t\tthis[1] = value;\n\t\t}\n\t});\n\tObject.defineProperty(this, 'z', {\n\t\tget() {\n\t\t\treturn this[2];\n\t\t},\n\t\tset(value) {\n\t\t\tthis[2] = value;\n\t\t}\n\t});\n}\n\nVector.prototype.x = 0;\nVector.prototype.y = 0;\nVector.prototype.z = 0;\n\nVector.prototype = Object.create(Array.prototype, {\n\tconstructor: {\n\t\tvalue: Vector,\n\t\tenumerable: false, // Make it non-enumerable, so it won't appear in `for...in` loop\n\t\twritable: true,\n\t\tconfigurable: true,\n\t}\n})\n\nVector.prototype.add = function (toAdd) {\n\tlet ret = this.copy()\n\tfor (var k = 0; k < ret.length; k++) {\n\t\tif (!Object.hasOwnProperty.call(ret, k)) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (!Object.hasOwnProperty.call(toAdd, k)) {\n\t\t\tcontinue;\n\t\t}\n\t\tret[k] += toAdd[k]\n\t}\n\treturn ret\n}\n\nVector.prototype.update = function (newValues) {\n\tfor (var k = 0; k < this.length; k++) {\n\t\tif (!Object.hasOwnProperty.call(this, k)) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (!Object.hasOwnProperty.call(newValues, k)) {\n\t\t\tcontinue;\n\t\t}\n\t\tthis[k] = newValues[k]\n\t}\n}\n\nVector.prototype.negate = function () {\n\tlet ret = this.copy()\n\tfor (var k = 0; k < ret.length; k++) {\n\t\tif (!Object.hasOwnProperty.call(ret, k)) {\n\t\t\tcontinue;\n\t\t}\n\t\tret[k] = -ret[k]\n\t}\n\treturn ret\n}\nVector.prototype.substract = function (toAdd) {\n\treturn this.add(toAdd.negate())\n}\nVector.prototype.magnitude = function () {\n\tlet magnitude = 0;\n\tfor (var k = 0; k < this.length; k++) {\n\t\tif (!Object.hasOwnProperty.call(this, k)) {\n\t\t\tcontinue;\n\t\t}\n\t\tmagnitude += this[k] * this[k]\n\t}\n\treturn Math.sqrt(magnitude);\n}\nVector.prototype.normalise = function (toAdd) {\n\tlet magnitude = this.magnitude()\n\treturn this.scale(1 / magnitude)\n}\nVector.prototype.scale = function (scale) {\n\tlet ret = this.copy()\n\tfor (var k = 0; k < ret.length; k++) {\n\t\tif (!Object.hasOwnProperty.call(ret, k)) {\n\t\t\tcontinue;\n\t\t}\n\t\tret[k] *= scale\n\t}\n\treturn ret\n}\n\nVector.prototype.copy = function () {\n\treturn new this.constructor(this)\n}\n\n\n\n//# sourceURL=webpack:///../lib/shapes/vector.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/harmony-module.js":
/*!*******************************************!*\
  !*** (webpack)/buildin/harmony-module.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n//# sourceURL=webpack:///(webpack)/buildin/harmony-module.js?");

/***/ }),

/***/ "./src/javascript/index.js":
/*!*********************************!*\
  !*** ./src/javascript/index.js ***!
  \*********************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var gravity_calc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! gravity_calc */ \"../gravity_calc/pkg/gravity_calc.js\");\n/* harmony import */ var _lib_fe_touch_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../lib/fe/touch.js */ \"../lib/fe/touch.js\");\n/* harmony import */ var _lib_ecs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../lib/ecs */ \"../lib/ecs/index.js\");\n/* harmony import */ var _lib_ecs_physics_physics_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../lib/ecs/physics/physics.js */ \"../lib/ecs/physics/physics.js\");\n/* harmony import */ var _lib_shapes_circle_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../lib/shapes/circle.js */ \"../lib/shapes/circle.js\");\n/* harmony import */ var _lib_ecs_physics_plasticColisionEngine__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../lib/ecs/physics/plasticColisionEngine */ \"../lib/ecs/physics/plasticColisionEngine.js\");\n/* harmony import */ var _lib_ecs_physics_gravityEngine__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../lib/ecs/physics/gravityEngine */ \"../lib/ecs/physics/gravityEngine.js\");\n/* harmony import */ var _lib_ecs_drawers_gravityColorEngine_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../lib/ecs/drawers/gravityColorEngine.js */ \"../lib/ecs/drawers/gravityColorEngine.js\");\n/* harmony import */ var _lib_ecs_physics_transform_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../lib/ecs/physics/transform.js */ \"../lib/ecs/physics/transform.js\");\n/* harmony import */ var _lib_ecs_drawers_ploter_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../lib/ecs/drawers/ploter.js */ \"../lib/ecs/drawers/ploter.js\");\n/* harmony import */ var _lib_ecs_drawers_drawFPS_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../lib/ecs/drawers/drawFPS.js */ \"../lib/ecs/drawers/drawFPS.js\");\n/* harmony import */ var _lib_ecs_drawers_drawGrid_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../lib/ecs/drawers/drawGrid.js */ \"../lib/ecs/drawers/drawGrid.js\");\n/* harmony import */ var _lib_ecs_drawers_render_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../lib/ecs/drawers/render.js */ \"../lib/ecs/drawers/render.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst canvas = document.getElementById('phy_canvas')\nconst toolokInput = document.getElementById('tolook_value')\nconst drawMass = document.getElementById('draw_mass')\nconst drawGrid = document.getElementById('draw_grid')\nconst drawFPS = document.getElementById('draw_fps')\nconst fullSpeed = document.getElementById('full_speed')\nvar draw = new _lib_ecs_drawers_ploter_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"](canvas)\nvar position = { x: 0, y: 0, scale: 0.2 }\nlet width = canvas.width = 640;\nlet height = canvas.height = 480;\nlet gravity = gravity_calc__WEBPACK_IMPORTED_MODULE_0__[\"Gravity\"].new(width, height);\nlet img = draw.context.createImageData(width, height)\n\nconst fps = new _lib_ecs_drawers_drawFPS_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"](draw.context)\nconst grid = new _lib_ecs_drawers_drawGrid_js__WEBPACK_IMPORTED_MODULE_11__[\"default\"](draw.context)\n\nvar manager = new _lib_ecs__WEBPACK_IMPORTED_MODULE_2__[\"EntityManager\"]()\nconst points = new _lib_ecs_drawers_render_js__WEBPACK_IMPORTED_MODULE_12__[\"RenderEngine\"](draw.context, manager)\nconst gravityEngine = new _lib_ecs_physics_gravityEngine__WEBPACK_IMPORTED_MODULE_6__[\"GravityEngine\"](manager)\nconst colisionEngine = new _lib_ecs_physics_plasticColisionEngine__WEBPACK_IMPORTED_MODULE_5__[\"PlasticColisionEngine\"](manager)\nconst gravityColorEngine = new _lib_ecs_drawers_gravityColorEngine_js__WEBPACK_IMPORTED_MODULE_7__[\"GravityColorEngine\"](manager)\nconst physics = new _lib_ecs_physics_physics_js__WEBPACK_IMPORTED_MODULE_3__[\"PhysicsEngine\"](manager, [gravityEngine, colisionEngine, gravityColorEngine])\n\n\n\nvar positionArray = new Float32Array([position.x, position.y, position.scale])\nwindow.addEventListener('mousewheel', function (e) {\n\tposition.scale *= e.wheelDelta > 0 ? 1.1 : 0.88\n})\nvar touch = new _lib_fe_touch_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](canvas, 100)\ntouch.sub('force', ({ delta, deltaZoom }) => {\n\tposition = {\n\t\t...position, scale: position.scale * deltaZoom, x: position.x - delta.x / position.scale,\n\t\ty: position.y - delta.y / position.scale\n\t}\n})\n\nvar entity = null\n\nvar all = []\n\nfunction calculateMass(radius) {\n\tvar massVolume = 0.1\n\treturn Math.pow(radius, 3) * Math.PI * massVolume\n}\n\nfunction createSnode(positions, speeds, radius) {\n\tentity = manager.create()\n\tmanager.asign(new _lib_ecs_physics_transform_js__WEBPACK_IMPORTED_MODULE_8__[\"Transform\"](positions), entity)\n\tmanager.asign(new _lib_ecs_physics_physics_js__WEBPACK_IMPORTED_MODULE_3__[\"Physics\"](speeds, calculateMass(radius), 0), entity)\n\tmanager.asign(new _lib_shapes_circle_js__WEBPACK_IMPORTED_MODULE_4__[\"ShapeCircle\"](radius), entity)\n\tmanager.asign(new _lib_ecs_drawers_render_js__WEBPACK_IMPORTED_MODULE_12__[\"Renderer\"]('#aaffbb'), entity)\n\treturn entity\n}\n\nall.push(createSnode([0, 0], [0, 0], 65, all, 'Sun'))\nall.push(createSnode([255, 0], [0, 5], 3, all, 'Mercury'))\nall.push(createSnode([300, 0], [0, 5], 4, all, 'Venus'))\nall.push(createSnode([450, 0], [0, 4], 7, all, 'Earth'))\nall.push(createSnode([600, 0], [0, 4], 4, all, 'Mars'))\nall.push(createSnode([1400, 0], [0, 2.5], 25, all, 'Jupiter'))\nall.push(createSnode([1440, 0], [0, 6], 2, all, 'Europa'))\nall.push(createSnode([1450, 0], [0, 6], 2, all, 'Europa'))\nall.push(createSnode([2800, 0], [0, 2.5], 5, all, 'Saturn'))\nconst generateItem = (size) => {\n\tvar angle = Math.random() * 2 * Math.PI\n\tvar radius = 200 + Math.random() * 2000\n\tvar x = Math.sin(angle) * radius\n\tvar y = Math.cos(angle) * radius\n\tvar tan = Math.atan2(x, y) - Math.PI / 2\n\n\tvar el = createSnode(\n\t\t[x, y],\n\t\t[(10 * Math.sin(tan) + Math.random() * 14 - 7),\n\t\t(10 * Math.cos(tan) + Math.random() * 14 - 7)],\n\t\tsize || (0.1 + Math.random()), all)\n\tall.push(el)\n}\n\nsetInterval(() => {\n\tall.length < 30 && generateItem()\n}, 200)\n\nvar planetsArray = new Float32Array(all.length * 3);\n\nconst drawGravity2 = () => {\n\tvar planetsDataLength = all.length * 3\n\tif (planetsArray.length !== planetsDataLength)\n\t\tplanetsArray = new Float32Array(all.length * 3);\n\tvar bufferIndex = 0;\n\tall.forEach((el) => {\n\t\tvar transform = manager.get(_lib_ecs_physics_transform_js__WEBPACK_IMPORTED_MODULE_8__[\"Transform\"], el)[0]\n\t\tvar physic = manager.get(_lib_ecs_physics_physics_js__WEBPACK_IMPORTED_MODULE_3__[\"Physics\"], el)[0]\n\t\tplanetsArray[bufferIndex] = transform.positions[0]\n\t\tplanetsArray[bufferIndex + 1] = transform.positions[1]\n\t\tplanetsArray[bufferIndex + 2] = physic.mass\n\t\tbufferIndex += 3\n\t})\n\tpositionArray[0] = position.x\n\tpositionArray[1] = position.y\n\tpositionArray[2] = position.scale\n\tgravity.draw_planets(\n\t\timg.data,\n\t\tplanetsArray,\n\t\tplanetsDataLength,\n\t\tpositionArray\n\t);\n\tdraw.context.putImageData(img, 0, 0);\n}\nvar i = 0;\n\nfunction work() {\n\tvar numb = parseInt(toolokInput.value)\n\tif (!isNaN(numb)) {\n\t\tvar toLookEntity = all[numb % all.length]\n\t\tvar toLookTransform = manager.get(_lib_ecs_physics_transform_js__WEBPACK_IMPORTED_MODULE_8__[\"Transform\"], toLookEntity)[0]\n\t\tposition.x = toLookTransform.positions[0]\n\t\tposition.y = toLookTransform.positions[1]\n\t}\n\tdraw.clear()\n\tif (drawMass.checked)\n\t\tdrawGravity2()\n\tif (drawGrid.checked)\n\t\tgrid.draw(100, 100, position)\n\tpoints.draw(position)\n\tif (drawFPS.checked)\n\t\tfps.draw()\n\tphysics.compute()\n\n\tall = all.filter(function (e, index) {\n\t\tvar alive = manager.alive(e)\n\t\tif (!alive && !isNaN(numb) && numb >= index) {\n\t\t\ttoolokInput.value = numb - 1\n\t\t}\n\t\treturn alive\n\t})\n\tif (numb >= all.length) {\n\t\ttoolokInput.value = all.length - 1\n\t}\n\trequestAnimationFrame(work)\n}\nrequestAnimationFrame(work)\n\n//# sourceURL=webpack:///./src/javascript/index.js?");

/***/ })

}]);