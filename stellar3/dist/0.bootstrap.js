(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[0],{

/***/ "../gravity_calc/pkg/gravity_calc.js":
/*!*******************************************!*\
  !*** ../gravity_calc/pkg/gravity_calc.js ***!
  \*******************************************/
/*! exports provided: Gravity, View, __wbindgen_throw */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Gravity\", function() { return Gravity; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"View\", function() { return View; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_throw\", function() { return __wbindgen_throw; });\n/* harmony import */ var _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gravity_calc_bg.wasm */ \"../gravity_calc/pkg/gravity_calc_bg.wasm\");\n\n\nlet cachegetUint8Memory = null;\nfunction getUint8Memory() {\n    if (cachegetUint8Memory === null || cachegetUint8Memory.buffer !== _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer) {\n        cachegetUint8Memory = new Uint8Array(_gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n    }\n    return cachegetUint8Memory;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nfunction passArray8ToWasm(arg) {\n    const ptr = _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"](arg.length * 1);\n    getUint8Memory().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nlet cachegetFloat32Memory = null;\nfunction getFloat32Memory() {\n    if (cachegetFloat32Memory === null || cachegetFloat32Memory.buffer !== _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer) {\n        cachegetFloat32Memory = new Float32Array(_gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n    }\n    return cachegetFloat32Memory;\n}\n\nfunction passArrayF32ToWasm(arg) {\n    const ptr = _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"](arg.length * 4);\n    getFloat32Memory().set(arg, ptr / 4);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nlet cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nfunction getStringFromWasm(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory().subarray(ptr, ptr + len));\n}\n/**\n*/\nclass Gravity {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Gravity.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_gravity_free\"](ptr);\n    }\n    /**\n    * @param {number} width\n    * @param {number} height\n    * @returns {Gravity}\n    */\n    static new(width, height) {\n        const ret = _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"gravity_new\"](width, height);\n        return Gravity.__wrap(ret);\n    }\n    /**\n    * @returns {number}\n    */\n    width() {\n        const ret = _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"gravity_width\"](this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    height() {\n        const ret = _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"gravity_height\"](this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} x\n    * @param {number} y\n    * @param {number} scale\n    */\n    set_view(x, y, scale) {\n        _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"gravity_set_view\"](this.ptr, x, y, scale);\n    }\n    /**\n    * @param {Uint8Array} data\n    * @param {number} buffer_length\n    * @param {Float32Array} planets\n    * @param {number} planets_length\n    */\n    draw_planets(data, buffer_length, planets, planets_length) {\n        const ptr0 = passArray8ToWasm(data);\n        const len0 = WASM_VECTOR_LEN;\n        try {\n            _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"gravity_draw_planets\"](this.ptr, ptr0, len0, buffer_length, passArrayF32ToWasm(planets), WASM_VECTOR_LEN, planets_length);\n        } finally {\n            data.set(getUint8Memory().subarray(ptr0 / 1, ptr0 / 1 + len0));\n            _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_free\"](ptr0, len0 * 1);\n        }\n    }\n    /**\n    * @param {Uint8Array} data\n    * @param {number} length\n    */\n    mutate_data(data, length) {\n        const ptr0 = passArray8ToWasm(data);\n        const len0 = WASM_VECTOR_LEN;\n        try {\n            _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"gravity_mutate_data\"](this.ptr, ptr0, len0, length);\n        } finally {\n            data.set(getUint8Memory().subarray(ptr0 / 1, ptr0 / 1 + len0));\n            _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_free\"](ptr0, len0 * 1);\n        }\n    }\n}\n/**\n*/\nclass View {\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_view_free\"](ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    get x() {\n        const ret = _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_get_view_x\"](this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set x(arg0) {\n        _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_set_view_x\"](this.ptr, arg0);\n    }\n    /**\n    * @returns {number}\n    */\n    get y() {\n        const ret = _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_get_view_y\"](this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set y(arg0) {\n        _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_set_view_y\"](this.ptr, arg0);\n    }\n    /**\n    * @returns {number}\n    */\n    get scale() {\n        const ret = _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_get_view_scale\"](this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set scale(arg0) {\n        _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_set_view_scale\"](this.ptr, arg0);\n    }\n}\n\nconst __wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm(arg0, arg1));\n};\n\n\n\n//# sourceURL=webpack:///../gravity_calc/pkg/gravity_calc.js?");

/***/ }),

/***/ "../gravity_calc/pkg/gravity_calc_bg.wasm":
/*!************************************************!*\
  !*** ../gravity_calc/pkg/gravity_calc_bg.wasm ***!
  \************************************************/
/*! exports provided: memory, __wbg_view_free, __wbg_get_view_x, __wbg_set_view_x, __wbg_get_view_y, __wbg_set_view_y, __wbg_get_view_scale, __wbg_set_view_scale, __wbg_gravity_free, gravity_new, gravity_width, gravity_height, gravity_set_view, gravity_draw_planets, gravity_mutate_data, __wbindgen_malloc, __wbindgen_free */
/***/ (function(module, exports, __webpack_require__) {

eval("\"use strict\";\n// Instantiate WebAssembly module\nvar wasmExports = __webpack_require__.w[module.i];\n__webpack_require__.r(exports);\n// export exports from WebAssembly module\nfor(var name in wasmExports) if(name != \"__webpack_init__\") exports[name] = wasmExports[name];\n// exec imports from WebAssembly module (for esm order)\n/* harmony import */ var m0 = __webpack_require__(/*! ./gravity_calc.js */ \"../gravity_calc/pkg/gravity_calc.js\");\n\n\n// exec wasm module\nwasmExports[\"__webpack_init__\"]()\n\n//# sourceURL=webpack:///../gravity_calc/pkg/gravity_calc_bg.wasm?");

/***/ }),

/***/ "./drawFPS.js":
/*!********************!*\
  !*** ./drawFPS.js ***!
  \********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst drawFPS = ((ctx)=>{\r\n    var time = (new Date()).getTime()\r\n    var i=0\r\n    var fps=0\r\n    return ()=>{\r\n      i++\r\n      var newTime = (new Date()).getTime()\r\n      var deltaT = newTime - time\r\n      time = newTime\r\n      ctx.font = \"14px Verdana\";\r\n      ctx.fillStyle = \"red\";\r\n      if(!(i%30)) fps=(Math.round(10000/deltaT)/10) + \" fps\"\r\n      ctx.fillText(fps, 10, 24);\r\n    }\r\n  })\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (drawFPS);\n\n//# sourceURL=webpack:///./drawFPS.js?");

/***/ }),

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var gravity_calc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! gravity_calc */ \"../gravity_calc/pkg/gravity_calc.js\");\n/* harmony import */ var _drawFPS__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./drawFPS */ \"./drawFPS.js\");\n/* harmony import */ var _sunNode__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./sunNode */ \"./sunNode.js\");\n/* harmony import */ var _ploter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ploter */ \"./ploter.js\");\n/* harmony import */ var _touch__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./touch */ \"./touch.js\");\n\n\n\n\n\n\n\n\nvar position={x: 400, y:300, scale:1}\n\nvar all=[]\nall.push(new _sunNode__WEBPACK_IMPORTED_MODULE_2__[\"default\"]([400,100],[100,0],14,all))\nall.push(new _sunNode__WEBPACK_IMPORTED_MODULE_2__[\"default\"]([467,120],[0,0],3,all))\nall.push(new _sunNode__WEBPACK_IMPORTED_MODULE_2__[\"default\"]([897,100],[100,0],15,all))\nall.push(new _sunNode__WEBPACK_IMPORTED_MODULE_2__[\"default\"]([340,232],[0,0],2,all))\nall.push(new _sunNode__WEBPACK_IMPORTED_MODULE_2__[\"default\"]([123,767],[100,0],14,all))\nall.push(new _sunNode__WEBPACK_IMPORTED_MODULE_2__[\"default\"]([890,543],[0,0],8,all))\nall.push(new _sunNode__WEBPACK_IMPORTED_MODULE_2__[\"default\"]([553,221],[100,0],12,all))\nall.push(new _sunNode__WEBPACK_IMPORTED_MODULE_2__[\"default\"]([412,345],[0,0],9,all))\n\n// Construct the universe, and get its width and height.\nconst width = 800;\nconst height = 600;\nconst gravity = gravity_calc__WEBPACK_IMPORTED_MODULE_0__[\"Gravity\"].new(width,height);\n\n// Give the canvas room for all of our cells and a 1px border\n// around each of them.\nconst canvas = document.getElementById(\"stellar3\");\nvar touch = new _touch__WEBPACK_IMPORTED_MODULE_4__[\"default\"](canvas, 100)\ntouch.sub('force', ({delta})=>{\n\tposition = {...position, x: position.x - delta.x / position.scale,\n\t\ty: position.y - delta.y / position.scale}\n})\nvar draw=new _ploter__WEBPACK_IMPORTED_MODULE_3__[\"default\"](canvas, 800, 600)\n\nconst ctx = draw.context;\nconst fps=Object(_drawFPS__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(ctx)\nconst img= ctx.createImageData(width, height)\n\nconst drawGravity2 = () => {\n\tvar planetsArray = new Float32Array(all.length*3);\n\tvar bufferIndex=0;\n\tall.forEach((el)=> {\n\t\tplanetsArray[bufferIndex]=el.positions[0]\n\t\tplanetsArray[bufferIndex+1]=el.positions[1]\n\t\tplanetsArray[bufferIndex+2]=el.mass\n\t\tbufferIndex+=3\n\t})\n\tgravity.draw_planets(\n\t\timg.data,\n\t\timg.data.length,\n\t\tplanetsArray,\n\t\tplanetsArray.length\n\t);\n  ctx.putImageData(img, 0, 0);\n}\nvar i=0;\n\nconst renderLoop = () => {\n  drawGravity2();\n  draw.points(\n\tall.map((elem)=> [elem.positions[0],elem.positions[1],elem.radius,elem.radius>7?'#ff9933':'#aaffbb'])\n\t,position\n\t)\n  fps();\n  all.forEach(function(e){\n\t\te.compute()   \n\t})\n\tconst allLength=all.length\n\tfor(i=0;i<allLength;i++)\n\t{\n\t\tconst first=all.shift()\n\t\tif(!first.invalid) all.push(first)\n\t}\n\tall.forEach(function(e){\n\t\te.move()\n\t})\n\n  requestAnimationFrame(renderLoop);\n};\nrequestAnimationFrame(renderLoop);\n\n//# sourceURL=webpack:///./index.js?");

/***/ }),

/***/ "./ploter.js":
/*!*******************!*\
  !*** ./ploter.js ***!
  \*******************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n\r\n\r\nfunction Ploter(canvas,width,height){\r\n\tthis.canvas=canvas;\r\n\tthis.canvas.width = width || 320\r\n\tthis.canvas.height = height || 240\r\n\tthis.context = this.canvas.getContext('2d')\r\n\tthis.img = this.context.createImageData(this.canvas.width, this.canvas.height)\r\n}\r\n\r\nPloter.prototype.points=function(points, view)\r\n{\r\n\tconst { context, canvas: {width: canvasWidth, height: canvasHeight} }= this\r\n\tconst {x: centerX, y: centerY, scale} = view\r\n\tconst canvasWidthHalf = canvasWidth / 2\r\n\tconst canvasHeightHalf = canvasHeight / 2\r\n\tpoints.forEach((element)=>{\r\n\t\tvar x=(element[0]-centerX)*scale + canvasWidthHalf\r\n\t\tvar y=(element[1]-centerY)*scale + canvasHeightHalf\r\n\t\tif(x<0||y<0||x>canvasWidth||y>canvasHeight)\r\n\t\t\treturn\r\n\t\tconst elementSize=element[2]*scale>1?element[2]*scale:1\r\n\t\tcontext.beginPath()\r\n\t\tcontext.arc(x,y, elementSize, 0, 2 * Math.PI, false)\r\n\t\tcontext.fillStyle = element[3]\r\n\t\tcontext.fill()\r\n\t\tcontext.lineWidth = 1\r\n\t\tcontext.strokeStyle = '#333333'\r\n\t\tcontext.stroke()\r\n\t})\r\n}\r\n\r\nPloter.prototype.getCanvas=function()\r\n{\r\n\treturn this.canvas\r\n}\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (Ploter);\n\n//# sourceURL=webpack:///./ploter.js?");

/***/ }),

/***/ "./sunNode.js":
/*!********************!*\
  !*** ./sunNode.js ***!
  \********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nif (!Math.cbrt) {\r\n\tMath.cbrt = function(x) {\r\n\t\tvar y = Math.pow(Math.abs(x), 1/3)\r\n\t\treturn x < 0 ? -y : y\r\n\t}\r\n}\r\nfunction SNode(positions,speeds,radius,inputs)\r\n{\r\n\tthis.radius=radius\r\n\tthis.positions=positions?positions:[]\r\n\tthis.speeds=speeds?speeds:[]\r\n\tthis.inputs=inputs?inputs:[]\r\n\tthis.invalid=null\r\n\tthis.massVolume=0.1\r\n\tthis.interaction=0.001\r\n\tthis.mass = this.computeMass()\r\n}\r\nSNode.prototype.computeMass= function () {\r\n\treturn Math.pow(this.radius,3)* Math.PI * this.massVolume\r\n}\r\n\r\nSNode.prototype.compute=function()\r\n{\r\n\tif(this.invalid)return\r\n\tthis.inputs.forEach(function(element) {\r\n\t\tif(this==element || element.invalid) return\r\n\t\tvar squareDist = this.squareDistance( element )\r\n\t\tvar realDist = Math.sqrt(squareDist)\r\n\t\tif(realDist < this.radius + element.radius\r\n\t\t\t&& this.radius > element.radius )\r\n\t\t{\r\n\t\t\telement.invalid=true\r\n\t\t\tthis.merge(element)\r\n\t\t\treturn\r\n\t\t}\r\n\t\tvar asc = this.interaction * element.mass / squareDist\r\n\t\tfor (var i=0;i<this.positions.length;i++)\r\n\t\t{\r\n\t\t\tthis.speeds[i]+=asc*(element.positions[i]-this.positions[i])\r\n\t\t}\r\n\t}, this)\r\n}\r\nSNode.prototype.merge=function(testNode)\r\n{\r\n\tvar massA= this.mass\r\n\tvar massB= testNode.mass\r\n\tvar newRadious= Math.cbrt((massA+massB)/ Math.PI / this.massVolume)\r\n\r\n\tfor (var i=0;i< this.speeds.length;i++)\r\n\t{\r\n\t\tthis.speeds[i]=(this.speeds[i] * massA\r\n\t\t\t+ testNode.speeds[i] * massB)\r\n\t\t\t/ (massA + massB)\r\n\t}\r\n\tthis.radius=newRadious\r\n\tthis.mass = this.computeMass()\r\n}\r\nSNode.prototype.squareDistance=function(testNode)\r\n{\r\n\tvar square=0\r\n\tfor(var i=0;i<testNode.positions.length;i++)\r\n\t\tsquare+=Math.pow((testNode.positions[i]-this.positions[i]),2)\r\n\treturn square\r\n}\r\nSNode.prototype.move=function()\r\n{\r\n\tfor(var k=0;k<this.positions.length;k++){\r\n\t\tthis.positions[k]+=this.speeds[k]\r\n\t}\r\n}\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (SNode);\n\n//# sourceURL=webpack:///./sunNode.js?");

/***/ }),

/***/ "./touch.js":
/*!******************!*\
  !*** ./touch.js ***!
  \******************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// written by Slobodan Zivkovic slobacartoonac@gmail.com\r\n\r\nfunction Touch(div, deadzone) {\r\n\tconst link = this\r\n\tthis.deadzone = deadzone\r\n\tthis.clear()\r\n\tfunction distance2d(a, b) {\r\n\t\treturn Math.sqrt((a.x - b.x) * (a.x - b.x) + (a.y - b.y) * (a.y - b.y))\r\n\t}\r\n\tthis.distance = distance2d\r\n\tlet startMove = null\r\n\tlet thisMove = null\r\n\tlet mouseDown = false\r\n\tlet click = true\r\n\tfunction moveTouchT(e) {\r\n\t\te.preventDefault()\r\n\t\tconst { top, left } = e.target.getBoundingClientRect()\r\n\t\tmoveTouch({ x: e.touches[0].clientX - left, y: e.touches[0].clientY - top })\r\n\t}\r\n\tfunction moveTouchM(e) {\r\n\t\te.preventDefault()\r\n\t\tconst { top, left } = e.target.getBoundingClientRect()\r\n\t\tif (mouseDown) moveTouch({ x: e.clientX - left, y: e.clientY - top })\r\n\t}\r\n\tfunction moveTouch(e) {\r\n\t\tif (startMove == null) {\r\n\t\t\tstartMove = { x: e.x, y: e.y }\r\n\t\t\tthisMove = { x: e.x, y: e.y }\r\n\t\t\tlink.triger('start', thisMove)\r\n\t\t\tclick = true\r\n\t\t} else {\r\n\t\t\tconst delta = { x: e.x - thisMove.x, y: e.y - thisMove.y }\r\n\t\t\tthisMove = { x: e.x, y: e.y }\r\n\t\t\tconst direction = {\r\n\t\t\t\tx: thisMove.x - startMove.x,\r\n\t\t\t\ty: thisMove.y - startMove.y,\r\n\t\t\t}\r\n\t\t\tlink.triger('force', {\r\n\t\t\t\tdelta,\r\n\t\t\t\tdirection,\r\n\t\t\t\tstartPosition: startMove,\r\n\t\t\t\tposition: thisMove,\r\n\t\t\t\tdistance: distance2d(startMove, thisMove),\r\n\t\t\t\tclick,\r\n\t\t\t})\r\n\t\t\tif (distance2d(startMove, thisMove) > link.deadzone) {\r\n\t\t\t\tclick = false\r\n\t\t\t\tif (Math.abs(direction.x) > Math.abs(direction.y)) {\r\n\t\t\t\t\tif (direction.x > 0) {\r\n\t\t\t\t\t\tlink.triger('left')\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlink.triger('right')\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (direction.y > 0) {\r\n\t\t\t\t\tlink.triger('down')\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlink.triger('up')\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t//= {up:[],down:[],left:[],right:[],stop:[],click:[],force:[]}\r\n\tfunction stopTouch(e) {\r\n\t\te.preventDefault()\r\n\t\tif (click) {\r\n\t\t\tif (e.button) {\r\n\t\t\t\tif (e.button === 1) link.triger('bmiddle')\r\n\t\t\t\tif (e.button === 2) link.triger('bright')\r\n\t\t\t} else link.triger('click', startMove)\r\n\t\t}\r\n\t\tlink.triger('stop')\r\n\t\tstartMove = null\r\n\t\tthisMove = null\r\n\t\tmouseDown = false\r\n\t}\r\n\tdiv.addEventListener(\r\n\t\t'touchstart',\r\n\t\te => {\r\n\t\t\te.preventDefault()\r\n\t\t},\r\n\t\tfalse,\r\n\t)\r\n\tdiv.addEventListener('touchmove', moveTouchT, false)\r\n\tdiv.addEventListener('touchend', stopTouch, false)\r\n\tdiv.addEventListener('touchstart', moveTouchT, false)\r\n\tdiv.addEventListener('mouseleave', stopTouch, false)\r\n\tdiv.addEventListener('mousemove', moveTouchM)\r\n\tdiv.addEventListener('mouseup', stopTouch)\r\n\tdiv.addEventListener('mousedown', e => {\r\n\t\tmouseDown = true\r\n\t\tmoveTouchM(e)\r\n\t})\r\n}\r\n/*eslint-disable */\r\n  Touch.prototype.sub = function(ev, func) {\r\n    if (this.events[ev]) this.events[ev].push(func)\r\n  }\r\n  Touch.prototype.unsub = function(ev, func) {\r\n    if (this.events[ev])\r\n      this.events[ev] = this.events[ev].filter(fu => fu !== func)\r\n  }\r\n  Touch.prototype.clearEvlent = function(ev) {\r\n    if (this.events[ev]) this.events[ev] = []\r\n  }\r\n  Touch.prototype.clear = function() {\r\n    this.events = {\r\n      up: [],\r\n      down: [],\r\n      left: [],\r\n      right: [],\r\n      stop: [],\r\n      start: [],\r\n      click: [],\r\n      force: [],\r\n      bmiddle: [],\r\n      bright: [],\r\n    }\r\n  }\r\n  Touch.prototype.triger = function(ev, args) {\r\n    if (this.events[ev])\r\n      this.events[ev].forEach(func => {\r\n        func(args)\r\n      })\r\n  }\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (Touch);\n\n//# sourceURL=webpack:///./touch.js?");

/***/ })

}]);