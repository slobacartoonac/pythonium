(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[0],{

/***/ "../gravity_calc/pkg/gravity_calc.js":
/*!*******************************************!*\
  !*** ../gravity_calc/pkg/gravity_calc.js ***!
  \*******************************************/
/*! exports provided: Gravity, View, __wbindgen_throw */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Gravity\", function() { return Gravity; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"View\", function() { return View; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_throw\", function() { return __wbindgen_throw; });\n/* harmony import */ var _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gravity_calc_bg.wasm */ \"../gravity_calc/pkg/gravity_calc_bg.wasm\");\n\n\nlet cachegetUint8Memory = null;\nfunction getUint8Memory() {\n    if (cachegetUint8Memory === null || cachegetUint8Memory.buffer !== _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer) {\n        cachegetUint8Memory = new Uint8Array(_gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n    }\n    return cachegetUint8Memory;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nfunction passArray8ToWasm(arg) {\n    const ptr = _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"](arg.length * 1);\n    getUint8Memory().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nlet cachegetFloat32Memory = null;\nfunction getFloat32Memory() {\n    if (cachegetFloat32Memory === null || cachegetFloat32Memory.buffer !== _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer) {\n        cachegetFloat32Memory = new Float32Array(_gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n    }\n    return cachegetFloat32Memory;\n}\n\nfunction passArrayF32ToWasm(arg) {\n    const ptr = _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"](arg.length * 4);\n    getFloat32Memory().set(arg, ptr / 4);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nlet cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nfunction getStringFromWasm(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory().subarray(ptr, ptr + len));\n}\n/**\n*/\nclass Gravity {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Gravity.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_gravity_free\"](ptr);\n    }\n    /**\n    * @param {number} width\n    * @param {number} height\n    * @returns {Gravity}\n    */\n    static new(width, height) {\n        const ret = _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"gravity_new\"](width, height);\n        return Gravity.__wrap(ret);\n    }\n    /**\n    * @returns {number}\n    */\n    width() {\n        const ret = _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"gravity_width\"](this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    height() {\n        const ret = _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"gravity_height\"](this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} x\n    * @param {number} y\n    * @param {number} scale\n    */\n    set_view(x, y, scale) {\n        _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"gravity_set_view\"](this.ptr, x, y, scale);\n    }\n    /**\n    * @param {Uint8Array} data\n    * @param {Float32Array} planets\n    * @param {number} planets_length\n    * @param {Float32Array} view\n    */\n    draw_planets(data, planets, planets_length, view) {\n        const ptr0 = passArray8ToWasm(data);\n        const len0 = WASM_VECTOR_LEN;\n        try {\n            _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"gravity_draw_planets\"](this.ptr, ptr0, len0, passArrayF32ToWasm(planets), WASM_VECTOR_LEN, planets_length, passArrayF32ToWasm(view), WASM_VECTOR_LEN);\n        } finally {\n            data.set(getUint8Memory().subarray(ptr0 / 1, ptr0 / 1 + len0));\n            _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_free\"](ptr0, len0 * 1);\n        }\n    }\n    /**\n    * @param {Uint8Array} data\n    * @param {number} length\n    */\n    mutate_data(data, length) {\n        const ptr0 = passArray8ToWasm(data);\n        const len0 = WASM_VECTOR_LEN;\n        try {\n            _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"gravity_mutate_data\"](this.ptr, ptr0, len0, length);\n        } finally {\n            data.set(getUint8Memory().subarray(ptr0 / 1, ptr0 / 1 + len0));\n            _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_free\"](ptr0, len0 * 1);\n        }\n    }\n}\n/**\n*/\nclass View {\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_view_free\"](ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    get x() {\n        const ret = _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_get_view_x\"](this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set x(arg0) {\n        _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_set_view_x\"](this.ptr, arg0);\n    }\n    /**\n    * @returns {number}\n    */\n    get y() {\n        const ret = _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_get_view_y\"](this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set y(arg0) {\n        _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_set_view_y\"](this.ptr, arg0);\n    }\n    /**\n    * @returns {number}\n    */\n    get scale() {\n        const ret = _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_get_view_scale\"](this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set scale(arg0) {\n        _gravity_calc_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_set_view_scale\"](this.ptr, arg0);\n    }\n}\n\nconst __wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm(arg0, arg1));\n};\n\n\n\n//# sourceURL=webpack:///../gravity_calc/pkg/gravity_calc.js?");

/***/ }),

/***/ "../gravity_calc/pkg/gravity_calc_bg.wasm":
/*!************************************************!*\
  !*** ../gravity_calc/pkg/gravity_calc_bg.wasm ***!
  \************************************************/
/*! exports provided: memory, __wbg_view_free, __wbg_get_view_x, __wbg_set_view_x, __wbg_get_view_y, __wbg_set_view_y, __wbg_get_view_scale, __wbg_set_view_scale, __wbg_gravity_free, gravity_new, gravity_width, gravity_height, gravity_set_view, gravity_draw_planets, gravity_mutate_data, __wbindgen_malloc, __wbindgen_free */
/***/ (function(module, exports, __webpack_require__) {

eval("\"use strict\";\n// Instantiate WebAssembly module\nvar wasmExports = __webpack_require__.w[module.i];\n__webpack_require__.r(exports);\n// export exports from WebAssembly module\nfor(var name in wasmExports) if(name != \"__webpack_init__\") exports[name] = wasmExports[name];\n// exec imports from WebAssembly module (for esm order)\n/* harmony import */ var m0 = __webpack_require__(/*! ./gravity_calc.js */ \"../gravity_calc/pkg/gravity_calc.js\");\n\n\n// exec wasm module\nwasmExports[\"__webpack_init__\"]()\n\n//# sourceURL=webpack:///../gravity_calc/pkg/gravity_calc_bg.wasm?");

/***/ }),

/***/ "../lib/drawers/drawFPS.js":
/*!*********************************!*\
  !*** ../lib/drawers/drawFPS.js ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nfunction FPSPloter(context){\r\n\tthis.context = context\r\n\tthis.time = (new Date()).getTime()\r\n\tthis.i=0\r\n\tthis.fps=0\r\n}\r\n\r\nFPSPloter.prototype.draw=function()\r\n{\r\n\tthis.i++\r\n\tvar newTime = (new Date()).getTime()\r\n\tvar deltaT = newTime - this.time\r\n\tthis.time = newTime\r\n\tthis.context.font = '14px Verdana'\r\n\tthis.context.fillStyle = 'red'\r\n\tif(!(this.i%30)) this.fps =(Math.round(10000/deltaT)/10) + ' fps'\r\n\tthis.context.fillText(this.fps, 10, 24)\r\n}\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (FPSPloter);\n\n//# sourceURL=webpack:///../lib/drawers/drawFPS.js?");

/***/ }),

/***/ "../lib/drawers/drawGrid.js":
/*!**********************************!*\
  !*** ../lib/drawers/drawGrid.js ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n\r\nfunction GridPloter(ctx, width,height){\r\n\tthis.context = ctx\r\n\tthis.width = width\r\n\tthis.height = height\r\n}\r\n\r\nGridPloter.prototype.draw=function(sizex,sizey, view)\r\n{\r\n\tconst { context, width: canvasWidth, height: canvasHeight }= this\r\n\tconst {x: centerX, y: centerY, scale} = view\r\n\tconst canvasWidthHalf = canvasWidth / 2\r\n\tconst canvasHeightHalf = canvasHeight / 2\r\n\tvar gridScale = scale\r\n\twhile(gridScale> 2)\r\n\t\tgridScale /= 2\r\n\twhile(gridScale< 1)\r\n\t\tgridScale *= 2\r\n\tconst stepX = sizex * gridScale\r\n\tconst stepY = sizey * gridScale\r\n\tvar startx=( -centerX * scale + canvasWidthHalf) % stepX\r\n\tvar starty=( -centerY * scale + canvasHeightHalf) % stepY\r\n\tcontext.beginPath()\r\n\tfor (var x = startx; x <= canvasWidth; x += stepX) {\r\n\t\tcontext.moveTo( x , 0)\r\n\t\tcontext.lineTo( x, canvasHeight)\r\n\t}\r\n\r\n\tfor (var y = starty; y <= canvasHeight; y += stepY) {\r\n\t\tcontext.moveTo( 0, y )\r\n\t\tcontext.lineTo( canvasWidth , y)\r\n\t}\r\n\tcontext.lineWidth = 2\r\n\tcontext.strokeStyle = 'rgba(128, 128, 128, 0.5)'\r\n\tcontext.stroke()\r\n\r\n\tvar startx=(startx + stepX/2) % stepX\r\n\tvar starty=(starty + stepY/2) % stepY\r\n\r\n\tcontext.beginPath()\r\n\tfor (var x = startx; x <= canvasWidth; x += stepX) {\r\n\t\tcontext.moveTo( x , 0)\r\n\t\tcontext.lineTo( x, canvasHeight)\r\n\t}\r\n\r\n\tfor (var y = starty; y <= canvasHeight; y += stepY) {\r\n\t\tcontext.moveTo( 0, y )\r\n\t\tcontext.lineTo( canvasWidth , y)\r\n\t}\r\n\tcontext.lineWidth = 2\r\n\tcontext.strokeStyle = 'rgba(128, 128, 128, '+(gridScale-1.0)+')'\r\n\tcontext.stroke()\r\n\tcontext.font = '10px Arial'\r\n\tcontext.fillText((Math.round(view.x * 100) / 100 + Number.EPSILON)+','+(Math.round(view.y * 100 + Number.EPSILON) / 100)+','+(Math.round(view.scale * 100 + Number.EPSILON) / 100),10,50)\r\n}\r\n\r\nGridPloter.prototype.line=function(startx,starty,sizex,sizey,color)\r\n{\r\n\tthis.context.lineWidth = 1\r\n\tthis.context.moveTo( startx , starty)\r\n\tthis.context.lineTo( startx + sizex, starty + sizey )\r\n\tthis.context.strokeStyle = color\r\n\tthis.context.stroke()\r\n}\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (GridPloter);\n\n//# sourceURL=webpack:///../lib/drawers/drawGrid.js?");

/***/ }),

/***/ "../lib/drawers/gravityColorEngine.js":
/*!********************************************!*\
  !*** ../lib/drawers/gravityColorEngine.js ***!
  \********************************************/
/*! exports provided: GravityColorEngine */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GravityColorEngine\", function() { return GravityColorEngine; });\n/* harmony import */ var _render_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./render.js */ \"../lib/drawers/render.js\");\n/* harmony import */ var _shapes_circle_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../shapes/circle.js */ \"../lib/shapes/circle.js\");\n/* harmony import */ var _physics_physics_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../physics/physics.js */ \"../lib/physics/physics.js\");\n\r\n\r\n\r\n\r\nfunction GravityColorEngine(manager){\r\n\tthis.manager = manager\r\n}\r\n\r\nGravityColorEngine.prototype.compute=function()\r\n{\r\n\tthis.manager.getEnities(_render_js__WEBPACK_IMPORTED_MODULE_0__[\"Renderer\"]).map(\r\n\t\t(elem)=>{\r\n\t\t\tvar renderers = this.manager.get(_render_js__WEBPACK_IMPORTED_MODULE_0__[\"Renderer\"], elem)[0]\r\n\t\t\tvar mass = this.manager.get(_physics_physics_js__WEBPACK_IMPORTED_MODULE_2__[\"Physics\"], elem)[0].mass\r\n\t\t\tvar volume = Math.pow(this.manager.get(_shapes_circle_js__WEBPACK_IMPORTED_MODULE_1__[\"ShapeCircle\"], elem)[0].radius, 3) * Math.PI\r\n\t\t\tvar dencity = mass / volume * 10 * Math.PI\r\n\t\t\tif(dencity < 1){\r\n\t\t\t\trenderers.color = '##00fffb'\r\n\t\t\t}\r\n\t\t\telse if( dencity < 2){\r\n\t\t\t\trenderers.color = '#001eff'\r\n\t\t\t}\r\n\t\t\telse if( dencity < 3){\r\n\t\t\t\trenderers.color = '#995500'\r\n\t\t\t}\r\n\t\t\telse if( dencity < 4){\r\n\t\t\t\trenderers.color = '#ff8c00'\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\trenderers.color = '#fffb00'\r\n\t\t\t}\r\n\t\t}\r\n\t)\r\n\r\n}\r\n\r\n\n\n//# sourceURL=webpack:///../lib/drawers/gravityColorEngine.js?");

/***/ }),

/***/ "../lib/drawers/ploter.js":
/*!********************************!*\
  !*** ../lib/drawers/ploter.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n\r\nfunction Ploter(canvas,width,height){\r\n\tthis.canvas=canvas\r\n\tthis.canvas.width = width || 320\r\n\tthis.canvas.height = height || 240\r\n\tthis.context = this.canvas.getContext('2d')\r\n\tthis.img = this.context.createImageData(this.canvas.width, this.canvas.height)\r\n}\r\n\r\nPloter.prototype.clear=function()\r\n{\r\n\tthis.context.clearRect(0, 0, this.canvas.width, this.canvas.height)\r\n}\r\n\r\nPloter.prototype.getCanvas=function()\r\n{\r\n\treturn this.canvas\r\n}\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (Ploter);\n\n//# sourceURL=webpack:///../lib/drawers/ploter.js?");

/***/ }),

/***/ "../lib/drawers/render.js":
/*!********************************!*\
  !*** ../lib/drawers/render.js ***!
  \********************************/
/*! exports provided: RenderEngine, Renderer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RenderEngine\", function() { return RenderEngine; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Renderer\", function() { return Renderer; });\n/* harmony import */ var _physics_transform_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../physics/transform.js */ \"../lib/physics/transform.js\");\n/* harmony import */ var _shapes_circle_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../shapes/circle.js */ \"../lib/shapes/circle.js\");\n\r\n\r\n\r\nfunction Renderer(color){\r\n\tthis.color = color\r\n}\r\n\r\nfunction RenderEngine(context, width, height, manager){\r\n\tthis.context = context\r\n\tthis.width = width\r\n\tthis.height = height\r\n\tthis.manager = manager\r\n}\r\n\r\nRenderEngine.prototype.draw=function(view)\r\n{\r\n\tconst { context, width: canvasWidth, height: canvasHeight}= this\r\n\tconst {x: centerX, y: centerY, scale} = view\r\n\tconst canvasWidthHalf = canvasWidth / 2\r\n\tconst canvasHeightHalf = canvasHeight / 2\r\n\tconst points = this.manager.getEnities(Renderer).map(\r\n\t\t(elem)=>{\r\n\t\t\tvar renderers = this.manager.get(Renderer, elem)[0]\r\n\t\t\tvar transform = this.manager.get(_physics_transform_js__WEBPACK_IMPORTED_MODULE_0__[\"Transform\"], elem)[0]\r\n\t\t\tvar circle = this.manager.get(_shapes_circle_js__WEBPACK_IMPORTED_MODULE_1__[\"ShapeCircle\"], elem)[0]\r\n\t\t\treturn [\r\n\t\t\t\ttransform.positions[0],\r\n\t\t\t\ttransform.positions[1],\r\n\t\t\t\tcircle.radius,\r\n\t\t\t\trenderers.color\r\n\t\t\t]\r\n\t\t}\r\n\t)\r\n\tpoints.forEach((element)=>{\r\n\t\tvar x=(element[0]-centerX)*scale + canvasWidthHalf\r\n\t\tvar y=(element[1]-centerY)*scale + canvasHeightHalf\r\n\t\tif(x<0||y<0||x>canvasWidth||y>canvasHeight)\r\n\t\t\treturn\r\n\t\tconst elementSize=element[2]*scale>1?element[2]*scale:1\r\n\t\tcontext.beginPath()\r\n\t\tcontext.arc(x,y, elementSize, 0, 2 * Math.PI, false)\r\n\t\tcontext.fillStyle = element[3]\r\n\t\tcontext.fill()\r\n\t\tcontext.lineWidth = 1\r\n\t\tcontext.strokeStyle = '#333333'\r\n\t\tcontext.stroke()\r\n\t})\r\n}\r\n\r\n\n\n//# sourceURL=webpack:///../lib/drawers/render.js?");

/***/ }),

/***/ "../lib/ecs.js":
/*!*********************!*\
  !*** ../lib/ecs.js ***!
  \*********************/
/*! exports provided: Entity, EntityManager */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Entity\", function() { return Entity; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EntityManager\", function() { return EntityManager; });\nconst ENTITY_INDEX_BITS = 22\r\nconst ENTITY_INDEX_MASK = (1 << ENTITY_INDEX_BITS) - 1\r\n\r\nconst ENTITY_GENERATION_BITS = 8\r\nconst ENTITY_GENERATION_MASK = (1 << ENTITY_GENERATION_BITS) - 1\r\nconst MINIMUM_FREE_INDICES = 0\r\n\r\nfunction Entity(id) {\r\n\tthis.id = id\r\n}\r\nEntity.prototype.index = function () { \r\n\treturn this.id & ENTITY_INDEX_MASK\r\n}\r\nEntity.prototype.generation = function () { \r\n\treturn (this.id >> ENTITY_INDEX_BITS) & ENTITY_GENERATION_MASK\r\n}\r\n\r\nfunction EntityManager() {\r\n\tthis._generation = {}\r\n\tthis._free_indices = []\r\n\tthis._entities = {}\r\n\tthis._components = {}\r\n\tthis.__entities_with_type = {}\r\n}\r\n\r\nEntityManager.prototype.create = function () {\r\n\tvar idx = 0\r\n\tif (this._free_indices.length > MINIMUM_FREE_INDICES) {\r\n\t\tidx = this._free_indices.shift()\r\n\t} else {\r\n\t\tidx = Object.keys(this._generation).length\r\n\t\tthis._generation[idx] = 0\r\n\t}\r\n\tvar entity = this.make_entity(idx, this._generation[idx])\r\n\tthis._entities[idx] = entity\r\n\treturn entity\r\n}\r\n\r\nEntityManager.prototype.make_entity = function (idx, generation) {\r\n\treturn new Entity(idx + (generation << ENTITY_INDEX_BITS))\r\n}\r\n\r\nEntityManager.prototype.alive = function (e) {\r\n\treturn this._generation[e.index()] == e.generation()\r\n}\r\n\r\nEntityManager.prototype.destroy = function (e) {\r\n\tdelete this._entities[e.id]\r\n\t++this._generation[e.index()]\r\n\tthis._free_indices.push(e.index())\r\n}\r\n\r\nEntityManager.prototype.asign = function(component, e){\r\n\tvar entity_components = this._components[e.id]\r\n\tif(!entity_components){\r\n\t\tthis._components[e.id] = {\r\n\t\t\t[component.constructor.name]: [component]\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\tvar components_of_type = entity_components[component.constructor.name]\r\n\tif(!components_of_type){\r\n\t\tthis._components[e.id][component.constructor.name] = [component]\r\n\t\treturn\r\n\t}\r\n\tif(components_of_type &&\r\n\t\tentity_components[component.constructor.name].find(comp=>component===comp)\r\n\t\t)\r\n\t\tthrow Error('Component is allready asiged')\r\n\tentity_components[component.constructor.name].push(component)\r\n}\r\n\r\nEntityManager.prototype.get = function(c_type, e){\r\n\tvar entity_components = this._components[e.id]\r\n\tif(!entity_components){\r\n\t\treturn []\r\n\t}\r\n\tvar components_of_type = entity_components[c_type.name]\r\n\tif(!components_of_type){\r\n\t\treturn []\r\n\t}\r\n\treturn components_of_type\r\n}\r\n\r\nEntityManager.prototype.remove = function(component, e){\r\n\tvar entity_components = this._components[e.id]\r\n\tif(!entity_components){\r\n\t\treturn\r\n\t}\r\n\tvar components_of_type = entity_components[component.constructor.name]\r\n\tif(!components_of_type){\r\n\t\treturn\r\n\t}\r\n\tentity_components[component.constructor.name] = entity_components[component.constructor.name].filter(function(compon){\r\n\t\treturn compon !== component\r\n\t})\r\n}\r\n\r\nEntityManager.prototype.getEnities = function(c_type){\r\n\treturn Object.values(this._entities).filter(\r\n\t\t(entity)=>{\r\n\t\t\treturn this.get(c_type, entity).length\r\n\t\t}\r\n\t)\r\n}\r\n\r\n\r\n\n\n//# sourceURL=webpack:///../lib/ecs.js?");

/***/ }),

/***/ "../lib/physics/gravityEngine.js":
/*!***************************************!*\
  !*** ../lib/physics/gravityEngine.js ***!
  \***************************************/
/*! exports provided: GravityEngine */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GravityEngine\", function() { return GravityEngine; });\n/* harmony import */ var _physics_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./physics.js */ \"../lib/physics/physics.js\");\n/* harmony import */ var _transform_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transform.js */ \"../lib/physics/transform.js\");\n\r\n\r\n\r\nfunction GravityEngine(manager, interaction){\r\n\tthis.manager = manager\r\n\tthis.interaction = interaction ? interaction : 0.1\r\n}\r\n\r\nfunction computeAttraction(\r\n\tcompute,\r\n\tnaibors,\r\n\tinteraction\r\n)\r\n{\r\n\tvar ret=[0,0]\r\n\tnaibors.forEach(element => {\r\n\t\tif(element==compute) return\r\n\t\tvar distanceX = (element.positions[0]-compute.positions[0])\r\n\t\tvar distanceY = (element.positions[1]-compute.positions[1])\r\n\t\t\r\n\t\tvar distance2= distanceX*distanceX + distanceY*distanceY\r\n\t\tvar distance = Math.sqrt(distance2)\r\n\r\n\t\tvar ascIntencity = element.mass / distance2 * interaction\r\n\t\tret[0] += distanceX / distance * ascIntencity\r\n\t\tret[1] += distanceY / distance * ascIntencity\r\n\t})\r\n\treturn ret\r\n}\r\n\r\nGravityEngine.prototype.compute= function()\r\n{\r\n\r\n\tvar physic_entity = this.manager.getEnities(_physics_js__WEBPACK_IMPORTED_MODULE_0__[\"Physics\"]).map((elem)=>{\r\n\t\tvar physics = this.manager.get(_physics_js__WEBPACK_IMPORTED_MODULE_0__[\"Physics\"], elem)[0]\r\n\t\tvar transform = this.manager.get(_transform_js__WEBPACK_IMPORTED_MODULE_1__[\"Transform\"], elem)[0]\r\n\t\treturn {\r\n\t\t\te: elem,\r\n\t\t\tmass:  physics.mass,\r\n\t\t\tphysics,\r\n\t\t\tpositions: transform.positions\r\n\t\t}\r\n\t})\r\n\r\n\tfor(var i = 0; i< physic_entity.length; i++){\r\n\t\tvar elem = physic_entity[i]\r\n\t\tvar asc = computeAttraction(\r\n\t\t\telem,\r\n\t\t\tphysic_entity, this.interaction)\r\n\t\telem.physics.applyAsc(asc)\r\n\t}\r\n}\r\n\r\n\n\n//# sourceURL=webpack:///../lib/physics/gravityEngine.js?");

/***/ }),

/***/ "../lib/physics/physics.js":
/*!*********************************!*\
  !*** ../lib/physics/physics.js ***!
  \*********************************/
/*! exports provided: PhysicsEngine, Physics */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PhysicsEngine\", function() { return PhysicsEngine; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Physics\", function() { return Physics; });\n/* harmony import */ var _transform__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transform */ \"../lib/physics/transform.js\");\n\r\nfunction Physics(speeds, mass, drag){\r\n\tthis.speeds = speeds\r\n\tthis.mass = mass\r\n\tthis.drag = isNaN(drag) ? 0.001 : drag \r\n\tthis.maxSpeed = 100\r\n}\r\n\r\n\r\nPhysics.prototype.applyForce=function(force)\r\n{\r\n\tfor (var i=0; i<this.speeds.length; i++)\r\n\t{\r\n\t\tthis.speeds[i]+= force[i] / this.mass\r\n\t}\r\n}\r\n\r\nPhysics.prototype.applyAsc=function(asc){\r\n\tfor (var i=0; i<this.speeds.length; i++)\r\n\t{\r\n\t\tthis.speeds[i]+= asc[i]\r\n\t}\r\n}\r\n\r\nPhysics.prototype.compute = function()\r\n{\r\n\tvar speedValue = 0\r\n\tvar i\r\n\tfor (i=0; i<this.speeds.length; i++)\r\n\t{\r\n\t\tspeedValue += this.speeds[i] * this.speeds[i]\r\n\t}\r\n\r\n\tvar speedMultipliyer = Math.min(1 - this.drag, this.maxSpeed/speedValue)\r\n\r\n\tfor (i=0; i<this.speeds.length; i++)\r\n\t{\r\n\t\tthis.speeds[i] *= speedMultipliyer\r\n\t}\r\n}\r\n\r\nfunction PhysicsEngine(manager, engines){\r\n\tthis.manager = manager\r\n\tthis.engines = engines\r\n}\r\n\r\nPhysicsEngine.prototype.compute = function(){\r\n\tthis.engines.forEach(engine => engine.compute())\r\n\tthis.manager.getEnities(Physics).forEach(elem => {\r\n\t\tvar physics = this.manager.get(Physics, elem)[0]\r\n\t\tphysics.compute()\r\n\t\tvar transform = this.manager.get(_transform__WEBPACK_IMPORTED_MODULE_0__[\"Transform\"], elem)[0]\r\n\t\ttransform.addSpeeds(physics.speeds)\r\n\t})\r\n}\r\n\r\n\n\n//# sourceURL=webpack:///../lib/physics/physics.js?");

/***/ }),

/***/ "../lib/physics/plasticColisionEngine.js":
/*!***********************************************!*\
  !*** ../lib/physics/plasticColisionEngine.js ***!
  \***********************************************/
/*! exports provided: PlasticColisionEngine */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PlasticColisionEngine\", function() { return PlasticColisionEngine; });\n/* harmony import */ var _shapes_circle_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../shapes/circle.js */ \"../lib/shapes/circle.js\");\n/* harmony import */ var _physics_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./physics.js */ \"../lib/physics/physics.js\");\n/* harmony import */ var _transform_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./transform.js */ \"../lib/physics/transform.js\");\n\r\n\r\n\r\n\r\nfunction PlasticColisionEngine(manager){\r\n\tthis.manager = manager\r\n\tthis.physic_entity = null\r\n}\r\n\r\nfunction squareDistance(nodeA, nodeB)\r\n{\r\n\tvar square=0\r\n\tfor(var i=0;i<nodeA.positions.length;i++)\r\n\t\tsquare+=Math.pow((nodeA.positions[i]-nodeB.positions[i]),2)\r\n\treturn square\r\n}\r\n\r\nfunction computeColision(\r\n\tcompute,\r\n\tnaibors\r\n)\r\n{\r\n\tvar collisions = []\r\n\tnaibors.forEach(element => {\r\n\t\tif(element==compute) return\r\n\t\tvar distanceX = (element.positions[0]-compute.positions[0])\r\n\t\tvar distanceY = (element.positions[1]-compute.positions[1])\r\n\t\tvar centerDistance = compute.radius + element.radius\r\n\t\tif(Math.abs(distanceX) > centerDistance || Math.abs(distanceY) > centerDistance)\r\n\t\t\treturn\r\n            \r\n\t\tvar distance2=squareDistance(compute, element)\r\n\t\tif(distance2 > Math.pow(centerDistance, 2))\r\n\t\t\treturn\r\n\t\tif(compute.radius > element.radius)\r\n\t\t\tcollisions.push(element)\r\n\t})\r\n\treturn collisions\r\n}\r\n\r\nPlasticColisionEngine.prototype.compute= function()\r\n{\r\n\r\n\tvar physic_entity = this.manager.getEnities(_physics_js__WEBPACK_IMPORTED_MODULE_1__[\"Physics\"]).map((elem)=>{\r\n\t\tvar circle = this.manager.get(_shapes_circle_js__WEBPACK_IMPORTED_MODULE_0__[\"ShapeCircle\"], elem)[0]\r\n\t\tvar transform = this.manager.get(_transform_js__WEBPACK_IMPORTED_MODULE_2__[\"Transform\"], elem)[0]\r\n\t\tvar physics = this.manager.get(_physics_js__WEBPACK_IMPORTED_MODULE_1__[\"Physics\"], elem)[0]\r\n\t\treturn {\r\n\t\t\te:elem,\r\n\t\t\tradius:  circle.radius,\r\n\t\t\tcircle,\r\n\t\t\tpositions: transform.positions,\r\n\t\t\tspeeds: physics.speeds,\r\n\t\t\tphysics\r\n\t\t}\r\n\t})\r\n\r\n\tfor(var i = 0; i< physic_entity.length; i++){\r\n\t\t\r\n\t\tvar elem = physic_entity[i]\r\n\t\tif(!this.manager.alive(elem.e))\r\n\t\t\tcontinue\r\n\t\tvar colisions = computeColision(\r\n\t\t\telem,\r\n\t\t\tphysic_entity)\r\n\t\tfor(var collisionIndex in colisions){\r\n\t\t\tvar collision = colisions[collisionIndex]\r\n\t\t\tif(!this.manager.alive(collision.e))\r\n\t\t\t\tcontinue\r\n\t\t\tthis.manager.destroy(collision.e)\r\n\t\t\tthis.merge(elem, collision)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nPlasticColisionEngine.prototype.merge=function(nodeA, nodeB)\r\n{\r\n    var cubeRadiusA=Math.pow(nodeA.radius, 3);\r\n    var cubeRadiusB=Math.pow(nodeB.radius, 3);\r\n    var newRadious= Math.cbrt( cubeRadiusA + cubeRadiusB );\r\n\r\n\tnodeA.circle.radius = newRadious\r\n\tvar massA=nodeA.physics.mass\r\n    var massB=nodeB.physics.mass\r\n\tnodeA.physics.mass = massA + massB\r\n\r\n\tfor (var i=0;i< nodeA.speeds.length;i++)\r\n    {\r\n        nodeA.speeds[i]=(nodeA.speeds[i]*massA + nodeB.speeds[i]*massB)/(massA+massB)\r\n    }\r\n}\r\n\r\n\n\n//# sourceURL=webpack:///../lib/physics/plasticColisionEngine.js?");

/***/ }),

/***/ "../lib/physics/transform.js":
/*!***********************************!*\
  !*** ../lib/physics/transform.js ***!
  \***********************************/
/*! exports provided: Transform */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Transform\", function() { return Transform; });\nfunction Transform(positions){\r\n\tthis.positions = positions\r\n}\r\nTransform.prototype.addSpeeds=function(speeds){\r\n\tfor(var k=0; k< this.positions.length; k++){\r\n\t\tthis.positions[k] += speeds[k]\r\n\t}\r\n}\r\n\r\n\n\n//# sourceURL=webpack:///../lib/physics/transform.js?");

/***/ }),

/***/ "../lib/shapes/circle.js":
/*!*******************************!*\
  !*** ../lib/shapes/circle.js ***!
  \*******************************/
/*! exports provided: ShapeCircle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ShapeCircle\", function() { return ShapeCircle; });\nfunction ShapeCircle(radius){\r\n\tthis.radius = radius\r\n}\r\n\r\n\n\n//# sourceURL=webpack:///../lib/shapes/circle.js?");

/***/ }),

/***/ "../lib/touch.js":
/*!***********************!*\
  !*** ../lib/touch.js ***!
  \***********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// written by Slobodan Zivkovic slobacartoonac@gmail.com\r\n\r\nfunction Touch(div, deadzone) {\r\n\tconst link = this\r\n\tthis.deadzone = deadzone\r\n\tthis.clear()\r\n\tfunction distance2d(a, b) {\r\n\t\treturn Math.sqrt((a.x - b.x) * (a.x - b.x) + (a.y - b.y) * (a.y - b.y))\r\n\t}\r\n\tthis.distance = distance2d\r\n\tlet startMove = null\r\n\tlet thisMove = null\r\n\tlet mouseDown = false\r\n\tlet click = true\r\n\tfunction moveTouchT(e) {\r\n\t\te.preventDefault()\r\n\t\tconst { top, left } = e.target.getBoundingClientRect()\r\n\t\tmoveTouch({ x: e.touches[0].clientX - left, y: e.touches[0].clientY - top })\r\n\t}\r\n\tfunction moveTouchM(e) {\r\n\t\te.preventDefault()\r\n\t\tconst { top, left } = e.target.getBoundingClientRect()\r\n\t\tif (mouseDown) moveTouch({ x: e.clientX - left, y: e.clientY - top })\r\n\t}\r\n\tfunction moveTouch(e) {\r\n\t\tif (startMove == null) {\r\n\t\t\tstartMove = { x: e.x, y: e.y }\r\n\t\t\tthisMove = { x: e.x, y: e.y }\r\n\t\t\tlink.triger('start', thisMove)\r\n\t\t\tclick = true\r\n\t\t} else {\r\n\t\t\tconst delta = { x: e.x - thisMove.x, y: e.y - thisMove.y }\r\n\t\t\tthisMove = { x: e.x, y: e.y }\r\n\t\t\tconst direction = {\r\n\t\t\t\tx: thisMove.x - startMove.x,\r\n\t\t\t\ty: thisMove.y - startMove.y,\r\n\t\t\t}\r\n\t\t\tlink.triger('force', {\r\n\t\t\t\tdelta,\r\n\t\t\t\tdirection,\r\n\t\t\t\tstartPosition: startMove,\r\n\t\t\t\tposition: thisMove,\r\n\t\t\t\tdistance: distance2d(startMove, thisMove),\r\n\t\t\t\tclick,\r\n\t\t\t})\r\n\t\t\tif (distance2d(startMove, thisMove) > link.deadzone) {\r\n\t\t\t\tclick = false\r\n\t\t\t\tif (Math.abs(direction.x) > Math.abs(direction.y)) {\r\n\t\t\t\t\tif (direction.x > 0) {\r\n\t\t\t\t\t\tlink.triger('left')\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlink.triger('right')\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (direction.y > 0) {\r\n\t\t\t\t\tlink.triger('down')\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlink.triger('up')\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t//= {up:[],down:[],left:[],right:[],stop:[],click:[],force:[]}\r\n\tfunction stopTouch(e) {\r\n\t\te.preventDefault()\r\n\t\tif (click) {\r\n\t\t\tif (e.button) {\r\n\t\t\t\tif (e.button === 1) link.triger('bmiddle')\r\n\t\t\t\tif (e.button === 2) link.triger('bright')\r\n\t\t\t} else link.triger('click', startMove)\r\n\t\t}\r\n\t\tlink.triger('stop')\r\n\t\tstartMove = null\r\n\t\tthisMove = null\r\n\t\tmouseDown = false\r\n\t}\r\n\tdiv.addEventListener(\r\n\t\t'touchstart',\r\n\t\te => {\r\n\t\t\te.preventDefault()\r\n\t\t},\r\n\t\tfalse,\r\n\t)\r\n\tdiv.addEventListener('touchmove', moveTouchT, false)\r\n\tdiv.addEventListener('touchend', stopTouch, false)\r\n\tdiv.addEventListener('touchstart', moveTouchT, false)\r\n\tdiv.addEventListener('mouseleave', stopTouch, false)\r\n\tdiv.addEventListener('mousemove', moveTouchM)\r\n\tdiv.addEventListener('mouseup', stopTouch)\r\n\tdiv.addEventListener('mousedown', e => {\r\n\t\tmouseDown = true\r\n\t\tmoveTouchM(e)\r\n\t})\r\n}\r\n/*eslint-disable */\r\n  Touch.prototype.sub = function(ev, func) {\r\n    if (this.events[ev]) this.events[ev].push(func)\r\n  }\r\n  Touch.prototype.unsub = function(ev, func) {\r\n    if (this.events[ev])\r\n      this.events[ev] = this.events[ev].filter(fu => fu !== func)\r\n  }\r\n  Touch.prototype.clearEvlent = function(ev) {\r\n    if (this.events[ev]) this.events[ev] = []\r\n  }\r\n  Touch.prototype.clear = function() {\r\n    this.events = {\r\n      up: [],\r\n      down: [],\r\n      left: [],\r\n      right: [],\r\n      stop: [],\r\n      start: [],\r\n      click: [],\r\n      force: [],\r\n      bmiddle: [],\r\n      bright: [],\r\n    }\r\n  }\r\n  Touch.prototype.triger = function(ev, args) {\r\n    if (this.events[ev])\r\n      this.events[ev].forEach(func => {\r\n        func(args)\r\n      })\r\n  }\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (Touch);\n\n//# sourceURL=webpack:///../lib/touch.js?");

/***/ }),

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var gravity_calc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! gravity_calc */ \"../gravity_calc/pkg/gravity_calc.js\");\n/* harmony import */ var my_lib_touch_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! my_lib/touch.js */ \"../lib/touch.js\");\n/* harmony import */ var my_lib_ecs_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! my_lib/ecs.js */ \"../lib/ecs.js\");\n/* harmony import */ var my_lib_physics_physics_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! my_lib/physics/physics.js */ \"../lib/physics/physics.js\");\n/* harmony import */ var my_lib_shapes_circle_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! my_lib/shapes/circle.js */ \"../lib/shapes/circle.js\");\n/* harmony import */ var my_lib_physics_plasticColisionEngine__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! my_lib/physics/plasticColisionEngine */ \"../lib/physics/plasticColisionEngine.js\");\n/* harmony import */ var my_lib_physics_gravityEngine__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! my_lib/physics/gravityEngine */ \"../lib/physics/gravityEngine.js\");\n/* harmony import */ var my_lib_drawers_gravityColorEngine_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! my_lib/drawers/gravityColorEngine.js */ \"../lib/drawers/gravityColorEngine.js\");\n/* harmony import */ var my_lib_physics_transform_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! my_lib/physics/transform.js */ \"../lib/physics/transform.js\");\n/* harmony import */ var my_lib_drawers_ploter_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! my_lib/drawers/ploter.js */ \"../lib/drawers/ploter.js\");\n/* harmony import */ var my_lib_drawers_drawFPS_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! my_lib/drawers/drawFPS.js */ \"../lib/drawers/drawFPS.js\");\n/* harmony import */ var my_lib_drawers_drawGrid_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! my_lib/drawers/drawGrid.js */ \"../lib/drawers/drawGrid.js\");\n/* harmony import */ var my_lib_drawers_render_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! my_lib/drawers/render.js */ \"../lib/drawers/render.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst canvas = document.getElementById('phy_canvas')\nconst toolokInput = document.getElementById('tolook_value')\nconst drawMass = document.getElementById('draw_mass')\nconst drawGrid = document.getElementById('draw_grid')\nconst drawFPS = document.getElementById('draw_fps')\nconst fullSpeed = document.getElementById('full_speed')\n\nvar draw=new my_lib_drawers_ploter_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"](canvas, 640,480)\nvar position={x: 0, y:0, scale: 0.2}\n\nwindow.addEventListener('mousewheel', function(e){\n\tposition.scale*= e.wheelDelta > 0 ? 1.1 : 0.88\n})\n\nconst fps=new my_lib_drawers_drawFPS_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"](draw.context)\nconst grid = new my_lib_drawers_drawGrid_js__WEBPACK_IMPORTED_MODULE_11__[\"default\"](draw.context, 640, 480)\n\nvar manager = new my_lib_ecs_js__WEBPACK_IMPORTED_MODULE_2__[\"EntityManager\"]()\nconst points=new my_lib_drawers_render_js__WEBPACK_IMPORTED_MODULE_12__[\"RenderEngine\"](draw.context, 640, 480, manager)\nconst gravityEngine = new my_lib_physics_gravityEngine__WEBPACK_IMPORTED_MODULE_6__[\"GravityEngine\"](manager)\nconst colisionEngine = new my_lib_physics_plasticColisionEngine__WEBPACK_IMPORTED_MODULE_5__[\"PlasticColisionEngine\"](manager)\nconst gravityColorEngine = new my_lib_drawers_gravityColorEngine_js__WEBPACK_IMPORTED_MODULE_7__[\"GravityColorEngine\"](manager)\nconst physics=new my_lib_physics_physics_js__WEBPACK_IMPORTED_MODULE_3__[\"PhysicsEngine\"](manager, [gravityEngine, colisionEngine, gravityColorEngine])\n\nconst gravity = gravity_calc__WEBPACK_IMPORTED_MODULE_0__[\"Gravity\"].new(640,480);\n\nvar positionArray = new Float32Array([position.x, position.y, position.scale])\nwindow.addEventListener('mousewheel', function(e){\n\tposition.scale*= e.wheelDelta > 0 ? 1.1 : 0.88\n\tpositionArray = new Float32Array([position.x, position.y, position.scale])\n})\nvar touch = new my_lib_touch_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](canvas, 100)\ntouch.sub('force', ({delta})=>{\n\tposition = {...position, x: position.x - delta.x / position.scale,\n\t\ty: position.y - delta.y / position.scale}\n\tpositionArray = new Float32Array([position.x, position.y, position.scale])\n})\n\nvar entity = null\n\nvar all=[]\n\nfunction calculateMass(radius) {\n\tvar massVolume = 0.1\n\treturn Math.pow(radius,3)* Math.PI * massVolume\n}\n\nfunction createSnode(positions, speeds, radius){\n\tentity = manager.create()\n\tmanager.asign(new my_lib_physics_transform_js__WEBPACK_IMPORTED_MODULE_8__[\"Transform\"](positions), entity)\n\tmanager.asign(new my_lib_physics_physics_js__WEBPACK_IMPORTED_MODULE_3__[\"Physics\"](speeds, calculateMass(radius), 0), entity)\n\tmanager.asign(new my_lib_shapes_circle_js__WEBPACK_IMPORTED_MODULE_4__[\"ShapeCircle\"](radius), entity)\n\tmanager.asign(new my_lib_drawers_render_js__WEBPACK_IMPORTED_MODULE_12__[\"Renderer\"]('#aaffbb'), entity)\n\treturn entity\n}\n\nall.push(createSnode([0,0],[0,0],65,all, 'Sun'))\nall.push(createSnode([255,0],[0,5],3,all, 'Mercury'))\nall.push(createSnode([300,0],[0,5],4,all, 'Venus'))\nall.push(createSnode([450,0],[0,4],7,all, 'Earth'))\nall.push(createSnode([600,0],[0,4],4,all, 'Mars'))\nall.push(createSnode([1400,0],[0,2.5],25,all, 'Jupiter'))\nall.push(createSnode([1440,0],[0,6],2,all, 'Europa'))\nall.push(createSnode([1450,0],[0,6],2,all, 'Europa'))\nall.push(createSnode([2800,0],[0,2.5],5,all, 'Saturn'))\nconst generateItem = (size)=>{\n\tvar angle=Math.random()*2*Math.PI\n\tvar radius = 200 + Math.random()*2000\n\tvar x=Math.sin(angle)*radius\n\tvar y=Math.cos(angle)*radius\n\tvar tan=Math.atan2(x, y)-Math.PI/2\n\n\tvar el=createSnode(\n\t\t[x,y],\n\t\t[(10*Math.sin(tan)+Math.random()*14-7),\n\t\t\t(10*Math.cos(tan)+Math.random()*14-7)],\n\t\tsize||(0.1+Math.random()),all)\n\tall.push(el)\n}\n\nsetInterval(()=>{\n\tall.length<30 && generateItem()\n}, 200)\n\nconst img= draw.context.createImageData(width, height)\n\nvar planetsArray = new Float32Array(all.length*3);\n\nconst drawGravity2 = () => {\n\tvar planetsDataLength=all.length*3\n\tif(planetsArray.length !== planetsDataLength)\n\t\tplanetsArray = new Float32Array(all.length*3);\n\tvar bufferIndex=0;\n\tall.forEach((el)=> {\n\t\tvar transform = undefined.manager.get(my_lib_physics_transform_js__WEBPACK_IMPORTED_MODULE_8__[\"Transform\"], elem)[0]\n\t\tvar transform = undefined.manager.get(my_lib_physics_physics_js__WEBPACK_IMPORTED_MODULE_3__[\"Physics\"], elem)[0]\n\t\tplanetsArray[bufferIndex]=transform.positions[0]\n\t\tplanetsArray[bufferIndex+1]=transform.positions[1]\n\t\tplanetsArray[bufferIndex+2]=el.mass\n\t\tbufferIndex+=3\n\t})\n\tgravity.draw_planets(\n\t\timg.data,\n\t\tplanetsArray,\n\t\tplanetsDataLength,\n\t\tpositionArray\n\t);\n\tdraw.context.putImageData(img, 0, 0);\n}\nvar i=0;\n\nfunction work(){\n\tvar numb = parseInt(toolokInput.value)\n\tif(!isNaN(numb)){\n\t\tvar toLookEntity=all[numb%all.length]\n\t\tvar toLookTransform = manager.get(my_lib_physics_transform_js__WEBPACK_IMPORTED_MODULE_8__[\"Transform\"], toLookEntity)[0]\n\t\tposition.x=toLookTransform.positions[0]\n\t\tposition.y=toLookTransform.positions[1]\n\t}\n\tdraw.clear()\n\tif(drawMass.checked)\n\t\tdrawGravity2()\n\tif(drawGrid.checked)\n\t\tgrid.draw(100,100,position)\n\tpoints.draw( position )\n\tif(drawFPS.checked)\n\t\tfps.draw()\n\tphysics.compute()\n\n\tall=all.filter(function(e, index){\n\t\tvar alive =  manager.alive(e)\n\t\tif(!alive && !isNaN(numb) && numb >= index){\n\t\t\ttoolokInput.value = numb - 1\n\t\t}\n\t\treturn alive\n\t})\n\tif(numb >= all.length){\n\t\ttoolokInput.value = all.length - 1\n\t}\n\tsetTimeout(work, fullSpeed.checked ? 0: 15)\n}\nwork()\n\n//# sourceURL=webpack:///./index.js?");

/***/ })

}]);