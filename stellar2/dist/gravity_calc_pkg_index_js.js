/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkstellar2"] = self["webpackChunkstellar2"] || []).push([["gravity_calc_pkg_index_js"],{

/***/ "../gravity_calc/pkg/index.js":
/*!************************************!*\
  !*** ../gravity_calc/pkg/index.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Gravity\": () => (/* reexport safe */ _index_bg_js__WEBPACK_IMPORTED_MODULE_0__.Gravity),\n/* harmony export */   \"View\": () => (/* reexport safe */ _index_bg_js__WEBPACK_IMPORTED_MODULE_0__.View),\n/* harmony export */   \"__wbindgen_throw\": () => (/* reexport safe */ _index_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_throw)\n/* harmony export */ });\n/* harmony import */ var _index_bg_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index_bg.js */ \"../gravity_calc/pkg/index_bg.js\");\n\n\n\n//# sourceURL=webpack://stellar2/../gravity_calc/pkg/index.js?");

/***/ }),

/***/ "../gravity_calc/pkg/index_bg.js":
/*!***************************************!*\
  !*** ../gravity_calc/pkg/index_bg.js ***!
  \***************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Gravity\": () => (/* binding */ Gravity),\n/* harmony export */   \"View\": () => (/* binding */ View),\n/* harmony export */   \"__wbindgen_throw\": () => (/* binding */ __wbindgen_throw)\n/* harmony export */ });\n/* harmony import */ var _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index_bg.wasm */ \"../gravity_calc/pkg/index_bg.wasm\");\n/* harmony import */ var _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__);\n/* module decorator */ module = __webpack_require__.hmd(module);\n\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachedUint8Memory0;\nfunction getUint8Memory0() {\n    if (cachedUint8Memory0.byteLength === 0) {\n        cachedUint8Memory0 = new Uint8Array(_index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.memory.buffer);\n    }\n    return cachedUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nfunction passArray8ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 1);\n    getUint8Memory0().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nlet cachedFloat32Memory0;\nfunction getFloat32Memory0() {\n    if (cachedFloat32Memory0.byteLength === 0) {\n        cachedFloat32Memory0 = new Float32Array(_index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.memory.buffer);\n    }\n    return cachedFloat32Memory0;\n}\n\nfunction passArrayF32ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 4);\n    getFloat32Memory0().set(arg, ptr / 4);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n/**\n*/\nclass Gravity {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Gravity.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbg_gravity_free(ptr);\n    }\n    /**\n    * @param {number} width\n    * @param {number} height\n    * @returns {Gravity}\n    */\n    static new(width, height) {\n        const ret = _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.gravity_new(width, height);\n        return Gravity.__wrap(ret);\n    }\n    /**\n    * @returns {number}\n    */\n    width() {\n        const ret = _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.gravity_width(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    height() {\n        const ret = _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.gravity_height(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} x\n    * @param {number} y\n    * @param {number} scale\n    */\n    set_view(x, y, scale) {\n        _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.gravity_set_view(this.ptr, x, y, scale);\n    }\n    /**\n    * @param {Uint8Array} data\n    * @param {Float32Array} planets\n    * @param {number} planets_length\n    * @param {Float32Array} view\n    */\n    draw_planets(data, planets, planets_length, view) {\n        try {\n            var ptr0 = passArray8ToWasm0(data, _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n            var len0 = WASM_VECTOR_LEN;\n            const ptr1 = passArrayF32ToWasm0(planets, _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n            const len1 = WASM_VECTOR_LEN;\n            const ptr2 = passArrayF32ToWasm0(view, _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n            const len2 = WASM_VECTOR_LEN;\n            _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.gravity_draw_planets(this.ptr, ptr0, len0, ptr1, len1, planets_length, ptr2, len2);\n        } finally {\n            data.set(getUint8Memory0().subarray(ptr0 / 1, ptr0 / 1 + len0));\n            _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_free(ptr0, len0 * 1);\n        }\n    }\n    /**\n    * @param {Uint8Array} data\n    * @param {number} length\n    */\n    mutate_data(data, length) {\n        try {\n            var ptr0 = passArray8ToWasm0(data, _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_malloc);\n            var len0 = WASM_VECTOR_LEN;\n            _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.gravity_mutate_data(this.ptr, ptr0, len0, length);\n        } finally {\n            data.set(getUint8Memory0().subarray(ptr0 / 1, ptr0 / 1 + len0));\n            _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_free(ptr0, len0 * 1);\n        }\n    }\n}\n/**\n*/\nclass View {\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbg_view_free(ptr);\n    }\n    /**\n    */\n    get x() {\n        const ret = _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbg_get_view_x(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    */\n    set x(arg0) {\n        _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbg_set_view_x(this.ptr, arg0);\n    }\n    /**\n    */\n    get y() {\n        const ret = _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbg_get_view_y(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    */\n    set y(arg0) {\n        _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbg_set_view_y(this.ptr, arg0);\n    }\n    /**\n    */\n    get scale() {\n        const ret = _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbg_get_view_scale(this.ptr);\n        return ret;\n    }\n    /**\n    */\n    set scale(arg0) {\n        _index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.__wbg_set_view_scale(this.ptr, arg0);\n    }\n}\n\nfunction __wbindgen_throw(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\ncachedFloat32Memory0 = new Float32Array(_index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.memory.buffer);\ncachedUint8Memory0 = new Uint8Array(_index_bg_wasm__WEBPACK_IMPORTED_MODULE_0__.memory.buffer);\n\n\n\n//# sourceURL=webpack://stellar2/../gravity_calc/pkg/index_bg.js?");

/***/ }),

/***/ "../gravity_calc/pkg/index_bg.wasm":
/*!*****************************************!*\
  !*** ../gravity_calc/pkg/index_bg.wasm ***!
  \*****************************************/
/***/ (() => {

eval("throw new Error(\"Module parse failed: Unexpected character '\\u0000' (1:0)\\nThe module seem to be a WebAssembly module, but module is not flagged as WebAssembly module for webpack.\\nBREAKING CHANGE: Since webpack 5 WebAssembly is not enabled by default and flagged as experimental feature.\\nYou need to enable one of the WebAssembly experiments via 'experiments.asyncWebAssembly: true' (based on async modules) or 'experiments.syncWebAssembly: true' (like webpack 4, deprecated).\\nFor files that transpile to WebAssembly, make sure to set the module type in the 'module.rules' section of the config (e. g. 'type: \\\"webassembly/async\\\"').\\n(Source code omitted for this binary file)\");\n\n//# sourceURL=webpack://stellar2/../gravity_calc/pkg/index_bg.wasm?");

/***/ })

}]);